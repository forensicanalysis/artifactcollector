
name: WindowsAvailableTimeZones
doc: Timezones available on a Windows system.
sources:
- type: REGISTRY_KEY
  attributes: {keys: ['HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones\*\*']}
supported_os: [Windows]
urls: ['https://github.com/libyal/winreg-kb/wiki/Time-zone-keys']
---
name: WindowsCodePage
doc: The code page of the system.
sources:
- type: REGISTRY_VALUE
  attributes:
    key_value_pairs:
      - {key: 'HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Nls\CodePage', value: 'ACP'}
provides: [code_page]
supported_os: [Windows]
urls: ['http://en.wikipedia.org/wiki/Windows_code_page']
---
name: WindowsComputerName
doc: The name of the system.
sources:
- type: REGISTRY_VALUE
  attributes:
    key_value_pairs:
      - {key: 'HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\ComputerName\ComputerName', value: 'ComputerName'}
supported_os: [Windows]
---
name: WindowsConfigSys
doc: Windows config.sys file
sources:
- type: FILE
  attributes:
    paths:
      - '%%environ_systemdrive%%\config.sys'
      - '%%environ_windir%%\config.nt'
    separator: '\'
supported_os: [Windows]
---
name: WindowsCredentialProviderFilters
doc: Windows Credential Provider Filters
sources:
- type: REGISTRY_KEY
  attributes:
    keys:
      - 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters\*'
      - 'HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters\*'
supported_os: [Windows]
urls: ['http://blog.leetsys.com/2012/01/02/capturing-windows-7-credentials-at-logon-using-custom-credential-provider/']
---
name: WindowsFirewallRules
doc: Command to list the configured Windows Firewall rules.
sources:
- type: COMMAND
  attributes:
    args: ["advfirewall", "firewall", "show", "rule", "name=all"]
    cmd: netsh.exe
labels: [System]
supported_os: [Windows]
---
name: WMIAccountUsersDomain
doc: |
  Fill out user AD domain information based on username.

  We expect this artifact to be collected with WindowsRegistryProfiles
  to supply the rest of the user information. This artifact optimizes retrieval
  of user information by limiting the WMI query to users for which we have
  a username for. Specifically this solves the issue that in a domain setting,
  querying for all users via WMI will give you the list of all local and domain
  accounts which means a large data transfer from an Active Directory server.
  This artifact relies on having the users.username field populated in the knowledge
  base. Unfortunately even limiting by username this query can be slow, and
  this artifact runs it for each user present on the system.
sources:
- type: WMI
  attributes: {query: SELECT * FROM Win32_UserAccount WHERE name='%%users.username%%'}
labels: [Users]
provides: [users.userdomain]
supported_os: [Windows]
urls: ['http://msdn.microsoft.com/en-us/library/windows/desktop/aa394507(v=vs.85).aspx']
---
name: WindowsRecycleBin
doc: Windows Recycle Bin (Recyler, $Recycle.Bin) files.
sources:
- type: FILE
  attributes:
    paths:
      - '\$Recycle.Bin\**'
      - '\Recycler\**'
    separator: '\'
labels: [Users]
supported_os: [Windows]
urls: ['http://www.forensicswiki.org/wiki/Windows#Recycle_Bin']
---
name: WindowsScheduledTasks
doc: Windows Scheduled Tasks.
sources:
- type: FILE
  attributes:
    paths:
      - '%%environ_systemroot%%\Tasks\**10'
      - '%%environ_systemroot%%\System32\Tasks\**10'
      - '%%environ_systemroot%%\SysWow64\Tasks\**10'
    separator: '\'
supported_os: [Windows]
urls: ['http://forensicswiki.org/wiki/Windows#Scheduled_Tasks']