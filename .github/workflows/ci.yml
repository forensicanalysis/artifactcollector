name: CI
on:
  push:
    branches: [ master ]
  pull_request:

jobs:

  artifactcollector:
    name: artifactcollector
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
      fail-fast: false
    steps:
      - name: Setup go 1.13
        uses: actions/setup-go@v1
        with: {go-version: '1.13'}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set system path
        run: echo "##[add-path]$(go env GOPATH)/bin"
        shell: bash
      - name: Download dependencies
        run: go mod download

      - name: Install golangci-lint & go-acc
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.19.1
          go get -u github.com/ory/go-acc
        shell: bash

      - name: Lint
        run: golangci-lint run --verbose --config test/.golangci.yml
        shell: bash
      - name: Test
        run: go-acc ./...
        shell: bash
      - name: Upload coverage
        env:
          CI: "true"
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.os == 'windows-latest'
        shell: bash

      - name: Setup node
        uses: actions/setup-node@v1
        with: {node-version: '10.x'}
      - name: Install bats
        run: npm install -g bats

      - name: Setup Build
        run: go generate
      - name: Add Windows syso File
        run: mv resources/artifactcollector.syso artifactcollector.syso
        if: matrix.os == 'windows-latest'
        shell: bash
      - name: Build
        run: |
          go build .
          go install .

      - name: Install forensicstore
        run: go get -u github.com/forensicanalysis/forensicstore
      - name: Windows bats test
        run: bats test/bats/artifactcollector.windows.bats
        if: matrix.os == 'windows-latest'
        shell: bash
      - name: UNIX bats test
        run: bats test/bats/artifactcollector.unix.bats
        if: matrix.os != 'windows-latest'
        shell: bash

      - name: Remove Windows syso File
        run: rm artifactcollector.syso
        if: matrix.os == 'windows-latest'
        shell: bash
      - name: Move Binary
        run: |
          mkdir bin
          mv artifactcollector* bin
        shell: bash

      - name: Upload
        uses: actions/upload-artifact@master
        with:
          name: artifactcollector ${{ matrix.os }}
          path: bin
