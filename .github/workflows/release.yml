name: Release

on:
  release:
    types: [published]

jobs:
  artifactcollector:
    name: artifactcollector
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Setup go 1.14
        uses: actions/setup-go@v2
        with: {go-version: '1.14'}
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Build
        run: go generate
      - name: Add Windows syso File
        run: mv resources/artifactcollector.syso artifactcollector.syso
        if: matrix.os == 'windows-latest'
        shell: bash
      - name: Build
        run: go build .

      - name: Pack UNIX
        run: zip -r ${{ matrix.os }}.zip artifactcollector
        shell: bash
        if: matrix.os != 'windows-latest'
      - name: Pack Windows
        run: 7z a windows.zip artifactcollector.exe
        shell: bash
        if: matrix.os == 'windows-latest'

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        shell: bash
        id: release

      - name: Upload Windows
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip
        if: matrix.os == 'windows-latest'
      - name: Upload macOS
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: macos.zip
          asset_content_type: application/zip
        if: matrix.os == 'macos-latest'
      - name: Upload Linux
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: linux.zip
          asset_content_type: application/zip
        if: matrix.os == 'ubuntu-latest'
