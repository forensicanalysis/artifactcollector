name: Release

on:
  release:
    types: [ published ]

jobs:
  artifactcollector:
    name: artifactcollector
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    defaults: { run: { shell: bash } }
    steps:
      - uses: actions/setup-go@v5
        with: { go-version: '1.23' }
      - uses: actions/checkout@v4


      - name: Add Windows syso File
        run: mv build/win/artifactcollector.syso artifactcollector.syso
        if: matrix.os == 'windows-latest'

      - run: make build

      - name: Pack UNIX
        run: zip -r ${{ matrix.os }}.zip artifactcollector
        if: matrix.os != 'windows-latest'
      - name: Pack Windows
        run: 7z a windows.zip artifactcollector.exe
        if: matrix.os == 'windows-latest'

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        id: release

      - id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip
        if: matrix.os == 'windows-latest'
      - id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: macos.zip
          asset_content_type: application/zip
        if: matrix.os == 'macos-latest'
      - id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: linux.zip
          asset_content_type: application/zip
        if: matrix.os == 'ubuntu-latest'

  win2k:
    name: artifactcollector (win2k)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with: { go-version: '1.23' }
      - uses: actions/checkout@v4

      - run: make build-win2k
      - run: zip -r artifactcollector2k.zip artifactcollector2k.exe
        working-directory: path/src/github.com/forensicanalysis/artifactcollector

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        id: release

      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./path/src/github.com/forensicanalysis/artifactcollector/artifactcollector2k.zip
          asset_name: windows2000.zip
          asset_content_type: application/zip

  winxp:
    name: artifactcollector (winxp)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with: { go-version: '1.23' }
      - uses: actions/checkout@v4

      - run: make build-winxp
      - run: zip -r artifactcollectorxp.zip artifactcollectorxp.exe

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        id: release

      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./artifactcollectorxp.zip
          asset_name: windowsxp.zip
          asset_content_type: application/zip
