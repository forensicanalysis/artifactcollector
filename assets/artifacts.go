package assets

import "github.com/forensicanalysis/artifactlib/goartifacts"

var Artifacts = []goartifacts.ArtifactDefinition{goartifacts.ArtifactDefinition{Name: "EsetAVQuarantine", Doc: "Eset Anti-Virus Quarantine (Infected) files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Application Support/ESET/esets/cache/quarantine/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MicrosoftAVQuarantine", Doc: "Microsoft Anti-Virus Quarantine (Infected) files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Microsoft\\Microsoft Antimalware\\Quarantine\\**", "%%environ_allusersappdata%%\\Microsoft\\Windows Defender\\Quarantine\\**"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsDefenderExclusions", Doc: "Directories, processes, and extensions configured not to be scanned by Windows Defender.\n\nCertain malware families (for example, Tofsee) are known to add\ndirectories to the Paths list in order to avoid being detected by\nWindows Defender.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows Defender\\Exclusions\\Paths\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows Defender\\Exclusions\\Processes\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows Defender\\Exclusions\\Extensions\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows Defender\\Exclusions\\TemporaryPaths\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://blog.malwarebytes.com/detections/pum-optional-msexclusion/", "https://answers.microsoft.com/en-us/protect/forum/all/windows-defender-how-to-remove-exclusions/2a0cc465-97b2-46ea-ae77-b87075ed124e", "https://blog.talosintelligence.com/2019/05/threat-roundup-0503-0510.html"}}, goartifacts.ArtifactDefinition{Name: "SophosAVLogs", Doc: "Sophos Anti-Virus log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Logs/Sophos*.log"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Sophos\\Sophos Anti-Virus\\Logs\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus", "Logs"}, SupportedOs: []string{"Darwin", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SophosAVQuarantine", Doc: "Sophos Anti-Virus Quarantine (Infected) files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Users/Shared/Infected/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Sophos\\Sophos Anti-Virus\\INFECTED\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus"}, SupportedOs: []string{"Darwin", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SymantecAVLogs", Doc: "Symantec Anti-Virus Log Files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Symantec\\Symantec Endpoint Protection\\*\\Data\\Logs\\*.log", "%%users.localappdata%%\\Symantec\\Symantec Endpoint Protection\\Logs\\*.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus", "Logs"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SymantecAVQuarantine", Doc: "Symantec Anti-Virus Quarantine (Infected) files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Symantec\\Symantec Endpoint Protection\\**5\\*.vbn"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Antivirus", "Logs"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "NodeJSPackageManagerCacheFiles", Doc: "Node JS package manager (NPM) cache files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.npm/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin", "Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\npm-cache\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string{"https://docs.npmjs.com/cli/cache"}}, goartifacts.ArtifactDefinition{Name: "MicrosoftOfficeMRU", Doc: "Microsoft Office Most Recently Used", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.microsoft.office.plist", "%%users.homedir%%/Library/Containers/com.microsoft.*/Data/Library/Preferences/com.microsoft.*.securebookmarks.plist"}, Separator: "/", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office\\*\\*\\File MRU", Value: "Item *"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office\\*\\*\\Place MRU", Value: "Item *"}}}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Windows"}, Urls: []string{"https://github.com/mac4n6/macMRU-Parser"}}, goartifacts.ArtifactDefinition{Name: "MicrosoftOutlookPABFiles", Doc: "Microsoft Outlook PAB Files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\Outlook\\*.pab", "%%users.userprofile%%\\Documents\\Outlook Files\\*.pab"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Mail"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Personal_Folder_File_(PAB,_PST,_OST)"}}, goartifacts.ArtifactDefinition{Name: "MicrosoftOutlookPSTFiles", Doc: "Microsoft Outlook PST Files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\Outlook\\*.pst", "%%users.userprofile%%\\Documents\\Outlook Files\\*.pst"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Mail"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Personal_Folder_File_(PAB,_PST,_OST)"}}, goartifacts.ArtifactDefinition{Name: "MicrosoftOutlookOSTFiles", Doc: "Microsoft Outlook OST Files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\Outlook\\*.ost", "%%users.userprofile%%\\Documents\\Outlook Files\\*.ost"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Mail"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Personal_Folder_File_(PAB,_PST,_OST)"}}, goartifacts.ArtifactDefinition{Name: "WinRARExternalViewer", Doc: "Executable run when a file is opened by WinRAR inside an archive.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\WinRAR\\Viewer\\", Value: "ExternalViewer"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2012/09/16/beyond-good-ol-run-key-part-2/", "http://acritum.com/software/manuals/winrar/html/helpinterfaceviewing.htm"}}, goartifacts.ArtifactDefinition{Name: "WinRARAVScan", Doc: "Executable run to scan a file when it is opened by WinRAR.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\WinRAR\\VirusScan\\", Value: "Name"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2012/09/16/beyond-good-ol-run-key-part-2/", "http://acritum.com/software/manuals/winrar/html/helpcommandsvirusscan.htm"}}, goartifacts.ArtifactDefinition{Name: "DefaultEntryPoint", Doc: "Windows Forensic Analysis", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"FOR500"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"BrowserCache", "BrowserHistory", "IPTablesRules", "LinuxAtJobs", "LinuxAuditLogs", "LinuxCronTabs", "LinuxHostnameFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"BrowserCache", "BrowserHistory", "MacOSAtJobs", "MacOSAuditLogFiles", "MacOSBashHistory", "MacOSCronTabs", "MacOSHostsFile", "MacOSLastlogFile", "MacOSMiscLogs", "MacOSRecentItems", "MacOSSystemLogFiles", "MacOSUserTrash"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "CloudStorageClients", Doc: "Multiple cloud storage client artifacts.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"DropboxClient", "GoogleDriveClient", "SkyDriveClient"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Cloud Storage"}, SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "DropboxClient", Doc: "Dropbox cloud storage client artifacts.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Dropbox\\*.db*", "%%users.localappdata%%\\Dropbox\\*.db*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.dropbox/*.db*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin", "Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Cloud Storage"}, SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Dropbox"}}, goartifacts.ArtifactDefinition{Name: "GoogleDriveClient", Doc: "Google Drive cloud storage client artifacts.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Google\\Drive\\snapshot.db", "%%users.localappdata%%\\Google\\Drive\\sync_config.db", "%%users.localappdata%%\\Google\\Drive\\sync_config.log*", "%%users.localappdata%%\\Google\\Drive\\user_default\\snapshot.db", "%%users.localappdata%%\\Google\\Drive\\user_default\\sync_config.db", "%%users.localappdata%%\\Google\\Drive\\user_default\\sync_config.log*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Google/Drive/snapshot.db", "%%users.homedir%%/Library/Application Support/Google/Drive/sync_config.db", "%%users.homedir%%/Library/Application Support/Google/Drive/sync_config.log*", "%%users.homedir%%/Library/Application Support/Google/Drive/user_default/snapshot.db", "%%users.homedir%%/Library/Application Support/Google/Drive/user_default/sync_config.db", "%%users.homedir%%/Library/Application Support/Google/Drive/user_default/sync_config.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Cloud Storage"}, SupportedOs: []string{"Darwin", "Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Google_Drive"}}, goartifacts.ArtifactDefinition{Name: "SkyDriveClient", Doc: "Microsoft Sky Drive cloud storage client artifacts.\n\nNote that Sky Drive was renamed to One Drive.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\SkyDrive\\logs\\*.log", "%%users.localappdata%%\\Microsoft\\SkyDrive\\setup\\logs\\*.log", "%%users.localappdata%%\\Microsoft\\SkyDrive\\settings\\ApplicationSettings.xml", "%%users.localappdata%%\\Microsoft\\SkyDrive\\settings\\*.dat", "%%users.localappdata%%\\Microsoft\\SkyDrive\\settings\\*.ini"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Cloud Storage"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://forensicswiki.org/wiki/One_Drive#Sky_Drive_client"}}, goartifacts.ArtifactDefinition{Name: "NfsExportsFile", Doc: "NFS Exports configuration", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/exports", "/private/etc/exports"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/exports"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SshdConfigFile", Doc: "Sshd configuration", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/ssh/sshd_config", "/private/etc/ssh/sshd_config"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/ssh/sshd_config"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SshUserConfigFile", Doc: "User ssh configuration file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.ssh/config"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "DockerContainerConfig", Doc: "Docker container configuration files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/lib/docker/containers/*/config.v2.json", "/var/lib/docker/containers/*/config.json"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Docker", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "GKEDockerContainerLogs", Doc: "Location where stdout and stderr from containers is logged in a Google Kubernetes Engine (GKE) environment.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/lib/docker/containers/*/*-json.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Docker", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "FOR500", Doc: "Windows Forensic Analysis", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsBrowserArtifacts", "WindowsProgramExecution", "WindowsDeletedFiles", "WindowsNetworkActivity", "WindowFileOpening"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://www.sans.org/security-resources/posters/windows-forensic-analysis/170/download"}}, goartifacts.ArtifactDefinition{Name: "WindowsBrowserArtifacts", Doc: "WindowsBrowserArtifacts", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsOpenSaveMRU", "SkypeMainDirectory", "BrowserCache", "BrowserHistory"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsProgramExecution", Doc: "Program Execution", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsActivitiesCache", "WindowsMostRecentApplication", "WindowsAppCompatCache", "WindowsAMCacheHveFile", "WindowsSystemResourceUsageMonitorDatabaseFile", "WindowsPrefetchFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsDeletedFiles", Doc: "Deleted Files", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsRecycleBin"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsNetworkActivity", Doc: "Network Activity", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsTimezone", "InternetExplorerCookies"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowFileOpening", Doc: "File Opening", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "AccountUsage", Doc: "Account Usage", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsSystemRegistryFiles", "WindowsXMLEventLogSecurity"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "ExternalDevice", Doc: "External Device", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsSetupApiLogs"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "HadoopAppRoot", Doc: "Location where Hadoop application files are stored", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/hadoop/yarn/system/rmstore/FSRMStateRoot/RMAppRoot/application_*/application_*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Hadoop"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "PythonDistInfo", Doc: "Python module files distributed in the dist-info format of PEP-0376\n(currently linux only).\n\ndist-info is always a directory that must contain METADATA, RECORD and\nINSTALLER. It may also contain REQUESTED.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.local/lib/python*/dist-packages/*.dist-info/*", "%%users.homedir%%/.local/lib/python*/site-packages/*.dist-info/*", "/usr/lib/python*/dist-packages/*.dist-info/*", "/usr/lib/python*/site-packages/*.dist-info/*", "/usr/lib64/python*/dist-packages/*.dist-info/*", "/usr/lib64/python*/site-packages/*.dist-info/*", "/usr/local/lib/python*/dist-packages/*.dist-info/*", "/usr/local/lib/python*/site-packages/*.dist-info/*", "/usr/local/lib64/python*/dist-packages/*.dist-info/*", "/usr/local/lib64/python*/site-packages/*.dist-info/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.python.org/dev/peps/pep-0376/"}}, goartifacts.ArtifactDefinition{Name: "PythonEggInfo", Doc: "Python module files distributed in .egg formats (currently linux only).\n\nPython eggs can have multiple formats, as described by setuptools.\n\n.egg files can be either a zipfile or a directory that contains an info file.\n.egg-info files can be either a directory or a file. If they are directories,\nthey should contain a MANIFEST that identifies the installed module.\n\nPEP-0370 describes a default install location for per-user modules.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.local/lib/python*/site-packages/*.egg", "%%users.homedir%%/.local/lib/python*/site-packages/*.egg-info", "%%users.homedir%%/.cache/pip/*.egg", "%%users.homedir%%/.cache/pip/*.egg-info", "/usr/lib/python*/dist-packages/*.egg", "/usr/lib/python*/dist-packages/*.egg-info", "/usr/lib/python*/site-packages/*.egg", "/usr/lib/python*/site-packages/*.egg-info", "/usr/lib64/python*/dist-packages/*.egg", "/usr/lib64/python*/dist-packages/*.egg-info", "/usr/lib64/python*/site-packages/*.egg", "/usr/lib64/python*/site-packages/*.egg-info", "/usr/local/lib/python*/dist-packages/*.egg", "/usr/local/lib/python*/dist-packages/*.egg-info", "/usr/local/lib/python*/site-packages/*.egg", "/usr/local/lib/python*/site-packages/*.egg-info", "/usr/local/lib64/python*/dist-packages/*.egg", "/usr/local/lib64/python*/dist-packages/*.egg-info", "/usr/local/lib64/python*/site-packages/*.egg", "/usr/local/lib64/python*/site-packages/*.egg-info", "/usr/share/pyshared/*.egg", "/usr/share/pyshared/*.egg-info", "%%users.homedir%%/.local/lib/python*/site-packages/*.egg/*", "%%users.homedir%%/.local/lib/python*/site-packages/*.egg-info/*", "%%users.homedir%%/.cache/pip/*.egg/*", "%%users.homedir%%/.cache/pip/*.egg-info/*", "/usr/lib/python*/dist-packages/*.egg/*", "/usr/lib/python*/dist-packages/*.egg-info/*", "/usr/lib/python*/site-packages/*.egg/*", "/usr/lib/python*/site-packages/*.egg-info/*", "/usr/lib64/python*/dist-packages/*.egg/*", "/usr/lib64/python*/dist-packages/*.egg-info/*", "/usr/lib64/python*/site-packages/*.egg/*", "/usr/lib64/python*/site-packages/*.egg-info/*", "/usr/local/lib/python*/dist-packages/*.egg/*", "/usr/local/lib/python*/dist-packages/*.egg-info/*", "/usr/local/lib/python*/site-packages/*.egg/*", "/usr/local/lib/python*/site-packages/*.egg-info/*", "/usr/local/lib64/python*/dist-packages/*.egg/*", "/usr/local/lib64/python*/dist-packages/*.egg-info/*", "/usr/local/lib64/python*/site-packages/*.egg/*", "/usr/local/lib64/python*/site-packages/*.egg-info/*", "/usr/share/pyshared/*.egg/*", "/usr/share/pyshared/*.egg-info/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://pythonhosted.org/setuptools/formats.html", "https://www.python.org/dev/peps/pep-0370/"}}, goartifacts.ArtifactDefinition{Name: "PythonModuleInfo", Doc: "Python module installation information.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"PythonDistInfo", "PythonEggInfo", "PythonWheelInfo"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string(nil), Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "PythonWheelInfo", Doc: "Python module files distributed in the wheel format (currently linux only).\n\nZip archives with the .whl extension.\n\nWheels are installed per the standard installer described in PEP-0376, so\nshould mostly be discoverable as dist-info entries.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/usr/share/python-wheels/*.whl", "%%users.homedir%%/.cache/pip/wheels/*.whl"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://wheel.readthedocs.org/en/latest/", "http://pip.readthedocs.org/en/stable/reference/pip_install/"}}, goartifacts.ArtifactDefinition{Name: "RubyGems", Doc: "Ruby Gems (currently linux only).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.gem/ruby/**2/*.gemspec", "/var/lib/gems/**2/*.gemspec", "/usr/share/rubygems-integration/**2/*.gemspec"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string{"http://guides.rubygems.org"}}, goartifacts.ArtifactDefinition{Name: "SkypeChatSync", Doc: "Chat Sync Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Skype/*/chatsync/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Skype"}}, goartifacts.ArtifactDefinition{Name: "SkypeDb", Doc: "Main Skype database", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Skype/*/Main.db"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Skype"}}, goartifacts.ArtifactDefinition{Name: "SkypeMainDirectory", Doc: "Skype Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Skype/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "SkypePreferences", Doc: "Skype Preferences and Recent Searches", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.skype.skype.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Skype"}}, goartifacts.ArtifactDefinition{Name: "SkypeUserProfile", Doc: "Skype User profile", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Skype/*/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Skype"}}, goartifacts.ArtifactDefinition{Name: "JavaCacheFiles", Doc: "Java Plug-in cache.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.java/deployment/cache/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Caches/Java/cache/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Sun\\Java\\Deployment\\cache\\**", "%%users.localappdata_low%%\\Sun\\Java\\Deployment\\cache\\**"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "KasperskyCaretoDarwinFiles", Doc: "Darwin Careto IOCs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Applications/.DS_Store.app/**10", "/Library/LaunchAgents/com.apple.launchport.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string{"http://www.securelist.com/en/downloads/vlpdfs/unveilingthemask_v1.0.pdf"}}, goartifacts.ArtifactDefinition{Name: "KasperskyCaretoIndicators", Doc: "Kaspersky Careto Indicators.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"KasperskyCaretoWindowsFiles", "KasperskyCaretoWindowsRegKeys", "KasperskyCaretoDarwinFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Darwin"}, Urls: []string{"http://www.securelist.com/en/downloads/vlpdfs/unveilingthemask_v1.0.pdf"}}, goartifacts.ArtifactDefinition{Name: "KasperskyCaretoWindowsFiles", Doc: "Windows Careto IOCs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\objframe.dll", "%%environ_systemroot%%\\System32\\shlink32.dll", "%%environ_systemroot%%\\System32\\shlink64.dll", "%%environ_systemroot%%\\System32\\cdllait32.dll", "%%environ_systemroot%%\\System32\\cdllait64.dll", "%%environ_systemroot%%\\System32\\cdlluninstallws32.dll", "%%environ_systemroot%%\\System32\\cdlluninstallws64.dll", "%%environ_systemroot%%\\System32\\cdlluninstallsgh32.dll", "%%environ_systemroot%%\\System32\\cdlluninstallsgh64.dll", "%%environ_systemroot%%\\System32\\c_50225.nls", "%%environ_systemroot%%\\System32\\c_50227.nls", "%%environ_systemroot%%\\System32\\c_50229.nls", "%%environ_systemroot%%\\System32\\c_51932.nls", "%%environ_systemroot%%\\System32\\c_51936.nls", "%%environ_systemroot%%\\System32\\c_51949.nls", "%%environ_systemroot%%\\System32\\c_51950.nls", "%%environ_systemroot%%\\System32\\c_57002.nls", "%%environ_systemroot%%\\System32\\c_57006.nls", "%%environ_systemroot%%\\System32\\c_57008.nls", "%%environ_systemroot%%\\System32\\c_57010.nls", "%%environ_systemroot%%\\System32\\cdgext32.dll", "%%environ_systemroot%%\\System32\\cfgbkmgrs.dll", "%%environ_systemroot%%\\System32\\cfgmgr64.dll", "%%environ_systemroot%%\\System32\\comsvrpcs.dll", "%%environ_systemroot%%\\System32\\d3dx8_20.dll", "%%environ_systemroot%%\\System32\\dllcomm.dll", "%%environ_systemroot%%\\System32\\drivers\\wmimgr.sys", "%%environ_systemroot%%\\System32\\drvinfo.bin", "%%environ_systemroot%%\\System32\\FCache.bin", "%%environ_systemroot%%\\System32\\FFExtendedCommand.dll", "%%environ_systemroot%%\\System32\\gpktcsp32.dll", "%%environ_systemroot%%\\System32\\HPQueue.bin", "%%environ_systemroot%%\\System32\\LPQueue.bin", "%%environ_systemroot%%\\System32\\mdwmnsp.dll", "%%environ_systemroot%%\\System32\\rpcdist.dll", "%%environ_systemroot%%\\System32\\scsvrft.dll", "%%environ_systemroot%%\\System32\\sdptbw.dll", "%%environ_systemroot%%\\System32\\slbkbw.dll", "%%environ_systemroot%%\\System32\\skypeie6plugin.dll", "%%environ_systemroot%%\\System32\\wmspdmgr.dll", "%%environ_systemroot%%\\System32\\mfcn30.dll", "%%environ_systemroot%%\\System32\\siiw9x.dll", "%%environ_systemroot%%\\System32\\nmwcdlog.dll", "%%environ_systemroot%%\\System32\\WifiScan.dll", "%%environ_systemroot%%\\System32\\awview32.dll", "%%environ_systemroot%%\\System32\\awcodc32.dll", "%%users.temp%%\\~DF01AC74D8BE15EE01.tmp", "%%users.temp%%\\~DF23BF45A473C42B56.tmp", "%%users.temp%%\\~DFA0528CD81300F372.tmp", "%%users.temp%%\\~DF8471938479DA49221.tmp", "%%users.appdata%%\\microsoft\\c_27803.nls", "%%users.appdata%%\\microsoft\\objframe.dll", "%%users.appdata%%\\microsoft\\shmgr.dll"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.securelist.com/en/downloads/vlpdfs/unveilingthemask_v1.0.pdf"}}, goartifacts.ArtifactDefinition{Name: "KasperskyCaretoWindowsRegKeys", Doc: "Windows Careto IOCs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\WindowsUpdate", Value: "CISCNF4654"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\WindowsUpdate", Value: "CISCNF0654"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\WindowsUpdate", Value: "CISCNF4654"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\WindowsUpdate", Value: "CISCNF0654"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\\\CLSID\\{ECD4FC4D-521C-11D0-B792-00A0C90312E1}", Value: "InprocServer32"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\{E6BB64BE-0618-4353-9193-0AFE606D6F0C}", Value: "InprocServer32"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.securelist.com/en/downloads/vlpdfs/unveilingthemask_v1.0.pdf"}}, goartifacts.ArtifactDefinition{Name: "AnacronFiles", Doc: "Anacron files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/anacrontab", "/etc/cron.daily/*", "/etc/cron.hourly/*", "/etc/cron.monthly/*", "/etc/cron.weekly/*", "/var/spool/anacron/cron.daily", "/var/spool/anacron/cron.hourly", "/var/spool/anacron/cron.monthly", "/var/spool/anacron/cron.weekly"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "APTSources", Doc: "APT package sources list", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/apt/sources.list", "/etc/apt/sources.list.d/*.list"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://manpages.ubuntu.com/manpages/trusty/en/man5/sources.list.5.html"}}, goartifacts.ArtifactDefinition{Name: "APTTrustKeys", Doc: "APT trusted keys", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/apt/trusted.gpg", "/etc/apt/trusted.gpg.d/*.gpg", "/etc/apt/trustdb.gpg", "/usr/share/keyrings/*.gpg"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://wiki.debian.org/SecureApt"}}, goartifacts.ArtifactDefinition{Name: "CronAtAllowDenyFiles", Doc: "Files containing users authorised to run cron or at jobs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/cron.allow", "/etc/cron.deny", "/etc/at.allow", "/etc/at.deny"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://manpages.ubuntu.com/manpages/saucy/man5/at.allow.5.html", "http://manpages.ubuntu.com/manpages/precise/en/man1/crontab.1.html"}}, goartifacts.ArtifactDefinition{Name: "DebianPackagesLogFiles", Doc: "Linux dpkg log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/dpkg.log*", "/var/log/apt/history.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "DebianPackagesStatus", Doc: "Linux dpkg status file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/lib/dpkg/status"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "DebianVersion", Doc: "Debian version information.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/debian_version"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "os_release", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "DNSResolvConfFile", Doc: "DNS Resolver configuration file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/resolv.conf"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://man7.org/linux/man-pages/man5/resolv.conf.5.html"}}, goartifacts.ArtifactDefinition{Name: "HostAccessPolicyConfiguration", Doc: "Linux files related to host access policy configuration.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hosts.allow", "/etc/hosts.deny"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "IPTablesRules", Doc: "List IPTables rules.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/sbin/iptables", Args: []string{"-L", "-n", "-v"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "KernelModules", Doc: "Kernel modules to be loaded on boot.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/modules.conf", "/etc/modprobe.d/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxAtJobs", Doc: "Linux at jobs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/spool/at/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxAuditLogs", Doc: "Linux audit log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/audit/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxAuthLogs", Doc: "Linux auth log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/auth.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxCronLogs", Doc: "Linux cron log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/cron.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxCronTabs", Doc: "Crontab files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/crontab", "/etc/cron.d/*", "/var/spool/cron/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxDaemonLogFiles", Doc: "Linux daemon log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/daemon.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxDistributionRelease", Doc: "Linux distribution release information of non-LSB compliant systems.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/enterprise-release", "/etc/oracle-release", "/etc/redhat-release", "/etc/system-release"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "os_release", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxDSDTTable", Doc: "Linux file containing DSDT table.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/sys/firmware/acpi/tables/DSDT"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/acpi/initrd_table_override.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxFstab", Doc: "Linux fstab file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/fstab"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://en.wikipedia.org/wiki/Fstab"}}, goartifacts.ArtifactDefinition{Name: "LinuxGrubConfiguration", Doc: "Linux grub configuration file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/boot/grub/grub.cfg", "/boot/grub2/grub.cfg"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://en.wikipedia.org/wiki/GNU_GRUB"}}, goartifacts.ArtifactDefinition{Name: "LinuxHostnameFile", Doc: "Linux hostname file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hostname"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxInitrdFiles", Doc: "Initrd (initramfs) files in /boot/ executed on startup.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/boot/initramfs*", "/boot/initrd*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://en.wikipedia.org/wiki/Initrd", "https://www.kernel.org/doc/Documentation/initrd.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxIssueFile", Doc: "Linux prelogin message and identification (issue) file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/issue", "/etc/issue.net"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://linux.die.net/man/5/issue"}}, goartifacts.ArtifactDefinition{Name: "LinuxKernelLogFiles", Doc: "Linux kernel log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/kern.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxLastlogFile", Doc: "Linux lastlog file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/lastlog"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxLoaderSystemPreloadFile", Doc: "Linux dynamic linker/loader system-wide preload file (ld.so.preload).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/ld.so.preload"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://man7.org/linux/man-pages/man8/ld.so.8.html"}}, goartifacts.ArtifactDefinition{Name: "LinuxLSBInit", Doc: "Linux LSB-style init scripts.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/init.d/*", "/etc/insserv.conf", "/etc/insserv.conf.d/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://wiki.debian.org/LSBInitScripts"}}, goartifacts.ArtifactDefinition{Name: "LinuxLocalTime", Doc: "Local time zone configuation", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/localtime"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxLSBRelease", Doc: "Linux Standard Base (LSB) release information", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/lsb-release"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "os_release", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://linux.die.net/man/1/lsb_release"}}, goartifacts.ArtifactDefinition{Name: "LinuxMessagesLogFiles", Doc: "Linux messages log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/messages*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxMountCmd", Doc: "Linux output of mount", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/bin/mount", Args: []string{}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxMountInfo", Doc: "Linux mount options.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"LinuxFstab", "LinuxProcMounts"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxPamConfigs", Doc: "Configuration files for PAM.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/pam.conf", "/etc/pam.d", "/etc/pam.d/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://www.linux-pam.org/"}}, goartifacts.ArtifactDefinition{Name: "LinuxPasswdFile", Doc: "Linux passwd file.\n\nA passwd file consist of colon seperated values in the format:\nusername:password:uid:gid:full name:home directory:shell\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/passwd"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.username", Regex: "(.*?):.*", WMIKey: ""}, goartifacts.Provide{Key: "users.homedir", Regex: ".*:(.*?):.*", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxHome", Doc: "Users directories in /home", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/home/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.username", Regex: "/home/([^/]+)", WMIKey: ""}, goartifacts.Provide{Key: "users.homedir", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxReleaseInfo", Doc: "Release information for Linux platforms.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"LinuxDistributionRelease", "LinuxLSBRelease", "LinuxSystemdOSRelease"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "os_release", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxRsyslogConfigs", Doc: "Linux rsyslog configurations.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/rsyslog.conf", "/etc/rsyslog.d", "/etc/rsyslog.d/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://www.rsyslog.com/doc/rsyslog_conf.html"}}, goartifacts.ArtifactDefinition{Name: "LinuxScheduleFiles", Doc: "All Linux job scheduling files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"AnacronFiles", "LinuxCronTabs", "LinuxAtJobs"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxServices", Doc: "Services running on a Linux system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"LinuxXinetd", "LinuxLSBInit", "LinuxSysVInit", "LinuxSystemdServices"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxSSDTTables", Doc: "Linux files containing SSDT table.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/sys/firmware/acpi/tables/SSDT*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/acpi/initrd_table_override.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxSysLogFiles", Doc: "Linux syslog log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/syslog.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxSyslogNgConfigs", Doc: "Linux syslog-ng configurations.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/syslog-ng/syslog-ng.conf", "/etc/syslog-ng/conf-d/*.conf"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://linux.die.net/man/5/syslog-ng.conf"}}, goartifacts.ArtifactDefinition{Name: "LinuxSystemdOSRelease", Doc: "Linux systemd /etc/os-release file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/os-release", "/usr/lib/os-release"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "os_release", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.freedesktop.org/software/systemd/man/os-release.html"}}, goartifacts.ArtifactDefinition{Name: "LinuxSystemdServices", Doc: "Linux systemd service unit files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/systemd/system.control/*.service", "/etc/systemd/systemd.attached/*.service", "/etc/systemd/system/*.service", "/etc/systemd/user/*.service", "/lib/systemd/system/*.service", "/lib/systemd/user/*.service", "/run/systemd/generator.early/*.service", "/run/systemd/generator.late/*.service", "/run/systemd/generator/*.service", "/run/systemd/system.control/*.service", "/run/systemd/systemd.attached/*.service", "/run/systemd/system/*.service", "/run/systemd/transient/*.service", "/run/systemd/user/*.service", "/run/user/*/systemd/generator.early/*.service", "/run/user/*/systemd/generator.late/*.service", "/run/user/*/systemd/generator/*.service", "/run/user/*/systemd/transient/*.service", "/run/user/*/systemd/user.control/*.service", "/run/user/*/systemd/user/*.service", "/usr/lib/systemd/system/*.service", "/usr/lib/systemd/user/*.service", "%%users.homedir%%/.config/systemd/user.control/*.service", "%%users.homedir%%/.config/systemd/user/*.service", "%%users.homedir%%/.local/share/systemd/user/*.service"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://https://www.freedesktop.org/software/systemd/man/systemd.unit.html#System%20Unit%20Search%20Path"}}, goartifacts.ArtifactDefinition{Name: "LinuxSysVInit", Doc: "Services started by sysv-style init scripts.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/rc*.d", "/etc/rc*.d/*", "/etc/rc.d/rc*.d/*", "/etc/rc.d/init.d/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://savannah.nongnu.org/projects/sysvinit", "http://docs.oracle.com/cd/E37670_01/E41138/html/ol_svcscripts.html"}}, goartifacts.ArtifactDefinition{Name: "LinuxTimezoneFile", Doc: "Linux timezone file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/timezone"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxUtmpFiles", Doc: "Linux btmp, utmp and wtmp login record files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/btmp", "/var/log/wtmp", "/var/run/utmp"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://github.com/libyal/dtformats/blob/master/documentation/Utmp%20login%20records%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "LinuxWtmp", Doc: "Linux wtmp login record file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/wtmp"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://github.com/libyal/dtformats/blob/master/documentation/Utmp%20login%20records%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "LinuxXinetd", Doc: "Linux xinetd configurations.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/xinetd.conf", "/etc/xinetd.d/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://en.wikipedia.org/wiki/Xinetd"}}, goartifacts.ArtifactDefinition{Name: "ListProcessesPsCommand", Doc: "Full process listing via the 'ps' command.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/bin/ps", Args: []string{"-ef"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string{"https://gitlab.com/procps-ng/procps"}}, goartifacts.ArtifactDefinition{Name: "LoadedKernelModules", Doc: "Linux output of lsmod.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/sbin/lsmod", Args: []string{}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LoginPolicyConfiguration", Doc: "Linux files related to login policy configuration.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/netgroup", "/etc/nsswitch.conf", "/etc/passwd", "/etc/shadow", "/etc/security/access.conf", "/root/.k5login"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "NetgroupConfiguration", Doc: "Linux netgroup configuration.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/netgroup"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "NtpConfFile", Doc: "The configuration file for ntpd. e.g. ntp.conf.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/ntp.conf"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.freebsd.org/cgi/man.cgi?query=ntp.conf&sektion=5"}}, goartifacts.ArtifactDefinition{Name: "PCIDevicesInfoFiles", Doc: "Info and config files for PCI devices located on the system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/sys/bus/pci/devices/*/vendor", "/sys/bus/pci/devices/*/device", "/sys/bus/pci/devices/*/class", "/sys/bus/pci/devices/*/config"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-bus-pci", "https://www.kernel.org/doc/Documentation/filesystems/sysfs-pci.txt", "https://wiki.debian.org/HowToIdentifyADevice/PCI"}}, goartifacts.ArtifactDefinition{Name: "SSHHostPubKeys", Doc: "SSH host public keys", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/ssh/ssh_host_*_key.pub"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication", "Configuration Files"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "ThumbnailCacheFolder", Doc: "Thumbnail cache folder.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.thumbnails/**3"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "YumSources", Doc: "Yum package sources list", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/yum.conf", "/etc/yum.repos.d/*.repo"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/sec-Configuring_Yum_and_Yum_Repositories.html"}}, goartifacts.ArtifactDefinition{Name: "ZeitgeistDatabase", Doc: "Zeitgeist user activity database.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.local/share/zeitgeist/activity.sqlite", "%%users.homedir%%/.local/share/zeitgeist/activity.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string{"http://forensicswiki.org/wiki/Zeitgeist"}}, goartifacts.ArtifactDefinition{Name: "LinuxASLREnabled", Doc: "Kernel ASLR state.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/randomize_va_space"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxIgnoreICMPBroadcasts", Doc: "Whether the system ignores ICMP pings.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/net/ipv4/icmp_echo_ignore_broadcasts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxKernelBootloader", Doc: "Bootloader state acquired from the kernel.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/bootloader_type", "/proc/sys/kernel/bootloader_version"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxKernelModuleRestrictions", Doc: "Module loading controls.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/kexec_load_disabled", "/proc/sys/kernel/modules_disabled"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxKernelModuleTaintStatus", Doc: "Taint state of loaded modules (binary blobs, unsigned modules etc).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/tainted"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxNetworkIpForwardingState", Doc: "IP forwarding states.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/net/ipv*/conf/*/forwarding", "/proc/sys/net/ipv4/conf/*/mc_forwarding", "/proc/sys/net/ipv4/ip_forward"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxNetworkPathFilteringSettings", Doc: "States that determine how the system responds to route manipulation.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/net/ipv*/conf/*/accept_source_route", "/proc/sys/net/ipv4/conf/*/rp_filter", "/proc/sys/net/ipv4/conf/*/log_martians"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxNetworkRedirectState", Doc: "Redirect send/receive states.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/net/ipv*/conf/*/accept_redirects", "/proc/sys/net/ipv4/conf/*/secure_redirects", "/proc/sys/net/ipv4/conf/*/send_redirects"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxProcArp", Doc: "ARP table via /proc/net/arp.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/net/arp"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxProcMounts", Doc: "Current mounted filesystems.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/mounts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/filesystems/proc.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxProcSysHardeningSettings", Doc: "Linux sysctl settings obtained from /proc/sys.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"LinuxASLREnabled", "LinuxIgnoreICMPBroadcasts", "LinuxKernelBootloader", "LinuxKernelModuleTaintStatus", "LinuxKernelModuleRestrictions", "LinuxNetworkIpForwardingState", "LinuxNetworkPathFilteringSettings", "LinuxNetworkRedirectState", "LinuxRestrictedDmesgReadPrivileges", "LinuxRestrictedKernelPointerReadPrivileges", "LinuxSecureSuidCoreDumps", "LinuxSecureFsLinks", "LinuxSyncookieState"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "LinuxRestrictedDmesgReadPrivileges", Doc: "Restrict whether non-privileged users can read dmesg.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/dmesg_restrict"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxRestrictedKernelPointerReadPrivileges", Doc: "Memory address obfuscation settings.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/kernel/kptr_restrict"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/kernel.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxSecureFsLinks", Doc: "Security controls to restrict operations on links in world writable directories.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/fs/protected_hardlinks", "/proc/sys/fs/protected_symlinks"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/fs.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxSecureSuidCoreDumps", Doc: "Security controls for suid core dumps.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/fs/suid_dumpable"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl/fs.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxSyncookieState", Doc: "Whether the system uses syncookies.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/proc/sys/net/ipv4/tcp_syncookies"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Network", "System"}, SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt"}}, goartifacts.ArtifactDefinition{Name: "LinuxSysctlCmd", Doc: "Linux output of systctl -a.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/sbin/sysctl", Args: []string{"-a"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string{"https://www.kernel.org/doc/Documentation/sysctl"}}, goartifacts.ArtifactDefinition{Name: "MacOSAppleSystemLogFiles", Doc: "Apple system log (ASL) files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/asl/*", "/var/log/asl/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSApplications", Doc: "Applications", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Applications/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSApplicationsRecentItems", Doc: "Recent Items application specific", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/*LSSharedFileList.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Recent_Items"}}, goartifacts.ArtifactDefinition{Name: "MacOSApplicationSupport", Doc: "Application Support Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Misc."}}, goartifacts.ArtifactDefinition{Name: "MacOSAtJobs", Doc: "MacOS at jobs", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/usr/lib/cron/jobs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Info_Misc.", "https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/at.1.html#//apple_ref/doc/man/1/at"}}, goartifacts.ArtifactDefinition{Name: "MacOSAuditLogFiles", Doc: "Audit log files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/audit/*", "/var/audit/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSBashHistory", Doc: "Terminal Commands History", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.bash_history"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSBashSessions", Doc: "Terminal Commands Sessions", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.bash_sessions/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://www.swiftforensics.com/2018/05/bash-sessions-in-macos.html"}}, goartifacts.ArtifactDefinition{Name: "MacOSBluetoothPlistFile", Doc: "Bluetooth preferences and paired device information plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/com.apple.Bluetooth.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSCoreAnalyticsFiles", Doc: "macOS 10.13 (High Sierra) CoreAnalytics log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Logs/DiagnosticReports/*.core_analytics", "/private/var/db/analyticsd/aggregates/*", "/var/db/analyticsd/aggregates/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X#Diagnostic_Reports", "https://www.crowdstrike.com/blog/i-know-what-you-did-last-month-a-new-artifact-of-execution-on-macos-10-13/"}}, goartifacts.ArtifactDefinition{Name: "MacOSCronTabs", Doc: "Cron tabs", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/crontab", "/private/etc/crontab", "/usr/lib/cron/tabs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Info_Misc."}}, goartifacts.ArtifactDefinition{Name: "MacOSDock", Doc: "Dock database", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.Dock.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSGlobalPreferencesPlistFile", Doc: "Global Preferences plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/.GlobalPreferences.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSHostsFile", Doc: "Hosts file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hosts", "/private/etc/hosts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Networking"}}, goartifacts.ArtifactDefinition{Name: "MacOSiCloudAccounts", Doc: "iCloud Accounts", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/iCloud/Accounts/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Cloud", "ExternalAccount"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSiCloudPreferences", Doc: "iCloud user preferences", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/MobileMeAccounts.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Cloud", "ExternalAccount"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSiDevices", Doc: "Attached iDevices", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.iPod.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "External Media"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSInstallationHistory", Doc: "Software Installation History", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Receipts/InstallHistory.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Software_Installation"}}, goartifacts.ArtifactDefinition{Name: "MacOSInstallationLogFile", Doc: "Installation log file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/install.log", "/var/log/install.log"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSiOSBackupInfo", Doc: "iOS device backup information", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/MobileSync/Backup/*/info.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "iOS"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#iDevice_Backup"}}, goartifacts.ArtifactDefinition{Name: "MacOSiOSBackupManifest", Doc: "iOS device backup apps information", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/MobileSync/Backup/*/Manifest.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "iOS"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#iDevice_Backup"}}, goartifacts.ArtifactDefinition{Name: "MacOSiOSBackupMbdb", Doc: "iOS device backup files information", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/MobileSync/Backup/*/Manifest.mdbd"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "iOS"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#iDevice_Backup"}}, goartifacts.ArtifactDefinition{Name: "MacOSiOSBackupsMainDirectory", Doc: "iOS device backups directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/MobileSync/Backup/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "iOS"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#iDevice_Backup"}}, goartifacts.ArtifactDefinition{Name: "MacOSiOSBackupStatus", Doc: "iOS device backup status information", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/MobileSync/Backup/*/Status.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "iOS"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#iDevice_Backup"}}, goartifacts.ArtifactDefinition{Name: "MacOSKeychains", Doc: "Keychain Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Keychains/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Misc."}}, goartifacts.ArtifactDefinition{Name: "MacOSKeyboardLayoutPlistFile", Doc: "Keyboard layout plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/com.apple.HIToolbox.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSKextFiles", Doc: "Kernel extension (.kext) files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/System/Library/Extensions/*", "/Library/Extensions/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Kernel_Extension"}}, goartifacts.ArtifactDefinition{Name: "MacOSDuetKnowledgeBase", Doc: "KnowledgeC User and Application usage database", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Knowledge/knowledgeC.db", "/private/var/db/CoreDuet/Knowledge/knowledgeC.db", "/var/db/CoreDuet/Knowledge/knowledgeC.db"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://www.mac4n6.com/blog/2018/8/5/knowledge-is-power-using-the-knowledgecdb-database-on-macos-and-ios-to-determine-precise-user-and-application-usage"}}, goartifacts.ArtifactDefinition{Name: "MacOSLaunchAgentsPlistFiles", Doc: "Launch Agents plist files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/LaunchAgents/*", "/System/Library/LaunchAgents/*", "%%users.homedir%%/Library/LaunchAgents/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Autorun_Locations"}}, goartifacts.ArtifactDefinition{Name: "MacOSLaunchDaemonsPlistFiles", Doc: "Launch Daemons plist files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/LaunchDaemons/*", "/System/Library/LaunchDaemons/*", "%%users.homedir%%/Library/LaunchDaemons/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Autorun_Locations"}}, goartifacts.ArtifactDefinition{Name: "MacOSLastlogFile", Doc: "Mac OS X lastlog file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/lastlog", "/var/log/lastlog"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSLoadedKexts", Doc: "MacOS Loaded Kernel Extensions.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/usr/sbin/kextstat", Args: []string{}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSLocalTime", Doc: "Local time zone configuation", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/localtime", "/private/etc/localtime"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Info_Misc."}}, goartifacts.ArtifactDefinition{Name: "MacOSLoginWindowPlistFile", Doc: "Log-in Window information plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/com.apple.loginwindow.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Authentication"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailAccounts", Doc: "Mail Accounts. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/MailData/Accounts.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailBackupTOC", Doc: "Mail Backup Table of Content. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/MailData/BackupTOC.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailboxes", Doc: "Mail Mailbox Directory. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/Mailboxes/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailDownloadAttachments", Doc: "Mail Downloads Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailEnvelopIndex", Doc: "Mail Envelope Index. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/MailData/Envelope Index"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailIMAP", Doc: "Mail IMAP Synched Mailboxes. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/IMAP-*/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailMainDirectory", Doc: "Mail Main Folder. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailOpenedAttachments", Doc: "Mail Opened Attachments", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/MailData/OpenedAttachmentsV2.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailPOP", Doc: "Mail POP Synched Mailboxes. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/POP-*/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailPreferences", Doc: "Mail Preferences", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.Mail.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailRecentContacts", Doc: "Mail Recent Contacts", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/AddressBook/MailRecents-v4.abcdmr"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMailSignatures", Doc: "Mail Signatures by Account. Until now only V2, V3 and V5 have been observed.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Mail/V[0-9]/MailData/Signatures/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software", "Mail"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Mail"}}, goartifacts.ArtifactDefinition{Name: "MacOSMiscLogs", Doc: "Misc. Logs", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Logs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSMountedDMGs", Doc: "MacOS Mounted DMG files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/usr/bin/hdiutil", Args: []string{"info"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSNotificationCenter", Doc: "MacOS NotificationCenter database", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/NotificationCenter/*.db", "/private/var/folders/[a-z][0-9]/*/0/com.apple.notificationcenter/db/db", "/private/var/folders/[a-z][0-9]/*/0/com.apple.notificationcenter/db2/db", "/var/folders/[a-z][0-9]/*/0/com.apple.notificationcenter/db/db", "/var/folders/[a-z][0-9]/*/0/com.apple.notificationcenter/db2/db"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSPeriodicSystemFunctions", Doc: "Periodic system functions scripts and configuration", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/daily.local/*", "/etc/defaults/periodic.conf", "/etc/monthly.local/*", "/etc/periodic/**2", "/etc/periodic.conf", "/etc/periodic.conf.local", "/etc/periodic/daily/*", "/etc/periodic/monthly/*", "/etc/periodic/weekly/*", "/etc/weekly.local/*", "/private/etc/daily.local/*", "/private/etc/defaults/periodic.conf", "/private/etc/monthly.local/*", "/private/etc/periodic/**2", "/private/etc/periodic.conf", "/private/etc/periodic.conf.local", "/private/etc/periodic/daily/*", "/private/etc/periodic/monthly/*", "/private/etc/periodic/weekly/*", "/private/etc/weekly.local/*", "/usr/local/etc/periodic/**2"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Info_Misc.", "https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/periodic.8.html#//apple_ref/doc/man/8/periodic"}}, goartifacts.ArtifactDefinition{Name: "MacOSQuarantineEvents", Doc: "Quarantine Event Database", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.LaunchServices.QuarantineEvents", "%%users.homedir%%/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Software"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSRecentItems", Doc: "Recent Items", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.recentitems.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Recent_Items"}}, goartifacts.ArtifactDefinition{Name: "MacOSRemoteDesktopAdministratorSystem", Doc: "Apple Remote Desktop (ARD) was first released in 2002 and is Apple’s desktop management system for software distribution, asset management, and remote assistance.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/db/RemoteManagement/ClientCaches/*", "/var/db/RemoteManagement/ClientCaches/*", "/private/var/db/RemoteManagement/RMDB/rmdb.sqlite3", "/var/db/RemoteManagement/RMDB/rmdb.sqlite3"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://help.apple.com/remotedesktop/mac/3.9/", "https://www.fireeye.com/blog/threat-research/2019/10/leveraging-apple-remote-desktop-for-good-and-evil.html", "https://github.com/fireeye/ARDvark#ard-artifacts-to-parse"}}, goartifacts.ArtifactDefinition{Name: "MacOSRemoteDesktopClientSystem", Doc: "Apple Remote Desktop (ARD) was first released in 2002 and is Apple’s desktop management system for software distribution, asset management, and remote assistance.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/db/RemoteManagement/caches/AppUsage.plist", "/var/db/RemoteManagement/caches/AppUsage.plist", "/private/var/db/RemoteManagement/caches/UserAcct.tmp", "/var/db/RemoteManagement/caches/UserAcct.tmp"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://help.apple.com/remotedesktop/mac/3.9/", "https://www.fireeye.com/blog/threat-research/2019/10/leveraging-apple-remote-desktop-for-good-and-evil.html", "https://github.com/fireeye/ARDvark#ard-artifacts-to-parse"}}, goartifacts.ArtifactDefinition{Name: "MacOSSidebarLists", Doc: "Sidebar Lists Preferences\n\nThis plist contains the names of volumes mounted on the desktop that have appeared in the sidebar list.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.sidebarlists.plist", "%%users.homedir%%/Preferences/com.apple.sidebarlists.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "External Media"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSSleepimageFile", Doc: "Sleepimage file which contains the content of memory before going to sleep", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/vm/sleepimage", "/var/vm/sleepimage"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Sleep.2FHibernate_and_Swap_Image_File"}}, goartifacts.ArtifactDefinition{Name: "MacOSStartupItemsPlistFiles", Doc: "Startup Items plist files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/StartupItems/*", "/System/Library/StartupItems/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Autorun_Locations"}}, goartifacts.ArtifactDefinition{Name: "MacOSSwapFiles", Doc: "Swap files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/vm/swapfile[0-9]", "/var/vm/swapfile[0-9]"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Sleep.2FHibernate_and_Swap_Image_File"}}, goartifacts.ArtifactDefinition{Name: "MacOSSystemConfigurationPreferencesPlistFile", Doc: "System configuration preferences plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/SystemConfiguration/preferences.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "MacOSSystemInstallationTime", Doc: "System installation time", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/db/.AppleSetupDone", "/var/db/.AppleSetupDone"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Settings_and_Informations"}}, goartifacts.ArtifactDefinition{Name: "MacOSSystemLogFiles", Doc: "System log files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/*", "/var/log/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSSystemPreferencesPlistFiles", Doc: "System Preferences plist files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSSystemVersionPlistFile", Doc: "Operating system name and version plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/System/Library/CoreServices/SystemVersion.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Settings_and_Informations"}}, goartifacts.ArtifactDefinition{Name: "MacOSTimeMachinePlistFile", Doc: "Time Machine information plist file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/com.apple.TimeMachine.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSUnifiedLogging", Doc: "Apple Unified Logging and Activity Tracing", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/db/diagnostics/*.tracev3", "/private/var/db/diagnostics/*/*.tracev3", "/private/var/db/uuidtext/*/*", "/var/db/diagnostics/*.tracev3", "/var/db/diagnostics/*/*.tracev3", "/var/db/uuidtext/*/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "https://github.com/mac4n6/Presentations/blob/master/Logs%20Unite!%20-%20Forensic%20Analysis%20of%20Apple%20Unified%20Logs/LogsUnite.pdf"}}, goartifacts.ArtifactDefinition{Name: "MacOSUpdate", Doc: "Software Update", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/com.apple.SoftwareUpdate.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Software_Installation"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserApplicationLogs", Doc: "User and Applications Logs Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Logs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Logs"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Logs"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserDesktopDirectory", Doc: "Desktop Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Desktop/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserDocumentsDirectory", Doc: "Documents Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Documents/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserDownloadsDirectory", Doc: "User downloads directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Downloads/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserGlobalPreferences", Doc: "User Global Preferences", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/.GlobalPreferences.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserLibraryDirectory", Doc: "Library Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserLoginItems", Doc: "Login Items", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.loginitems.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Autorun_Locations_2"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserMoviesDirectory", Doc: "Movies Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Movies/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserMusicDirectory", Doc: "Music Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Music/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserPasswordHashesPlistFiles", Doc: "User password hashes plist files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/db/dslocal/nodes/Default/users/*.plist", "/var/db/dslocal/nodes/Default/users/*.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Users", "Authentication"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#System_Settings_and_Informations"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserPicturesDirectory", Doc: "Pictures Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Pictures/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserPreferences", Doc: "User preferences directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Preferences"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserPublicDirectory", Doc: "Public Directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Public/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User_Directories"}}, goartifacts.ArtifactDefinition{Name: "MacOSUsers", Doc: "Users directories in /Users", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Users/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.username", Regex: "/Users/([^/]+)", WMIKey: ""}, goartifacts.Provide{Key: "users.homedir", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Users"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserSocialAccounts", Doc: "User's Social Accounts", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Accounts/Accounts3.sqlite", "%%users.homedir%%/Library/Accounts/Accounts3.sqlite-wal", "%%users.homedir%%/Library/Accounts/Accounts4.sqlite", "%%users.homedir%%/Library/Accounts/Accounts4.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "ExternalAccount"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#User.27s_Accounts", "https://lab.wallarm.com/hunting-the-files-34caa0c1496"}}, goartifacts.ArtifactDefinition{Name: "MacOSUserTrash", Doc: "User Trash Folder", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.Trash/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Misc."}}, goartifacts.ArtifactDefinition{Name: "MacOSUtmpFile", Doc: "Mac OS X utmp and wmtp login record file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/run/utmp", "/private/var/log/wtmp", "/var/run/utmp", "/var/log/wtmp"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://github.com/libyal/dtformats/blob/master/documentation/Utmp%20login%20records%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "MacOSUtmpxFile", Doc: "Mac OS X 10.5 utmpx login record file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/run/utmpx", "/var/run/utmpx"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "Authentication"}, SupportedOs: []string{"Darwin"}, Urls: []string{"https://github.com/libyal/dtformats/blob/master/documentation/Utmp%20login%20records%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "MacOSWirelessNetworks", Doc: "Remembered Wireless Networks", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Networking"}}, goartifacts.ArtifactDefinition{Name: "MacOSFSEvents", Doc: "Mac OS X file system event log", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/.fseventsd/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs", "System", "Users"}, SupportedOs: []string{"Darwin"}, Urls: []string{"http://nicoleibrahim.com/apple-fsevents-forensics/", "https://www.sans.org/cyber-security-summit/archives/file/summit-archive-1498158287.pdf"}}, goartifacts.ArtifactDefinition{Name: "NTFSMFTFiles", Doc: "The NTFS $MFT and $MFTMirr file system metadata files.\n\nGRR collection note: you currently need to specify 'use tsk' and\n'ignore download size limits' for this artifact to work. This will go away in\nthe future.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\$MFT", "%%environ_systemdrive%%\\$MFTMirr"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "NTFSLogFile", Doc: "The NTFS $LogFile file system metadata file.\n\nGRR collection note: you currently need to specify 'use tsk' and\n'ignore download size limits' for this artifact to work. This will go away in\nthe future.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\$LogFile"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://sourceforge.net/projects/linux-ntfs/"}}, goartifacts.ArtifactDefinition{Name: "TestArtifacts", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"Hostname", "Hello", "WindowsUserDownloadsDirectory", "WindowsRecycleBin", "NTFSMetaFiles", "WindowsEnvironmentVariableProgramFilesX86", "WindowsAvailableTimeZones", "WindowsComputerName", "WMIAccountUsersDomain", "AllLogFiles", "WindowsFileTypeAutorunAssociations"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string(nil), Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "Hostname", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "hostname", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string(nil), Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "Hello", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "hello.exe", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUserDownloadsDirectory", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.userprofile%%\\Downloads\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsRecycleBin", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\$Recycle.Bin\\**", "\\Recycler\\**"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "NTFSMetaFiles", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\$MFT", "%%environ_systemdrive%%\\$MFTMirr"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableProgramFilesX86", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "PATH", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\Program Files (x86)"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion", Value: "ProgramFilesDir (x86)"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsAvailableTimeZones", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\*\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsComputerName", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ComputerName\\ComputerName", Value: "ComputerName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIAccountUsersDomain", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_UserAccount WHERE name='%%users.username%%'", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "AllLogFiles", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/**10/*.log"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string(nil), Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsFileTypeAutorunAssociations", Doc: "", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\.*", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "TomcatFiles", Doc: "Tomcat files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"TomcatLogFiles", "TomcatPasswordFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "TomcatLogFiles", Doc: "Tomcat log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\access_log*", "%%environ_allusersappdata%%\\Apache Software Foundation\\Tomcat*\\logs\\access_log*", "%%environ_allusersappdata%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\catalina.out", "%%environ_allusersappdata%%\\Apache Software Foundation\\Tomcat*\\logs\\catalina.out", "%%environ_programfiles%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\access_log*", "%%environ_programfiles%%\\Apache Software Foundation\\Tomcat*\\logs\\access_log*", "%%environ_programfiles%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\catalina.out", "%%environ_programfiles%%\\Apache Software Foundation\\Tomcat*\\logs\\catalina.out", "%%environ_programfilesx86%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\access_log*", "%%environ_programfilesx86%%\\Apache Software Foundation\\Tomcat*\\logs\\access_log*", "%%environ_programfilesx86%%\\Apache Software Foundation\\Tomcat*\\logs\\**\\catalina.out", "%%environ_programfilesx86%%\\Apache Software Foundation\\Tomcat*\\logs\\catalina.out"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/opt/tomcat*/logs/**/access_log*", "/opt/tomcat*/logs/access_log*", "/opt/tomcat*/logs/**/catalina.out", "/opt/tomcat*/logs/catalina.out", "/usr/local/tomcat*/logs/**/access_log*", "/usr/local/tomcat*/logs/access_log*", "/usr/local/tomcat*/logs/**/catalina.out", "/usr/local/tomcat*/logs/catalina.out", "/usr/share/tomcat*/logs/**/access_log*", "/usr/share/tomcat*/logs/access_log*", "/usr/share/tomcat*/logs/**/catalina.out", "/usr/share/tomcat*/logs/catalina.out", "/var/lib/tomcat*/logs/**/access_log*", "/var/lib/tomcat*/logs/access_log*", "/var/lib/tomcat*/logs/**/catalina.out", "/var/lib/tomcat*/logs/catalina.out"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Tomcat/logs/**/access_log*", "/Library/Tomcat/logs/access_log*", "/Library/Tomcat/logs/**/catalina.out", "/Library/Tomcat/logs/catalina.out", "/usr/local/apache-tomcat*/logs/**/access_log*", "/usr/local/apache-tomcat*/logs/access_log*", "/usr/local/apache-tomcat*/logs/**/catalina.out", "/usr/local/apache-tomcat*/logs/catalina.out", "/usr/local/Cellar/tomcat*/logs/**/access_log*", "/usr/local/Cellar/tomcat*/logs/access_log*", "/usr/local/Cellar/tomcat*/logs/**/catalina.out", "/usr/local/Cellar/tomcat*/logs/catalina.out"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Linux", "Darwin"}, Urls: []string{"https://tomcat.apache.org/tomcat-8.0-doc/config/valve.html#Access_Logging", "https://tomcat.apache.org/tomcat-8.0-doc/logging.html"}}, goartifacts.ArtifactDefinition{Name: "TomcatPasswordFile", Doc: "Tomcat password file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Apache Software Foundation\\Tomcat*\\conf\\tomcat-users.xml", "%%environ_programfiles%%\\Apache Software Foundation\\Tomcat*\\conf\\tomcat-users.xml", "%%environ_programfilesx86%%\\Apache Software Foundation\\Tomcat*\\conf\\tomcat-users.xml"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/opt/tomcat*/conf/tomcat-users.xml", "/private/var/lib/tomcat*/conf/tomcat-users.xml", "/usr/local/tomcat*/conf/tomcat-users.xml", "/usr/share/tomcat*/conf/tomcat-users.xml", "/var/lib/tomcat*/conf/tomcat-users.xml"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Tomcat/conf/tomcat-users.xml", "/usr/local/apache-tomcat-*/conf/tomcat-users.xml", "/usr/local/Cellar/tomcat/*/conf/tomcat-users.xml"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Linux", "Darwin"}, Urls: []string{"https://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html#Configuring_Manager_Application_Access"}}, goartifacts.ArtifactDefinition{Name: "AllShellConfigs", Doc: "Common shell configuration files containing global, users & root settings.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"GlobalShellConfigs", "RootUserShellConfigs", "UsersShellConfigs"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "AllUsersShellHistory", Doc: "Common shell history files for root and users.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"RootUserShellHistory", "UsersShellHistory"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"History Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "GlobalShellConfigs", Doc: "Unix global shell configuration files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/bash.bashrc", "/etc/bashrc", "/etc/csh.cshrc", "/etc/csh.login", "/etc/csh.logout", "/etc/kshrc", "/etc/profile", "/etc/zshenv", "/etc/zshrc", "/etc/zsh/zlogin", "/etc/zsh/zlogout", "/etc/zsh/zprofile", "/etc/zsh/zshenv", "/etc/zsh/zshrc", "/private/etc/bash.bashrc", "/private/etc/bashrc", "/private/etc/csh.cshrc", "/private/etc/csh.login", "/private/etc/csh.logout", "/private/etc/kshrc", "/private/etc/profile", "/private/etc/zshenv", "/private/etc/zshrc", "/private/etc/zsh/zlogin", "/private/etc/zsh/zlogout", "/private/etc/zsh/zprofile", "/private/etc/zsh/zshenv", "/private/etc/zsh/zshrc"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/bash.bashrc", "/etc/bashrc", "/etc/csh.cshrc", "/etc/csh.login", "/etc/csh.logout", "/etc/kshrc", "/etc/profile", "/etc/zshenv", "/etc/zshrc", "/etc/zsh/zlogin", "/etc/zsh/zlogout", "/etc/zsh/zprofile", "/etc/zsh/zshenv", "/etc/zsh/zshrc"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "RootUserShellConfigs", Doc: "Common unix root shell configuration files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/root/.bash_logout", "/root/.bash_profile", "/root/.bashrc", "/root/.cshrc", "/root/.ksh", "/root/.logout", "/root/.profile", "/root/.tcsh", "/root/.zlogin", "/root/.zlogout", "/root/.zprofile"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "RootUserShellHistory", Doc: "Common unix root shell history files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/root/.bash_history", "/root/.sh_history", "/root/.zhistory", "/root/.zsh_history"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"History Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixGroups", Doc: "Unix groups file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/group", "/private/etc/group"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/group"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixHostsFile", Doc: "Unix hosts file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hosts", "/private/etc/hosts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hosts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixPasswd", Doc: "Unix /etc/passwd file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/passwd", "/private/etc/passwd"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/passwd"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixShadowFile", Doc: "Unix /etc/shadow file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/shadow", "/private/etc/shadow"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/shadow"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixSudoersConfiguration", Doc: "Unix sudoers configuration.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/sudoers", "/private/etc/sudoers"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/sudoers"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication", "Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UnixUsersGroups", Doc: "Unix users and groups files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"UnixGroups", "UnixPasswd", "UnixShadowFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Authentication"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UsersShellConfigs", Doc: "Common unix user shell configuration files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.bash_logout", "%%users.homedir%%/.bash_profile", "%%users.homedir%%/.bashrc", "%%users.homedir%%/.cshrc", "%%users.homedir%%/.ksh", "%%users.homedir%%/.logout", "%%users.homedir%%/.profile", "%%users.homedir%%/.tcsh", "%%users.homedir%%/.zlogin", "%%users.homedir%%/.zlogout", "%%users.homedir%%/.zprofile"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "UsersShellHistory", Doc: "Common unix user shell history files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.bash_history", "%%users.homedir%%/.sh_history", "%%users.homedir%%/.zhistory", "%%users.homedir%%/.zsh_history"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"History Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "BrowserCache", Doc: "Web browser cache of multiple web browsers.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"ChromeCache", "FirefoxCache", "InternetExplorerCache", "SafariCache"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "BrowserHistory", Doc: "Web browser history of multiple web browsers.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"ChromeHistory", "FirefoxHistory", "InternetExplorerHistory", "OperaHistory", "SafariDownloads", "SafariHistory"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "ChromeCache", Doc: "Google Chrome, Canary and Chromium browser caches.\n\nCanary uses \"Chrome SxS\" on windows.\n\n* Disk cache (or Cache)\n* Media cache\n* Application cache\n* GPU shader cache\n* PNaCl translation cache\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Application Cache\\Cache\\*", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Cache\\*", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Media Cache\\*", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\GPUCache\\*", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Application Cache\\Cache\\*", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Cache\\*", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Media Cache\\*", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\GPUCache\\*", "%%users.localappdata%%\\Chromium\\User Data\\*\\Application Cache\\Cache\\*", "%%users.localappdata%%\\Chromium\\User Data\\*\\Cache\\*", "%%users.localappdata%%\\Chromium\\User Data\\*\\Media Cache\\*", "%%users.localappdata%%\\Chromium\\User Data\\*\\GPUCache\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Caches/Google/Chrome/*/Cache/*", "%%users.homedir%%/Library/Caches/Google/Chrome/*/Cache/*", "%%users.homedir%%/Library/Caches/Google/Chrome/*/Media Cache/*", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/Application Cache/Cache/*", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/GPUCache/*", "%%users.homedir%%/Library/Caches/Google/Chrome/PnaclTranslationCache/*", "%%users.homedir%%/Caches/Google/Chrome Canary/*/Cache/*", "%%users.homedir%%/Library/Caches/Google/Chrome Canary/*/Cache/*", "%%users.homedir%%/Library/Caches/Google/Chrome Canary/*/Media Cache/*", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Application Cache/Cache/*", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/GPUCache/*", "%%users.homedir%%/Library/Caches/Google/Chrome Canary/PnaclTranslationCache/*", "%%users.homedir%%/Caches/Chromium/*/Cache/*", "%%users.homedir%%/Library/Caches/Chromium/*/Cache/*", "%%users.homedir%%/Library/Caches/Chromium/*/Media Cache/*", "%%users.homedir%%/Library/Application Support/Chromium/*/Application Cache/Cache/*", "%%users.homedir%%/Library/Application Support/Chromium/*/GPUCache/*", "%%users.homedir%%/Library/Caches/Chromium/PnaclTranslationCache/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.cache/google-chrome/Cache/*", "%%users.homedir%%/.cache/google-chrome/*/Cache/*", "%%users.homedir%%/.cache/google-chrome/*/Media Cache/*", "%%users.homedir%%/.cache/google-chrome/PnaclTranslationCache/*", "%%users.homedir%%/.config/google-chrome/*/Application Cache/*", "%%users.homedir%%/.config/google-chrome/*/Cache/*", "%%users.homedir%%/.config/google-chrome/*/Media Cache/*", "%%users.homedir%%/.config/google-chrome/*/GPUCache/*", "%%users.homedir%%/.cache/chromium/Cache/*", "%%users.homedir%%/.cache/chromium/*/Cache/*", "%%users.homedir%%/.cache/chromium/*/Media Cache/*", "%%users.homedir%%/.cache/chromium/PnaclTranslationCache/*", "%%users.homedir%%/.config/chromium/*/Application Cache/*", "%%users.homedir%%/.config/chromium/*/Cache/*", "%%users.homedir%%/.config/chromium/*/Media Cache/*", "%%users.homedir%%/.config/chromium/*/GPUCache/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/webbrowser/ChromeCache.md"}}, goartifacts.ArtifactDefinition{Name: "ChromeHistory", Doc: "Chrome browser history.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Chromium\\User Data\\*\\Archived History", "%%users.localappdata%%\\Chromium\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Chromium\\User Data\\*\\History", "%%users.localappdata%%\\Chromium\\User Data\\*\\History-journal", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Archived History", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\History", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\History-journal", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Archived History", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\History", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\History-journal"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Chromium/*/Archived History", "%%users.homedir%%/Library/Application Support/Chromium/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Chromium/*/History", "%%users.homedir%%/Library/Application Support/Chromium/*/History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Archived History", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/History", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/Archived History", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/History", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/History-journal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.config/chromium/*/Archived History", "%%users.homedir%%/.config/chromium/*/Archived History-journal", "%%users.homedir%%/.config/chromium/*/History", "%%users.homedir%%/.config/chromium/*/History-journal", "%%users.homedir%%/.config/google-chrome/*/Archived History", "%%users.homedir%%/.config/google-chrome/*/Archived History-journal", "%%users.homedir%%/.config/google-chrome/*/History", "%%users.homedir%%/.config/google-chrome/*/History-journal", "%%users.homedir%%/.config/google-chrome-beta/*/Archived History", "%%users.homedir%%/.config/google-chrome-beta/*/Archived History-journal", "%%users.homedir%%/.config/google-chrome-beta/*/History", "%%users.homedir%%/.config/google-chrome-beta/*/History-journal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://www.forensicswiki.org/wiki/Google_Chrome"}}, goartifacts.ArtifactDefinition{Name: "ChromeExtensionActivity", Doc: "Chrome Extension Activity database.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Extension Activity", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Extension Activity", "%%users.localappdata%%\\Chromium\\User Data\\*\\Extension Activity"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Google/Chrome/*/Extension Activity", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Extension Activity", "%%users.homedir%%/Library/Application Support/Chromium/*/Extension Activity"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.config/google-chrome/*/Extension Activity", "%%users.homedir%%/.config/chromium/*/Extension Activity"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://forensicswiki.org/wiki/Google_Chrome#Extension_Activity_database"}}, goartifacts.ArtifactDefinition{Name: "ChromeExtensions", Doc: "Chrome browser extension files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Extensions\\**10", "%%users.localappdata%%\\Chromium\\User Data\\*\\Extensions\\**10", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Extensions\\**10"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Google/Chrome/*/Extensions/**10", "%%users.homedir%%/Library/Application Support/Chromium/*/Extensions/**10", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Extensions/**10"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.config/google-chrome/*/Extensions/**10", "%%users.homedir%%/.config/google-chrome-beta/*/Extensions/**10", "%%users.homedir%%/.config/chromium/*/Extensions/**10"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://forensicswiki.org/wiki/Google_Chrome#Extensions"}}, goartifacts.ArtifactDefinition{Name: "ChromeExtensionRegistryKeys", Doc: "Chrome extensions installed by writing windows registry keys.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Google\\Chrome\\Extensions\\**5", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Google\\Chrome\\Extensions\\**5"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://developer.chrome.com/extensions/external_extensions#registry"}}, goartifacts.ArtifactDefinition{Name: "ChromePreferences", Doc: "Chrome Preferences file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Preferences", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Preferences", "%%users.localappdata%%\\Chromium\\User Data\\*\\Preferences"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Google/Chrome/*/Preferences", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Preferences", "%%users.homedir%%/Library/Application Support/Chromium/*/Preferences"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.config/google-chrome/*/Preferences", "%%users.homedir%%/.config/chromium/*/Preferences"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://forensicswiki.org/wiki/Google_Chrome#Configuration"}}, goartifacts.ArtifactDefinition{Name: "FirefoxCache", Doc: "Mozilla Firefox browser caches.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*.default\\Cache\\*", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*.default\\cache2\\*", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*.default\\cache2\\doomed\\*", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*.default\\cache2\\entries\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Caches/Firefox/Profiles/*.default/Cache/*", "%%users.homedir%%/Library/Caches/Firefox/Profiles/*.default/cache2/*", "%%users.homedir%%/Library/Caches/Firefox/Profiles/*.default/cache2/doomed/*", "%%users.homedir%%/Library/Caches/Firefox/Profiles/*.default/cache2/entries/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.mozilla/firefox/*.default/Cache/*", "%%users.homedir%%/.cache/mozilla/firefox/*.default/Cache/*", "%%users.homedir%%/.cache/mozilla/firefox/*.default/cache2/*", "%%users.homedir%%/.cache/mozilla/firefox/*.default/cache2/doomed/*", "%%users.homedir%%/.cache/mozilla/firefox/*.default/cache2/entries/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/webbrowser/FirefoxCache.md"}}, goartifacts.ArtifactDefinition{Name: "FirefoxHistory", Doc: "Firefox browser history (places.sqlite).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite-wal", "%%users.appdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite-wal"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Firefox/Profiles/*/places.sqlite", "%%users.homedir%%/Library/Application Support/Firefox/Profiles/*/places.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.mozilla/firefox/*/places.sqlite", "%%users.homedir%%/.mozilla/firefox/*/places.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://www.forensicswiki.org/wiki/Mozilla_Firefox"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerBrowserHelperObjects", Doc: "Loaded on Internet Explorer startup", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://regenerus.com/malware-common-loadpoints/", "https://code.google.com/p/regripper/wiki/ASEPs"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerCache", Doc: "Microsoft Internet Explorer (MSIE) browser cache.\n\n* MSIE 4 - 9 Temporary Internet files.\n* MSIE 10 INetCache files.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\*\\*", "%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Low\\Content.IE5\\*\\*", "%%users.localappdata%%\\Microsoft\\Windows\\INetCache\\IE\\*\\*", "%%users.localappdata%%\\Microsoft\\Windows\\INetCache\\Low\\*\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Internet_Explorer"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerCookies", Doc: "Microsoft Internet Explorer (MSIE) browser cookies.\n\n* MSIE 4 - 9 Cache files (index.dat)\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\Cookies\\index.dat", "%%users.appdata%%\\Microsoft\\Windows\\Cookies\\Low\\index.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Internet_Explorer"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerHistory", Doc: "Microsoft Internet Explorer (MSIE) browser history.\n\n* MSIE 4 - 9 Cache files (index.dat);\n* MSIE 10 WebCacheV*.dat files.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\IEDownloadHistory\\index.dat", "%%users.localappdata%%\\Microsoft\\Feeds Cache\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\History.IE5\\*\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\History.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\Low\\History.IE5\\*\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\Low\\History.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Low\\Content.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat", "%%users.userprofile%%\\Local Settings\\History\\History.IE5\\index.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Internet_Explorer"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerProtectedModeElevationPolicies", Doc: "Trust levels of apps launched from low rights IE sessions.\n\nThe ElevationPolicy dictates how IE handles applications that want to execute\nin other applications that reside outside of the Low Rights IE session.\n\n* AppName is the executable\n* AppPath is the directory\n* CLSID is used if it launches a COM server through CoCreateInstance\n* Policy (DWORD) is the trust level, of 0 through 3.\n\n* 3 Protected Mode silently launches the broker as a medium integrity process.\n* 2 Protected Mode prompts the user for permission to launch the process. If\n    permission is granted, the process is launched as a medium integrity process.\n* 1 Protected Mode silently launches the broker as a low integrity process.\n* 0 Protected Mode prevents the process from launching.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "Policy"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "AppName"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "AppPath"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "CLSID"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "Policy"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "AppName"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "AppPath"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Low Rights\\ElevationPolicy\\*", Value: "CLSID"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://blogs.technet.com/b/juanand/archive/2010/10/29/internet-explorer-protected-mode-elevation-policy-and-administrative-templates.aspx", "https://msdn.microsoft.com/en-us/library/bb250462(VS.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerProtectedModeDisable", Doc: "Microsoft Internet Explorer (MSIE) Protected Mode Banner can be suppressed\nby setting NoProtectedModeBanner.\n\n* Applies to versions 7-11\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main\\NoProtectedModeBanner"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.blackforce.co.uk/2014/01/07/disable-protected-mode-is-turned-off-for-the-internet-zone-group-policy"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorer6Settings", Doc: "Registry keys affecting default behavior for Microsoft Internet Explorer 6.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "AboutURLs"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "UrlSearchHooks"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "Extensions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "ExplorerBars"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "Toolbar"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer", Value: "SearchURL"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Default_Page_URL"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Default_Search_URL"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Search Page"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Start Page"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Search Bar"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Search", Value: "CustomizeSearch"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer", Value: "UrlSearchHooks"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer", Value: "Extensions"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer", Value: "ExplorerBars"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer", Value: "Toolbar"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer", Value: "SearchURL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Default_Page_URL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Default_Search_URL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Search Page"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Start Page"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Main", Value: "Search Bar"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/895339", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "InternetExplorerTypedURLsKeys", Doc: "Microsoft Internet Explorer TypedUrls keys.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\TypedURLs\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Internet_Explorer#Typed_URLs"}}, goartifacts.ArtifactDefinition{Name: "OperaHistory", Doc: "Opera browser history (global_history.dat).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Opera/global_history.dat"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.opera/global_history.dat"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Opera\\Opera\\global_history.dat", "%%users.appdata%%\\Opera Software\\Opera Stable\\History"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string{"http://www.forensicswiki.org/wiki/Opera"}}, goartifacts.ArtifactDefinition{Name: "SafariCache", Doc: "Safari browser cache (cache.db).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Apple Computer\\Safari\\cache.db"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Caches/com.apple.Safari/cache.db"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin"}, Urls: []string{"http://www.forensicswiki.org/wiki/Apple_Safari"}}, goartifacts.ArtifactDefinition{Name: "SafariDownloads", Doc: "Safari downloads history (Downloads.plist).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Safari/Downloads.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Apple Computer\\Safari\\Downloads.plist", "%%users.appdata%%\\Apple Computer\\Safari\\Downloads.plist"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users", "Browser"}, SupportedOs: []string{"Darwin", "Windows"}, Urls: []string{"http://forensicswiki.org/wiki/Mac_OS_X", "http://forensicswiki.org/wiki/Mac_OS_X_10.9_-_Artifacts_Location#Safari", "https://www.forensicswiki.org/wiki/Apple_Safari"}}, goartifacts.ArtifactDefinition{Name: "SafariHistory", Doc: "Safari browser history (History.plist).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Apple Computer\\Safari\\History.plist", "%%users.appdata%%\\Apple Computer\\Safari\\History.plist"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Safari/History.plist", "%%users.homedir%%/Library/Safari/History.db", "%%users.homedir%%/Library/Safari/History.db-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Browser"}, SupportedOs: []string{"Windows", "Darwin"}, Urls: []string{"http://www.forensicswiki.org/wiki/Apple_Safari"}}, goartifacts.ArtifactDefinition{Name: "NginxAccessLogs", Doc: "Location where nginx access logs are stored", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/nginx/access.log*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "ApacheAccessLogs", Doc: "Location where Apache access logs are stored", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/apache/access.log*", "/var/log/apache2/access.log*", "/var/log/httpd/access.log"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software", "Logs"}, SupportedOs: []string{"Linux"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WordpressConfigFile", Doc: "WordPress configuration file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/www/**/wp-config.php", "/private/var/www/wp-config.php", "/var/www/**/wp-config.php", "/var/www/wp-config.php", "/wp/wp-config.php"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Configuration Files"}, SupportedOs: []string{"Linux", "Darwin"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsActiveDesktop", Doc: "Windows Active Desktop executable paths, used for persistence.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Desktop\\Components\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Desktop\\General"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version < 6"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/Troj~DwnLdr-GWV/detailed-analysis.aspx", "https://support.microsoft.com/en-us/kb/929200", "https://en.wikipedia.org/wiki/Active_Desktop"}}, goartifacts.ArtifactDefinition{Name: "WindowsActivitiesCache", Doc: "Windows activities cache SQLite database.\n\nThis file is available since Windows 10 and version 1803.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\ConnectedDevicesPlatform\\L.%%users.username%%\\ActivitiesCache.db"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://cclgroupltd.com/windows-10-timeline-forensic-artefacts/", "https://salt4n6.com/2018/05/03/windows-10-timeline-forensic-artefacts/amp/"}}, goartifacts.ArtifactDefinition{Name: "WindowsAlternateShell", Doc: "Alternate Shell to be run via Userinit.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SafeBoot", Value: "AlternateShell"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SafeBoot\\Option", Value: "UseAlternateShell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx", "https://technet.microsoft.com/en-us/library/cc976124.aspx", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "WindowsAMCacheHveFile", Doc: "The AMCache.hve Windows NT Registry file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\AppCompat\\Programs\\Amcache.hve"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 1"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.swiftforensics.com/2013/12/amcachehve-in-windows-8-goldmine-for.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsAppCertDLLs", Doc: "Windows AppCertDLLs persistence.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://blogs.technet.com/b/mmpc/archive/2011/03/19/how-to-defang-the-fake-defragmenter.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsAppCompatCache", Doc: "Windows Application Compatibility Cache", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCompatibility", Value: "AppCompatCache"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCompatCache", Value: "AppCompatCache"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Application%20Compatibility%20Cache%20key.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsAppInitDLLs", Doc: "Windows Application Initial (AppInit) DLLs persistence.\n\nAppInit DLLs is a mechanism that allows an arbitrary list of DLLs to be loaded\ninto each user mode process on the system.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/dd744762(v=vs.85).aspx", "https://support.microsoft.com/en-us/kb/197571"}}, goartifacts.ArtifactDefinition{Name: "WindowsApplicationRegistration", Doc: "Windows Application Registration (AppPath) Registry keys.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\App Paths\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/keydet89/RegRipper2.8/blob/master/plugins/apppaths.pl", "http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/", "https://msdn.microsoft.com/en-us/library/windows/desktop/ee872121(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsApplicationCompatibilityInstalledShimDatabases", Doc: "Windows Application Compatibility Installed Shim Databases.\n\ndrvmain.sdb, frxmain.sdb, msimain.sdb, pcamain.sdb, and sysmain.sdb are\nshim database files (SDB files) that are provided by Windows, and contain\nmany predefined shims that address known application compability issues.\nNote that these database files are not signed.\n\nWindows also supports custom shim database. These are typically installed\nby the sdbinst.exe utility. Note, that shim database files can also exist\nelsewhere in the file system.\n\nWindows application shims provide a way for the operating system to\napply patches to executables before they are run, ultimately providing\na lightweight mechanism for applying hot fixes and making modifications to\nensure compatibility across the various versions of Windows. This\nfunctionality can also be leveraged maliciously to change how certain\nprograms operate, or to provide capabilities to malware, such as the\nability to bypass UAC, gain persistence by injecting loading into legitimate\nprocesses, or avoid detection by disabling anti-virus software.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\AppPatch\\drvmain.sdb", "%%environ_systemroot%%\\AppPatch\\frxmain.sdb", "%%environ_systemroot%%\\AppPatch\\msimain.sdb", "%%environ_systemroot%%\\AppPatch\\pcamain.sdb", "%%environ_systemroot%%\\AppPatch\\sysmain.sdb", "%%environ_systemroot%%\\AppPatch\\AppPatch64\\Custom\\*", "%%environ_systemroot%%\\AppPatch\\Custom\\*", "%%environ_systemroot%%\\AppPatch\\Custom\\Custom64\\*", "%%environ_systemroot%%\\AppPatch\\CustomSDB\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://attack.mitre.org/techniques/T1138/", "https://countercept.com/blog/hunting-for-application-shim-databases/", "http://files.brucon.org/2015/Tomczak_and_Ballenthin_Shims_for_the_Win.pdf", "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf"}}, goartifacts.ArtifactDefinition{Name: "WindowsApplicationCompatibilityShimDatabaseMappings", Doc: "Windows Application Compatibility Shim Database Mappings.\n\nMappings between the Windows Application Compatibility shim database files and\nthe programs that they apply to.\n\nWindows allows for custom application shims to be installed via the\nsdbinst.exe application. For example a mapping for 'notepad.exe':\n\nKey: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\\n    AppCompatFlags\\Custom\\notepad.exe\nValue: {00000000-1111-2222-3333-444444444444}.sdb = 0\n\nKey: AppCompatFlags\\InstalledSDB\\{00000000-1111-2222-3333-444444444444}\nValue: DatabasePath =\n    \"C:\\Windows\\AppPatch\\Custom\\{00000000-1111-2222-3333-444444444444}.sdb\"\n\nWindows application shims provide a way for the operating system to\napply patches to executables before they are run, ultimately providing\na lightweight mechanism for applying hot fixes and making modifications to\nensure compatibility across the various versions of Windows. This\nfunctionality can also be leveraged maliciously to change how certain\nprograms operate, or to provide capabilities to malware, such as the\nability to bypass UAC, gain persistence by injecting loading into legitimate\nprocesses, or avoid detection by disabling anti-virus software.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\*", Value: "DatabaseDescription"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\*", Value: "DatabasePath"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\*", Value: "*"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://attack.mitre.org/techniques/T1138/", "https://countercept.com/blog/hunting-for-application-shim-databases/"}}, goartifacts.ArtifactDefinition{Name: "WindowsApplicationCompatibilityShims", Doc: "Windows Application Compatibility Shim Database Files and Application Mappings", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsApplicationCompatibilityInstalledShimDatabases", "WindowsApplicationCompatibilityShimDatabaseMappings"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WinAppXRT", Doc: "WinAppXRT DLL loaded by .Net applications when the APPX_PROCESS environment variable is set.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\system32\\WinAppXRT.dll", "%%environ_systemroot%%\\WinAppXRT.dll", "%%environ_systemroot%%\\System32\\Wbem\\WinAppXRT.dll", "%%environ_systemroot%%\\System32\\WindowsPowerShell\\v1.0\\WinAppXRT.dll"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/08/31/beyond-good-ol-run-key-part-17/"}}, goartifacts.ArtifactDefinition{Name: "WindowsAutoexecBat", Doc: "Windows autoexec.bat file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\autoexec.bat", "%%environ_systemroot%%\\autoexec.nt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsAutomaticDebugging", Doc: "Windows automatic debugging (Aedebug)", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug", Value: "Debugger"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/bb204634(v=vs.85).aspx", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "WindowsAutomaticDebuggingExclusionList", Doc: "Windows automatic debugging (Aedebug) exclusion list", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AutoExclusionList\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/bb204634(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsAutorun", Doc: "Filebased Tests.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\autorun.inf"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsAvailableTimeZones", Doc: "Timezones available on a Windows system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Time%20zone%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsBITSQueueManagerDatabases", Doc: "Databases that contain the Windows BITS jobs definition and state.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Microsoft\\Network\\Downloader\\qmgr*.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://dfrws.org/2015/proceedings/presentations/DFRWS2015-pres3.pdf"}}, goartifacts.ArtifactDefinition{Name: "WindowsBootVerificationProgram", Doc: "Path to custom startup verification program.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\BootVerificationProgram", Value: "ImagePath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc786702(WS.10).aspx", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "WindowsCIMRepositoryFiles", Doc: "Windows Common Information Model (CIM) repository.\n\nPersistent database that holds the schema, also called the object repository or class store,\nthat models the managed environment and defines every piece of data exposed by WMI.\n\nThis definition does not specify the copies of the CIM repository that are stored in system restore points.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System\\Wbem\\Repository\\cim.rep", "%%environ_systemroot%%\\System32\\wbem\\Repository\\CIM.REC", "%%environ_systemroot%%\\System32\\wbem\\Repository\\CIM.REP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\INDEX.BTR", "%%environ_systemroot%%\\System32\\wbem\\Repository\\INDEX.MAP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\MAPPING.VER", "%%environ_systemroot%%\\System32\\wbem\\Repository\\MAPPING[1-3].MAP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\OBJECTS.DATA", "%%environ_systemroot%%\\System32\\wbem\\Repository\\OBJECTS.MAP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\INDEX.BTR", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\INDEX.MAP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\MAPPING.VER", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\MAPPING[1-2].MAP", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\OBJECTS.DATA", "%%environ_systemroot%%\\System32\\wbem\\Repository\\FS\\OBJECTS.MAP"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf", "https://github.com/libyal/dtformats/blob/master/documentation/WMI%20repository%20file%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsCodePage", Doc: "The code page of the system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Nls\\CodePage", Value: "ACP"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "code_page", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://en.wikipedia.org/wiki/Windows_code_page"}}, goartifacts.ArtifactDefinition{Name: "WindowsComputerName", Doc: "The name of the system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ComputerName\\ComputerName", Value: "ComputerName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsCommandProcessorAutoRun", Doc: "Commands that are run each time the Command Processor (Cmd.exe) is started.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor", Value: "AutoRun"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Command Processor", Value: "AutoRun"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Command Processor", Value: "AutoRun"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Command Processor", Value: "AutoRun"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc779439(v=ws.10).aspx", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://blogs.msdn.com/b/oldnewthing/archive/2007/11/21/6447771.aspx", "https://technet.microsoft.com/en-us/library/cc756720(v=ws.10).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCOMInprocHandlers", Doc: "Windows COM in-process handlers", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*", Value: "InprocHandler"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*", Value: "InprocHandler32"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "InprocHandler"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "InprocHandler32"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*", Value: "InprocHandler"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*", Value: "InprocHandler32"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "InprocHandler"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "InprocHandler32"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/ms694515(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms691354(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms693485(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCOMInprocServers", Doc: "Windows COM in-process servers", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\InprocServer", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\InprocServer", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/ms694515(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms682390(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms694328(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCOMLocalServers", Doc: "Windows COM local servers", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*", Value: "LocalServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\LocalServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\LocalServer32", Value: "ServerExecutable"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "LocalServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\LocalServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\LocalServer32", Value: "ServerExecutable"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*", Value: "LocalServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\LocalServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\LocalServer32", Value: "ServerExecutable"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*", Value: "LocalServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\LocalServer32", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\LocalServer32", Value: "ServerExecutable"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/ms694515(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms686595(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCOMProperties", Doc: "Various properties of Windows COM Objects.\n\nThese artifacts are meant to highlight properties of COM objects that,\nalthough legitimate, are known to be associated with persistence techniques\nor other capabilities that malware can leverage.\n\nShellFolder\\HideOnDesktop, ShellFolder\\Attributes (specifically with value\n0xf090013d), and InprocServer\\LoadWithoutCOM are associated with a technique\nto cause iexplore or explorer to load a malicious DLL by registering a COM\nobject and invoking it through the use of Junction Folders.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "Attributes"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "Attributes"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "Attributes"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "Attributes"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://ired.team/offensive-security/code-execution/forcing-iexplore.exe-to-load-a-malicious-dll-via-com-abuse", "https://labs.nettitude.com/blog/com-and-the-powerthief/"}}, goartifacts.ArtifactDefinition{Name: "WindowsCOMRegisteredTypeLibraries", Doc: "Windows COM registered type libraries", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Typelib\\*\\*\\*\\*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\Typelib\\*\\*\\*\\*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Typelib\\*\\*\\*\\*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\Typelib\\*\\*\\*\\*", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Component%20Object%20Model%20keys.asciidoc#type-libraries-key"}}, goartifacts.ArtifactDefinition{Name: "WindowsSearchFilterHandlers", Doc: "Windows Search filter handlers configured for file types and applications.\n\nWindows Search loads DLLs that implement the IFilter interface in order to\nscan files for text and extract certain types of information. Malware can\nreplace the filter handler for a given file type or CLSID with itself to gain\nexecution when a search operation is performed on that file. Search\noperations can be performed indirectly in a number of cases; for instance,\nthe .txt, .html, and .rtf filter handlers are invoked when indexing email\nmessage bodies.\n\nThe filter handler to use is specified indirectly via a persistent handler.\nThe persistent handler GUID is indicated via the PersistentHandler subkey for\na file type or application GUID.  The filter handler CLSID is indicated via\nthe PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF} subkey\nunder the persistent handler GUID key path. This artifact inspects both of\nthese paths.\n\nNOTE: Only the HKEY_LOCAL_MACHINE root key needs be checked, because these\nare the only keys used. SearchFilterHost.exe runs under the SYSTEM account,\nwhich does not have access to HKEY_CURRENT_USER.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\PersistentHandler", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\PersistentHandler", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\PersistentHandler", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\PersistentHandler", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows/desktop/search/-search-ifilter-about", "https://docs.microsoft.com/en-us/windows/desktop/search/-search-ifilter-implementations", "https://docs.microsoft.com/en-us/windows/desktop/search/-search-ifilter-registering-filters"}}, goartifacts.ArtifactDefinition{Name: "WindowsConfigSys", Doc: "Windows config.sys file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\config.sys", "%%environ_systemroot%%\\config.nt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsControlPanelFilePaths", Doc: "DLLs listed here will be run when the user opens the Windows Control Panel.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\CPLs", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\CPLs", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\CPLs", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\CPLs"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/hh127454(v=vs.85).aspx", "http://www.geoffchappell.com/studies/windows/shell/shell32/classes/controlpanel.htm", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms683844(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCredentialProviderFilters", Doc: "Windows Credential Provider Filters", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider Filters\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider Filters\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://blog.leetsys.com/2012/01/02/capturing-windows-7-credentials-at-logon-using-custom-credential-provider/"}}, goartifacts.ArtifactDefinition{Name: "WindowsCredentialProviders", Doc: "CLSIDs of applications to use as Credential Providers", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Providers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Providers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://blogs.technet.com/b/ad/archive/2009/05/26/thoughts-on-single-sign-on-and-credential-providers.aspx", "http://blog.leetsys.com/2012/01/02/capturing-windows-7-credentials-at-logon-using-custom-credential-provider/", "https://www.sophos.com/en-us/support/knowledgebase/114190.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsCommonFilePlacementAttacks", Doc: "Common files associated with search order hijacking and other file placement attacks.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_programfiles%%\\Internet Explorer\\sxs.dll", "%%environ_programfilesx86%%\\Internet Explorer\\sxs.dll", "%%environ_systemdrive%%\\explorer.exe", "%%environ_systemdrive%%\\program.exe", "%%environ_systemroot%%\\linkinfo.dll", "%%environ_systemroot%%\\ntshrui.dll", "%%environ_systemroot%%\\System32\\oci.dll", "%%environ_systemroot%%\\System32\\sysprep\\cryptbase.dll", "%%environ_systemroot%%\\SysWOW64\\oci.dll", "%%environ_systemroot%%\\SysWOW64\\sysprep\\cryptbase.dll"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://web.cs.ucdavis.edu/~su/publications/issta10-loading.pdf", "https://www.mandiant.com/blog/fxsst/"}}, goartifacts.ArtifactDefinition{Name: "WindowsCurrentVersion", Doc: "The Windows current version", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "CurrentVersion"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsDebugger", Doc: "Windows Debugger peristence or AV disable.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/a329t4ed%28VS.71%29.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsDomainCachedCredentials", Doc: "Windows domain cached credentials", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Security\\Cache", Value: "NL$*"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://juggernaut.wikidot.com/cached-credentials"}}, goartifacts.ArtifactDefinition{Name: "WindowsDomainName", Doc: "The domain the system is connected to.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters", Value: "Domain"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "domain", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentUserLoginScripts", Doc: "User login scripts configured via Windows environment variables.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitLogonServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitLogonScript"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitMprLogonScript"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/", "https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/cb6f1d6f-60a6-4369-803e-ec03d902e638/gina-how-to-run-domain-scripts-after-logon"}}, goartifacts.ArtifactDefinition{Name: "Windowsallusersappdata", Doc: "The %allusersappdata% environment variable\n\nMay or may not depend on registry keys - see urls\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "AllUsersProfile"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_programdata", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "ProgramData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_programdata", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "PATH", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\ProgramData", "\\Documents and Settings\\All Users"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_programdata", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoft.com/en-us/wdsi/help/folder-variables", "https://github.com/mirror/reactos/blob/c6d2b35ffc91e09f50dfb214ea58237509329d6b/reactos/boot/bootdata/livecd.inf", "http://support.microsoft.com/kb//214653"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableAppxProcess", Doc: "The %APPX_PROCESS% environment variable.\n\nIf this variable is set, .NET applications will attempt to load WinAppXRT.dll\nfrom PATH, which is a potential persistence mechanism.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "APPX_PROCESS"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/08/31/beyond-good-ol-run-key-part-17/"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariablePath", Doc: "The %PATH% environment variable.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\Environment", Value: "Path"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_path", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://environmentvariables.org/Path"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableProfilesDirectory", Doc: "Folder that typically contains users' profile directories; default is '%SystemDrive%\\Users'", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "ProfilesDirectory"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_profilesdirectory", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/bb776892(v=vs.85).aspx", "https://docs.microsoft.com/en-us/windows/deployment/usmt/usmt-recognized-environment-variables", "http://support.microsoft.com/kb//214653"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableProgramFiles", Doc: "The %ProgramFiles% environment variable.", Sources: []goartifacts.Source{goartifacts.Source{Type: "PATH", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\Program Files"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_programfiles", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion", Value: "ProgramFilesDir"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_programfiles", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://environmentvariables.org/ProgramFiles"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableProgramFilesX86", Doc: "The %ProgramFiles(x86)% environment variable.", Sources: []goartifacts.Source{goartifacts.Source{Type: "PATH", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\Program Files (x86)"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_programfilesx86", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion", Value: "ProgramFilesDir (x86)"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_programfilesx86", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://environmentvariables.org/ProgramFiles"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableSystemRoot", Doc: "The system root directory path, defined by %SystemRoot%, typically \"C:\\Windows\".", Sources: []goartifacts.Source{goartifacts.Source{Type: "PATH", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\Windows", "\\WinNT", "\\WINNT35", "\\WTSRV"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_windir", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_systemroot", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_systemdrive", Regex: "^(..)", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "SystemRoot"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_systemroot", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "environ_systemdrive", Regex: "^(..)", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://environmentvariables.org/SystemRoot"}}, goartifacts.ArtifactDefinition{Name: "WindowsEnvironmentVariableTemp", Doc: "The %TEMP% environment variable.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\Environment", Value: "TEMP"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "environ_temp", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://environmentvariables.org/Temp"}}, goartifacts.ArtifactDefinition{Name: "WindowsEventLogs", Doc: "Windows Event logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsEventLogApplication", "WindowsEventLogSecurity", "WindowsEventLogSystem", "WindowsXMLEventLogApplication", "WindowsXMLEventLogSecurity", "WindowsXMLEventLogSystem"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsEventLogApplication", Doc: "Application Windows Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\AppEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version < 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_Event_Log_(EVT)"}}, goartifacts.ArtifactDefinition{Name: "WindowsEventLogSecurity", Doc: "Security Windows Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\SecEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version < 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_Event_Log_(EVT)"}}, goartifacts.ArtifactDefinition{Name: "WindowsEventLogSystem", Doc: "System Windows Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\SysEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version < 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_Event_Log_(EVT)"}}, goartifacts.ArtifactDefinition{Name: "WindowsXMLEventLogApplication", Doc: "Application Windows XML Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\Application.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_XML_Event_Log_(EVTX)"}}, goartifacts.ArtifactDefinition{Name: "WindowsXMLEventLogSecurity", Doc: "Security Windows XML Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\Security.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_XML_Event_Log_(EVTX)"}}, goartifacts.ArtifactDefinition{Name: "WindowsXMLEventLogSysmon", Doc: "Sysmon Windows XML Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\Microsoft-Windows-Sysmon%4Operational.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon", "https://blogs.technet.microsoft.com/motiba/2016/10/18/sysinternals-sysmon-unleashed"}}, goartifacts.ArtifactDefinition{Name: "WindowsXMLEventLogSystem", Doc: "System Windows XML Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\System.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_XML_Event_Log_(EVTX)"}}, goartifacts.ArtifactDefinition{Name: "WindowsXMLEventLogTerminalServices", Doc: "TerminalServices Windows XML Event Log.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\winevt\\Logs\\Microsoft-Windows-TerminalServices-LocalSessionManager%4Operational.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_XML_Event_Log_(EVTX)"}}, goartifacts.ArtifactDefinition{Name: "WindowsExcludeFromKnownDLLs", Doc: "ExcludeFromKnownDLLs can be used to bypass search order hijacking protection.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "ExcludeFromKnownDLLs"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586%28v=vs.85%29.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerAppKey", Doc: "Handlers for special keys on some keyboards (file path or CLSID).", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\AppKey\\*", Value: "ShellExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://answers.microsoft.com/en-us/windows/forum/windows_vista-hardware/assigning-the-special-keys-at-the-top-of-the/d1ab2e13-5297-457d-a8e8-bc2c883d8b58?db=5", "http://h30434.www3.hp.com/t5/Notebook-Hardware/How-do-I-customize-the-Action-Keys/td-p/379207"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerAutoplayHandlers", Doc: "Handlers for autoplay events in Windows Explorer.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\AutoplayHandlers\\Handlers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://msdn.microsoft.com/en-us/library/windows/desktop/aa468474.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerContextMenuHandlers", Doc: "Handlers for subcommands on context menu", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommandStore\\shell\\*", Value: "CommandStateHandler"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommandStore\\shell\\*", Value: "ExplorerCommandHandler"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommandStore\\shell\\*", Value: "command"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommandStore\\shell\\*\\command", Value: "DelegateExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/hh127467(v=vs.85).aspx", "https://msdn.microsoft.com/en-us/library/windows/desktop/cc144171(v=vs.85).aspx", "http://www.windowrdb.com/w.php?w=hklm-software-microsoft-windows-currentversion-explorer-commandstore-shell-windows-closewindow", "http://www.checkfilename.com/view-details/Windows-7-Ultimate/RespageIndex/4/sTab/2/"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespaceCommonPlaces", Doc: "CLSIDs listed here are used to populate the Common Places items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CommonPlaces\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\CommonPlaces\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\CommonPlaces\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\CommonPlaces\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\CommonPlaces\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/hh127450(v=vs.85).aspx", "http://www.geoffchappell.com/studies/windows/shell/shell32/classes/commonplacesfolder.htm", "http://www.windowrdb.com/w.php?w=hklm-software-microsoft-windows-currentversion-explorer-commonplaces"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespaceControlPanel", Doc: "CLSIDs listed here are used to populate the Control Panel items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanel\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanelWOW64\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanelWOW64\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpaceWOW64\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanelWOW64\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanelWOW64\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanelWOW64\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanel\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanel\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanelWOW64\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Wow6432Node\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\ControlPanelWOW64\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/hh127450(v=vs.85).aspx", "http://www.geoffchappell.com/studies/windows/shell/shell32/classes/controlpanel.htm"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespaceDesktop", Doc: "CLSIDs listed here are used to populate the Desktop items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\Desktop\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\Desktop\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Wow6432Node\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\Desktop\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\Desktop\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://social.technet.microsoft.com/Forums/windowsserver/en-US/2760309c-89d1-414c-a04c-ce4178e90787/hide-libraries-icon-from-desktop", "http://www.geoffchappell.com/studies/windows/shell/shell32/classes/regfolder.htm", "http://www.geoffchappell.com/notes/windows/shell/controlpanel/desktopicons.htm", "https://support.microsoft.com/en-us/kb/321777"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespaceMyComputer", Doc: "CLSIDs listed here are used to populate the MyComputer items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\MyComputer\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\MyComputer\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Wow6432Node\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\MyComputer\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\MyComputer\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.geoffchappell.com/studies/windows/shell/shell32/classes/mycomputer.htm", "http://www.howtogeek.com/168081/how-to-remove-the-folders-from-my-computer-in-windows-8.1/", "http://answers.microsoft.com/en-us/windows/forum/windows8_1-files/how-to-remove-these-folders-from-windows-81/777c4ba3-7853-453e-bfa0-9a0f4245b9e1?db=5"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespaceNetworkNeighborhood", Doc: "CLSIDs listed here are used to populate the Network Neighborhood items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\NetworkNeighborhood\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\NetworkNeighborhood\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\NetworkNeighborhood\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\NetworkNeighborhood\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\NetworkNeighborhood\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.geoffchappell.com/studies/windows/shell/shell32/classes/regfolder.htm", "http://www.lavasoft.com/mylavasoft/rogues/secretservice", "http://www.wikihow.com/Manually-Remove-Macatte-Malware"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerNamespacePrintersAndFaxes", Doc: "CLSIDs listed here are used to populate the Printer and Fax items.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\PrintersAndFaxes\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\PrintersAndFaxes\\NameSpace\\DelegateFolders", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\PrintersAndFaxes\\NameSpace\\DelegateFolders", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\PrintersAndFaxes\\NameSpace", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionInfo\\*\\PrintersAndFaxes\\NameSpace\\DelegateFolders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.geoffchappell.com/studies/windows/shell/shell32/classes/printers.htm"}}, goartifacts.ArtifactDefinition{Name: "WindowsFileTypeAutorunAssociations", Doc: "Registry value for what application class identifier (CLSID) to launch for a file extension.\n\nExtension subkeys start with a dot. The '(Default)' value will be a ProgID,\nwhich points to another entry in HKCR specifying the command to run to open\na file of the given type. The WindowsShellOpenCommand artifact is associated\nwith these ProgID command invocations.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\.*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\.*", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/ms678415(v=vs.85).aspx", "https://docs.microsoft.com/en-us/windows/desktop/shell/fa-file-types"}}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallLogFile", Doc: "Windows Firewall default logfile", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\logfiles\\firewall\\pfirewall.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows/access-protection/windows-firewall/configure-the-windows-firewall-log"}}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallEnabledRules", Doc: "Command to list the enabled Windows Firewall rules.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "netsh.exe", Args: []string{"advfirewall", "monitor", "show", "firewall", "rule", "name=all"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallRules", Doc: "Command to list the configured Windows Firewall rules.", Sources: []goartifacts.Source{goartifacts.Source{Type: "COMMAND", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "netsh.exe", Args: []string{"advfirewall", "firewall", "show", "rule", "name=all"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsGroupPolicyScripts", Doc: "Windows group policy scripts", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\psscripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\scripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\Logoff\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\Logon\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\psscripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\scripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\Shutdown\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\Startup\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsHostsFiles", Doc: "The Windows hosts and lmhosts file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\Drivers\\etc\\Lmhosts", "%%environ_systemroot%%\\System32\\Drivers\\etc\\hosts"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsHotkeyReplacement", Doc: "Hotkey executable replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\magnifier.exe", "%%environ_systemroot%%\\System32\\sethc.exe", "%%environ_systemroot%%\\System32\\utilman.exe"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsInstallationDateTime", Doc: "Windows installation date and time", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "InstallDate"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsLogoffScript", Doc: "Windows policy logoff script", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logoff"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logoff"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/ff404236.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsLogonScript", Doc: "Windows policy logon script", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logon"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logon"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/ff404236.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsLSAAuthenticationPackages", Doc: "Authentication Packages can be injected into LSASS.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Authentication Packages"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Authentication Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://technet.microsoft.com/en-us/library/cc963218.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsLSANotificationPackages", Doc: "Notification Packages can be injected into LSASS.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Notification Packages"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Notification Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://technet.microsoft.com/en-us/library/cc963221.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsLSASecurityPackages", Doc: "Security Packages can be injected into LSASS.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Security Packages"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Security Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/aa379392(v=vs.85).aspx", "https://dl.mandiant.com/EE/library/MIRcon2014/MIRcon_2014_IR_Track_Analysis_of_Malicious_SSP.pdf"}}, goartifacts.ArtifactDefinition{Name: "WindowsMetroApplicationCache", Doc: "Windows Metro application cache.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Packages\\*\\AC\\INetCache"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicmag.com/article/2012/09/microsoft-windows-8-forensic-first-look"}}, goartifacts.ArtifactDefinition{Name: "WindowsMetroApplicationCookies", Doc: "Windows Metro application cookies.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Packages\\*\\AC\\INetCookies"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicmag.com/article/2012/09/microsoft-windows-8-forensic-first-look"}}, goartifacts.ArtifactDefinition{Name: "WindowsMetroApplicationHistory", Doc: "Windows Metro application history.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Packages\\*\\AC\\INetHistory"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicmag.com/article/2012/09/microsoft-windows-8-forensic-first-look"}}, goartifacts.ArtifactDefinition{Name: "WindowsMetroUserPinnedFavoriteTiles", Doc: "Windows Metro user-pinned favorite tiles.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Microsoft\\Windows\\RoamingTiles"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicmag.com/article/2012/09/microsoft-windows-8-forensic-first-look"}}, goartifacts.ArtifactDefinition{Name: "WindowsMostRecentApplication", Doc: "Windows Most Recent Application name key", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\*\\MostRecentApplication", Value: "Name"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\*\\MostRecentApplication", Value: "Name"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_ransom.smc7", "https://www.symantec.com/security_response/writeup.jsp?docid=2014-092314-3644-99&tabid=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsMSDTCDLLs", Doc: "Windows MSDTC attempts to load these DLLs on start", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\MSDTC\\MTxOCI\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\MSDTC\\MTxOCI\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.mandiant.com/blog/hikit-rootkit-advanced-persistent-attack-techniques-part-1-2/"}}, goartifacts.ArtifactDefinition{Name: "WindowsMultiMediaDrivers", Doc: "Configured drivers for different multimedia filetypes.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_USERS\\%%users.sid%%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_USERS\\%%users.sid%%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://support.microsoft.com/en-us/kb/126054", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsNetworkShellHelpers", Doc: "Windows Network Shell (netsh) helpers are loaded on boot", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Netsh", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Netsh"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/242468"}}, goartifacts.ArtifactDefinition{Name: "WindowsOpenSaveMRU", Doc: "Information about files opened or saved in a Windows shell dialog.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDIg32\\OpenSaveMRU\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version < 6"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/OpenSaveMRU", "https://digital-forensics.sans.org/blog/2010/04/02/openrunsavemru-lastvisitedmru"}}, goartifacts.ArtifactDefinition{Name: "WindowsOpenSavePidlMRU", Doc: "Information about files opened or saved in a Windows shell dialog.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSavePidlMRU\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://digital-forensics.sans.org/blog/2010/04/02/openrunsavemru-lastvisitedmru", "http://www.forensicswiki.org/wiki/OpenSavePidlMRU"}}, goartifacts.ArtifactDefinition{Name: "WindowsPendingFileRenames", Doc: "Windows Pending file renames on reboot", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "PendingFileRenameOperations"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc960241.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsPendingGPOs", Doc: "Windows Pending GPOs registry settings.\n\nThis is a persistence mechanism known to be used by the Gootkit malware family.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\IEAK\\GroupPolicy\\PendingGPOs", Value: "Path1"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\IEAK\\GroupPolicy\\PendingGPOs", Value: "Path1"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.certego.net/en/news/malware-tales-gootkit/"}}, goartifacts.ArtifactDefinition{Name: "WindowsPersistenceMechanisms", Doc: "Persistence mechanisms in Windows.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsPersistenceRegistryKeys", "WindowsPowerShellDefaultProfiles", "WindowsServices"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsPersistenceRegistryKeys", Doc: "Windows Registry keys used for persistence.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"InternetExplorerBrowserHelperObjects", "WindowsActiveDesktop", "WindowsActiveSyncAutoStart", "WindowsAlternateShell", "WindowsAppCertDLLs", "WindowsAppInitDLLs", "WindowsBootVerificationProgram", "WindowsCommandProcessorAutoRun", "WindowsCredentialProviderFilters", "WindowsCredentialProviders", "WindowsDebugger", "WindowsEnvironmentUserLoginScripts", "WindowsExplorerAutoplayHandlers", "WindowsFileTypeAutorunAssociations", "WindowsFontDrivers", "WindowsIconServiceLib", "WindowsLSAAuthenticationPackages", "WindowsLSANotificationPackages", "WindowsLSASecurityPackages", "WindowsMSDTCDLLs", "WindowsMultiMediaDrivers", "WindowsNetworkShellHelpers", "WindowsPendingGPOs", "WindowsPLAPProviders", "WindowsPrintMonitors", "WindowsRunGrpConv", "WindowsRunKeys", "WindowsRunServices", "WindowsScreenSaverExecutable", "WindowsSearchFilterHandlers", "WindowsSecurityProviders", "WindowsServiceControlManagerExtension", "WindowsSessionManagerBootExecute", "WindowsSessionManagerExecute", "WindowsSessionManagerS0InitialCommand", "WindowsSessionManagerSetupExecute", "WindowsSessionManagerSubSystems", "WindowsSessionManagerWOWCommandLine", "WindowsSetupCommandLine", "WindowsSharedTaskScheduler", "WindowsShellExecuteHooks", "WindowsShellExtensions", "WindowsShellIconOverlayIdentifiers", "WindowsShellLoadAndRun", "WindowsShellOpenCommand", "WindowsShellRunasCommand", "WindowsShellServiceObjects", "WindowsStubPaths", "WindowsSystemPolicyShell", "WindowsTerminalServerInitialProgram", "WindowsTerminalServerRunKeys", "WindowsTerminalServerStartupPrograms", "WindowsToolPaths", "WindowsWinlogonAppSetup", "WindowsWinlogonAvailableShells", "WindowsWinlogonGinaDLL", "WindowsWinlogonGPExtensions", "WindowsWinlogonNotify", "WindowsWinlogonShell", "WindowsWinlogonSystem", "WindowsWinlogonTaskman", "WindowsWinlogonUiHost", "WindowsWinlogonUserinit", "WindowsWinlogonVMApplet", "WinSock2LayeredServiceProviders", "WinSock2NamespaceProviders"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsPLAPProviders", Doc: "Windows Pre-Logon Access Provider (PLAP) Providers", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\PLAP Providers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\PLAP Providers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/bb530584(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsPolicyDisallowRun", Doc: "Restrict users from running specific applications, typically used by malware to block AV.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/323525", "https://blog.malwarebytes.com/detections/pum-optional-disallowrun/"}}, goartifacts.ArtifactDefinition{Name: "WindowsPowerShellDefaultProfiles", Doc: "Default PowerShell Profile files. These files are executed by default when PowerShell starts up.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\system32\\WindowsPowerShell\\v1.0\\profile.ps1", "%%environ_systemroot%%\\system32\\WindowsPowerShell\\v1.0\\Microsoft.PowerShell_profile.ps1", "%%users.userprofile%%\\Documents\\WindowsPowerShell\\profile.ps1", "%%users.userprofile%%\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/magazine/2008.10.windowspowershell.aspx#id0190010", "http://www.hexacorn.com/blog/2014/08/27/beyond-good-ol-run-key-part-16/"}}, goartifacts.ArtifactDefinition{Name: "WindowsPowerShellEnableScripts", Doc: "Registry keys that control whether PowerShell scripts can execute directly.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\PowerShell", Value: "EnableScripts"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\PowerShell", Value: "EnableScripts"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/library/hh847748.aspx", "http://www.hexacorn.com/blog/2014/08/27/beyond-good-ol-run-key-part-16/"}}, goartifacts.ArtifactDefinition{Name: "WindowsPowerShellExecutionPolicies", Doc: "PowerShell Script Execution Policies for all users, and the system.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\PowerShell", Value: "ExecutionPolicy"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\PowerShell", Value: "ExecutionPolicy"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/library/hh847748.aspx", "http://www.hexacorn.com/blog/2014/08/27/beyond-good-ol-run-key-part-16/"}}, goartifacts.ArtifactDefinition{Name: "WindowsPrefetchFiles", Doc: "Windows Prefetch files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\Prefetch\\*.pf"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Prefetch"}}, goartifacts.ArtifactDefinition{Name: "WindowsPrintMonitors", Doc: "Windows Print Monitor DLL config.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Print\\Monitors\\*", Value: "Driver"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://support.microsoft.com/en-us/kb/102966"}}, goartifacts.ArtifactDefinition{Name: "WindowsProductName", Doc: "The Windows product name", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "ProductName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsProgramsCache", Doc: "Windows Programs Cache", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartPage", Value: "ProgramsCache"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartPage2", Value: "ProgramsCache"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Programs%20Cache%20values.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsProgramsCacheJumpLists", Doc: "Windows Programs Cache Jump Lists", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartPage2", Value: "ProgramsCacheSMP"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartPage2", Value: "ProgramsCacheTBP"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/windows/JumpLists.md"}}, goartifacts.ArtifactDefinition{Name: "WindowsProxyPACAutoConfigURL", Doc: "Windows Proxy PAC AutoConfigURL.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", Value: "AutoConfigURL"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://blogs.msdn.microsoft.com/askie/2015/07/17/how-can-i-configure-proxy-autoconfigurl-setting-using-group-policy-preference-gpp/"}}, goartifacts.ArtifactDefinition{Name: "WindowsProxyServerSettings", Doc: "Windows Proxy Server Settings.\n\nMalware can modify these settings to redirect traffic through\na malicious program running on the machine (for instance, by\nspecifying 127.0.0.1 as the IP address of the proxy server to\nuse) or to a malicious host on the local network or internet.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", Value: "ProxyServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", Value: "ProxyServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", Value: "ProxyServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Internet Settings", Value: "ProxyServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\NlaSvc\\Parameters\\Internet\\ManualProxies", Value: "ProxyServer"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\System\\CurrentControlSet\\Services\\NlaSvc\\Parameters\\Internet\\ManualProxies", Value: "ProxyServer"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://blog.malwarebytes.com/detections/pum-optional-proxyhijacker/"}}, goartifacts.ArtifactDefinition{Name: "WindowsRecentFileCacheBCF", Doc: "The RecentFileCache.bcf file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\AppCompat\\Programs\\RecentFileCache.bcf"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 1"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/assorted/blob/master/documentation/RecentFileCache.bcf%20format.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsRecycleBin", Doc: "Windows Recycle Bin (Recyler, $Recycle.Bin) files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"\\$Recycle.Bin\\**", "\\Recycler\\**"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows#Recycle_Bin"}}, goartifacts.ArtifactDefinition{Name: "WindowsRegistryCurrentControlSet", Doc: "The current control set of the Windows Registry.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\Select", Value: "Current"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "current_control_set", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsRegistryFilesAndTransactionLogs", Doc: "Windows user and system Registry files and transaction logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsSystemRegistryFiles", "WindowsSystemRegistryTransactionLogFiles", "WindowsUserRegistryFiles", "WindowsUserRegistryTransactionLogFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Users"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsRegistryProfileSIDs", Doc: "Get SIDs for all users on the system with profiles present in the Registry.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.sid", Regex: "ProfileList\\\\(.+)$", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/windows/desktop/bb776892(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsRegistryProfiles", Doc: "Get SIDs for all users on the system with profiles present in the Registry.\n\nThis looks in the Windows Registry where the profiles are stored and retrieves\nthe paths for each profile.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*", Value: "ProfileImagePath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.userprofile", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "users.homedir", Regex: "", WMIKey: ""}, goartifacts.Provide{Key: "users.username", Regex: ".*\\\\(.+)", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/windows/desktop/bb776892(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsReleaseIdentifier", Doc: "The Windows 10 release identifier (or version number).\n\nThis Windows Registry value contains the semi-annual Windows 10 version number.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "ReleaseID"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoft.com/en-us/itpro/windows-10/release-information"}}, goartifacts.ArtifactDefinition{Name: "WindowsRoverAutostartDLL", Doc: "Windows Rover autostart DLL.\n\nThe DLL loaded via the Windows Rover autostart mechanism.\nIf this file exists, and the Rover autostart Registry key is set,\nuserinit.exe will load this file and call its RunMonitor export.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\rover.dll"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/05/21/beyond-good-ol-run-key-part-12/"}}, goartifacts.ArtifactDefinition{Name: "WindowsRoverAutostartKey", Doc: "Windows Rover autostart Registry key.\n\nWhen set userinit.exe will load the DLL at %SystemRoot%\\System32\\rover.dll and call its RunMonitor export.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_CLASSES_ROOT\\CLSID\\{16d12736-7a9e-4765-bec6-f301d679caaa}"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/05/21/beyond-good-ol-run-key-part-12/"}}, goartifacts.ArtifactDefinition{Name: "WindowsRunGrpConv", Doc: "The Windows RunGrpConv Registry value.\n\nWhen this Registry value is non-zero userinit.exe will launch grpconv.exe at user login.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "RunGrpConv"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version <= 5"}, Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.hexacorn.com/blog/2014/06/18/beyond-good-ol-run-key-part-13/", "http://www.exploit-id.com/local-exploits/windows-xp-sp2-grpconv-exe"}}, goartifacts.ArtifactDefinition{Name: "WindowsRunKeys", Doc: "Windows Run and RunOnce keys.\n\nNote users.sid will currently only expand to SIDs with profiles\non the system, not all SIDs.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/aa376977%28v=vs.85%29.aspx", "https://support.microsoft.com/en-us/kb/137367", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://technet.microsoft.com/en-us/magazine/ee851671.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsRunServices", Doc: "Windows Run Services.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServices"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/179365", "https://threatvector.cylance.com/en_us/home/windows-registry-persistence-part-2-the-run-keys-and-search-order.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsScheduledTasks", Doc: "Windows Scheduled Tasks.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\Tasks\\**10", "%%environ_systemroot%%\\System32\\Tasks\\**10", "%%environ_systemroot%%\\SysWow64\\Tasks\\**10"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://forensicswiki.org/wiki/Windows#Scheduled_Tasks"}}, goartifacts.ArtifactDefinition{Name: "WindowsScreenSaverExecutable", Doc: "ScreenSaver Executable", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop", Value: "scrnsave.exe"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Control Panel\\Desktop", Value: "scrnsave.exe"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://technet.microsoft.com/en-us/library/cc737855(v=ws.10).aspx", "https://technet.microsoft.com/en-us/library/cc957840.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsSearchDatabase", Doc: "Windows Search database (Windows.edb).", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Microsoft\\Search\\Data\\Applications\\Windows\\Windows.edb"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Windows_Desktop_Search"}}, goartifacts.ArtifactDefinition{Name: "WindowsSecurityProviders", Doc: "Security Providers DLLs", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SecurityProviders"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://github.com/wmark/security-configuration/blob/master/Windows/disable-weak-ciphers-and-enable-TLS1.x.reg"}}, goartifacts.ArtifactDefinition{Name: "WindowsServiceControlManagerExtension", Doc: "Windows service control manager extension", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control", Value: "ServiceControlManagerExtension"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://forum.sysinternals.com/autoruns-and-windows-7_topic19770.html", "https://support.microsoft.com/en-us/kb/102985", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://www.silentrunners.org/Silent%20Runners.vbs"}}, goartifacts.ArtifactDefinition{Name: "WindowsServices", Doc: "Windows services from the Registry.\n\nMalware can add new services to gain persistence, or modify\nexisting ones to avoid detection. For example, the ZeroAccess\nrootkit will make the following changes to the WSCSVC (Windows\nSecurity Service Center), WINDEFEND (Windows Defender),\nand MPSSVC (Windows Firewall) services, among others\n\n* Set 'Start' to 4, indicating that the service should be disabled\n* Set 'DeleteFlag' to 1, indicating that the service should be removed\n* Set 'ErrorControl' to 0 and 'Type' to 32, causing it to fail to be\n  started by the Service Controller and no error messages generated\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\*\\Parameters"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://support.microsoft.com/kb/103000", "https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsActionCenterSettings", Doc: "Windows Action Center Settings\n\nMalware can modify these keys to disable notifications that occur\nwhen various security features are disabled. One malware family\nknown to modify these keys is Kovter, a well-known trojan.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Action Center\\Checks\\{e8433b72-5842-4d43-8645-bc2c35960837}.check.*", Value: "CheckSetting"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Action Center\\Checks\\{e8433b72-5842-4d43-8645-bc2c35960837}.check.*", Value: "CheckSetting"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Notifications\\Settings\\Windows.SystemToast.SecurityAndMaintenance", Value: "Enabled"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Notifications\\Settings\\Windows.SystemToast.SecurityAndMaintenance", Value: "Enabled"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://winaero.com/blog/registry-tweak-to-disable-action-center-notifications-in-windows-7/", "https://blog.talosintelligence.com/2019/05/threat-roundup-0517-0524.html", "https://blogs.technet.microsoft.com/platforms_lync_cloud/2017/05/05/disabling-windows-10-action-center-notifications/"}}, goartifacts.ArtifactDefinition{Name: "WindowsBootConfigurationSettings", Doc: "Windows Boot Configuration Settings.\n\nThese Windows Registry values are associated with the Windows Boot\nConfiguration Settings. Malware, like Cerber (ransomware), is known to\nchange the Windows Boot Configuration Settings and disable recovery options\nlike the ability to boot into safe mode.\n\n'bcdedit.exe' can be used to modify the Windows Boot Configuration Settings.\nThe mappings of registry key to associated bcdedit commands is as\nfollows:\n* 16000009: 'bcdedit.exe /set {default} recoveryenabled <yes|no>'\n  * 00 gets stored for 'no', 01 gets stored for 'yes'\n* 250000e0: 'bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures'\n  * 01 00 00 00 00 00 00 00 gets stored.  Otherwise, the key is not present\n\nThe wildcard component of the Windows Registry key is the identifier\nassociated with the Windows Boot Loader instance on a given machine. This\nidentifier can be determined by running 'bcdedit.exe /v' and looking at the\n'identifier' under the Windows Boot Loader section (on Windows 7 and\nWindows 10, '{default}' [used by Cerber] points to this instance).\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\BCD00000000\\Objects\\*\\Elements\\16000009", Value: "Element"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\BCD00000000\\Objects\\*\\Elements\\250000e0", Value: "Element"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcd-system-store-settings-for-uefi", "https://blog.talosintelligence.com/2019/04/sodinokibi-ransomware-exploits-weblogic.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsDisallowedSystemCertificates", Doc: "Windows Disallowed System Certificates\n\nMalware can add code-signing certificates associated with\nantivirus programs to the disallowed list to prevent the\nAV programs from running.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\SystemCertificates\\Disallowed\\Certificates\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\SystemCertificates\\Disallowed\\Certificates\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\SystemCertificates\\Disallowed\\Certificates\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Policies\\Microsoft\\SystemCertificates\\Disallowed\\Certificates\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://blog.malwarebytes.com/detections/pum-optional-misplacedcertificate/"}}, goartifacts.ArtifactDefinition{Name: "WindowsExplorerSettings", Doc: "Windows Explorer Settings\n\nMalware can modify these keys to make it more difficult for the\nuser to detect and remove malicious software.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "Hidden"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "Hidden"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "Hidden"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "Hidden"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "HideFileExt"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "HideFileExt"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "HideFileExt"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "HideFileExt"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowSuperHidden"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowSuperHidden"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowSuperHidden"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowSuperHidden"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "HideSCAHealth"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "HideSCAHealth"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "HideSCAHealth"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "HideSCAHealth"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoFolderOptions"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoFolderOptions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoFolderOptions"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoFolderOptions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoRun"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoRun"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoRun"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoRun"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoViewContextMenu"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoViewContextMenu"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoViewContextMenu"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "NoViewContextMenu"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", Value: "ShowControlPanel"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "TaskbarNoNotification"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "TaskbarNoNotification"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "TaskbarNoNotification"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", Value: "TaskbarNoNotification"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://www.sdkhere.com/2016/02/analysis-of-malware-using-wmi-query.html", "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_mandrom.e", "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_deleter.ah", "https://blog.malwarebytes.com/detections/pum-optional-disabledrightclick/", "https://blog.malwarebytes.com/detections/pum-optional-disableshowcontrolpanel/"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemSettings", Doc: "Windows System Settings\n\nMalware can modify these keys to make it more difficult for the\nuser to detect and remove malicious software.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableCAD"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableCAD"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableCAD"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableCAD"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableRegistryTools"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableRegistryTools"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableRegistryTools"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableRegistryTools"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableTaskMgr"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableTaskMgr"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableTaskMgr"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "DisableTaskMgr"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "NoDispCPL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "NoDispCPL"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "NoDispCPL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "NoDispCPL"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System", Value: "DisableCMD"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\System", Value: "DisableCMD"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\System", Value: "DisableCMD"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\System", Value: "DisableCMD"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://www.sdkhere.com/2016/02/analysis-of-malware-using-wmi-query.html", "https://www.thewindowsclub.com/enable-disable-command-prompt-windows", "https://blog.malwarebytes.com/detections/pum-optional-disableregistrytools/", "https://blog.malwarebytes.com/detections/pum-optional-disabletaskmgr/", "https://www.stigviewer.com/stig/windows_7/2014-04-02/finding/V-1154", "https://blog.malwarebytes.com/detections/pum-optional-nodispcpl/", "https://blog.malwarebytes.com/detections/pum-optional-disablecmdprompt/"}}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallAuthorizedApplications", Doc: "Windows Firewall Authorized Applications\n\nMalware can add paths to this list to more easily communicate\nover the network on an infected machine. For instance, Emotet\nmodifies some these settings after gaining execution.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\\AuthorizedApplications\\List\\*", "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\\AuthorizedApplications\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile\\AuthorizedApplications\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\\AuthorizedApplications\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile\\AuthorizedApplications\\List\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://threatvector.cylance.com/en_us/home/threat-spotlight-eyepyramid-malware.html", "https://blog.talosintelligence.com/2019/05/threat-roundup-0524-0531.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallGloballyOpenPorts", Doc: "Windows Firewall Globally Open Ports\n\nMalware can add to the list of open ports to avoid\nhaving to create Windows Firewall exceptions tied\nto specific applications.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\\GloballyOpenPorts\\List\\*", "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\\GloballyOpenPorts\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile\\GloballyOpenPorts\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\\GloballyOpenPorts\\List\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile\\GloballyOpenPorts\\List\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://qaforce.wordpress.com/2009/10/06/windows-firewall-registry-keys/", "https://github.com/steeve85/Malwares/wiki/Registry"}}, goartifacts.ArtifactDefinition{Name: "WindowsFirewallPolicySettings", Doc: "Windows Firewall Policy Settings\n\nMalware can modify these settings to more easily communicate\nover the network on an infected machine. For instance, Emotet\nmodifies some these settings after gaining execution.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile", Value: "EnableFirewall"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile", Value: "DisableNotifications"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile", Value: "DoNotAllowExceptions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile", Value: "DefaultInboundAction"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile", Value: "DefaultOutboundAction"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile", Value: "EnableFirewall"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile", Value: "DisableNotifications"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile", Value: "DoNotAllowExceptions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile", Value: "DefaultInboundAction"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile", Value: "DefaultOutboundAction"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile", Value: "EnableFirewall"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile", Value: "DisableNotifications"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile", Value: "DoNotAllowExceptions"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile", Value: "DefaultInboundAction"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile", Value: "DefaultOutboundAction"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/networking-mpssvc-svc-privateprofile-enablefirewall", "https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/networking-mpssvc-svc-privateprofile-disablenotifications", "https://blog.talosintelligence.com/2019/05/threat-roundup-0503-0510.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsSecurityCenterSettings", Doc: "Windows Security Center Settings\n\nMalware can modify these settings to avoid detection on\nan infected machine. For instance, Emotet modifies some of\nthese settings after gaining execution.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "AntiSpyWareDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "AntiSpyWareDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "AntiVirusDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "AntiVirusDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "AntiVirusOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "AntiVirusOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "AutoUpdateDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "AutoUpdateDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "FirewallDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "FirewallDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "FirewallOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "FirewallOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "UpdatesDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "UpdatesDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "UpdatesOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "UpdatesOverride"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Security Center", Value: "UacDisableNotify"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Security Center", Value: "UacDisableNotify"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://blog.talosintelligence.com/2019/05/threat-roundup-0503-0510.html", "https://blog.appriver.com/phorphiex/trik-botnet-campaign-leads-to-multiple-infections-ransomware-banking-trojan-cryptojacking", "https://ccm.net/faq/1446-disabling-security-alerts-under-vista"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRestoreSettings", Doc: "Windows System Restore Settings\n\nSome malware, especially ransomware, will disable system restore\nto make system recovery more difficult.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\SystemRestore", Value: "DisableConfig"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", Value: "DisableConfig"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\SystemRestore", Value: "DisableConfig"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", Value: "DisableConfig"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\SystemRestore", Value: "DisableSR"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", Value: "DisableSR"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\SystemRestore", Value: "DisableSR"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", Value: "DisableSR"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\Installer", Value: "LimitSystemRestoreCheckpointing"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\Installer", Value: "LimitSystemRestoreCheckpointing"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://blog.talosintelligence.com/2019/05/threat-roundup-0503-0510.html", "https://www.windows-commandline.com/enable-disable-system-restore-service/", "https://docs.microsoft.com/en-us/windows/desktop/msi/limitsystemrestorecheckpointing"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserAccountControlSettings", Doc: "Windows User Account Control Settings\n\nMalware sometimes disables UAC to make it easier to perform\nactions on an infected machine.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "EnableLUA"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "EnableLUA"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "ConsentPromptBehaviorAdmin"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "ConsentPromptBehaviorAdmin"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gpsb/958053ae-5397-4f96-977f-b7700ee461ec", "https://blog.talosintelligence.com/2019/05/threat-roundup-0503-0510.html", "https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gpsb/341747f5-6b5d-4d30-85fc-fa1cc04038d4"}}, goartifacts.ArtifactDefinition{Name: "WindowsUpgradeSettings", Doc: "Windows Upgrade Settings\n\nMalware sometimes disables a machine ability to upgrade from\nprevious versions of Windows to Windows 10. One malware family\nknown to modify these keys is Kovter, a well-known trojan.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", Value: "DisableOSUpgrade"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\WindowsUpdate", Value: "DisableOSUpgrade"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\OSUpgrade", Value: "ReservationsAllowed"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\WindowsUpdate\\OSUpgrade", Value: "ReservationsAllowed"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://www.ghacks.net/2016/01/08/disableosupgrade-prevents-the-upgrade-to-windows-10/", "https://blog.talosintelligence.com/2019/05/threat-roundup-0517-0524.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsUpdateSettings", Doc: "Windows Update Settings", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", Value: "NoAutoUpdate"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", Value: "NoAutoUpdate"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows/deployment/update/waas-wu-settings", "https://blog.talosintelligence.com/2019/06/threat-roundup-0531-0607.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsFontDrivers", Doc: "Windows font drivers from the Registry.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Font Drivers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerBootExecute", Doc: "Windows Session Manager BootExecute persistence.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "BootExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc963230.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerExecute", Doc: "Windows Session Manager Execute persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "Execute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc976130.aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerS0InitialCommand", Doc: "Windows Session Manager S0InitialCommand persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "S0InitialCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/dd392286%28v=vs.85%29.aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerSetupExecute", Doc: "Windows Session Manager SetupExecute persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "SetupExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/dd392286%28v=vs.85%29.aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerSubSystems", Doc: "Windows Session Manager SubSystems persistence", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\SubSystems", Value: "Windows"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc976130.aspx", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "WindowsSessionManagerWOWCommandLine", Doc: "Windows Session Manager Windows-on-Windows (WOW) command line", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\WOW", Value: "cmdline"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\WOW", Value: "wowcmdline"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/102986"}}, goartifacts.ArtifactDefinition{Name: "WindowsSetupCommandLine", Doc: "Command line invocation used for custom setup and deployment tasks", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\Setup", Value: "CmdLine"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSharedTaskScheduler", Doc: "Runs on windows boot.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://www.bleepingcomputer.com/tutorials/windows-program-automatic-startup-locations/"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellExecuteHooks", Doc: "Shell execution hooks are called when ShellExecuteEx() is called.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellExecuteHooks", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellExecuteHooks"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://regenerus.com/malware-common-loadpoints/", "https://code.google.com/p/regripper/wiki/ASEPs"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellExtensions", Doc: "Approved extensions to the Windows Shell (explorer.exe).", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/cc144110(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellHandlersRegistryKeys", Doc: "Windows registry values for shell handler artifacts.\n\nContextMenuHandlers are added to right-click menus.\nCopyHookHandlers, DragDropHandlers, and ColumnHandlers are similar contextual\nsettings to trigger on these actions.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\ShellEx\\ColumnHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\ShellEx\\ContextMenuHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\ShellEx\\CopyHookHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\ShellEx\\DragDropHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\ShellEx\\PropertySheetHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Background\\ShellEx\\ContextMenuHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Background\\ShellEx\\CopyHookHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Background\\ShellEx\\DragDropHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Background\\ShellEx\\PropertySheetHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\ColumnHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\ContextMenuHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\CopyHookHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\DragDropHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\PropertySheetHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\ContextMenuHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\CopyHookHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\DragDropHandlers\\*", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\PropertySheetHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\ShellEx\\ColumnHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\ShellEx\\ContextMenuHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\ShellEx\\CopyHookHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\ShellEx\\DragDropHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\ShellEx\\PropertySheetHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Directory\\Background\\ShellEx\\ContextMenuHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Directory\\Background\\ShellEx\\CopyHookHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Directory\\Background\\ShellEx\\DragDropHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Directory\\Background\\ShellEx\\PropertySheetHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\ColumnHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\ContextMenuHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\CopyHookHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\DragDropHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\ShellEx\\PropertySheetHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\ContextMenuHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\CopyHookHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\DragDropHandlers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\Directory\\Background\\ShellEx\\PropertySheetHandlers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://www.codeguru.com/cpp/com-tech/shell/article.php/c4515/Logging-the-Shell-Activity.htm", "http://www.trendmicro.com/vinfo/us/threat-encyclopedia/archive/malware/troj_qoolaid.r"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellIconOverlayIdentifiers", Doc: "Called to display custom icons.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://msdn.microsoft.com/en-us/library/windows/desktop/hh127455(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellLoadAndRun", Doc: "Windows Shell Load and Run values", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Load"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Run"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Load"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Run"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://support.microsoft.com/en-us/kb/103865"}}, goartifacts.ArtifactDefinition{Name: "WindowsIconServiceLib", Doc: "Windows Icon Service Library Name\n\nThe value should default to 'IconCodecService.dll'\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "IconServiceLib"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellOpenCommand", Doc: "Executed every time this file type is opened. For most file types, the value should be '\"%1\" %*'.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\open\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\open\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\open\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\open\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: "IsolatedCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2", "https://pentestlab.blog/2017/06/09/uac-bypass-sdclt/"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellRunasCommand", Doc: "Executed every time an executable or script file type is run as administrator.\n\nFor most file types, the value should be '\"%1\" %*' or something similar.\nExample file type subkeys include 'exefile', 'batfile', and 'cmdfile'. These\nkeys can be modified by malware as a way to be periodically executed or to\nbypass UAC.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\runas\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\runas\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: "IsolatedCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2", "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/"}}, goartifacts.ArtifactDefinition{Name: "WindowsShellServiceObjects", Doc: "Windows Shell (explorer.exe) service objects delayed load.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=TrojanClicker:Win32/Zirit.X#tab=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsSetupApiLogs", Doc: "Windows setup API logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\setupapi.log", "%%environ_systemroot%%\\inf\\setupapi.app.log", "%%environ_systemroot%%\\inf\\setupapi.dev.log", "%%environ_systemroot%%\\inf\\setupapi.offline.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Logs"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/Setup_API_Logs"}}, goartifacts.ArtifactDefinition{Name: "WindowsShutdownScript", Doc: "Windows policy shutdown script", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Shutdown"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Shutdown\\*\\*", Value: "Script"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Shutdown\\*\\*", Value: "Parameters"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Shutdown\\*\\*", Value: "Script"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Shutdown\\*\\*", Value: "Parameters"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/ff404236.aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsStartupFolderModification", Doc: "Windows startup folder Registry values.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Common Startup"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders", Value: "Startup"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Startup"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.startup", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsStartupFolders", Doc: "Windows startup folder persistence.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*", "%%environ_allusersappdata%%\\Start Menu\\Programs\\Startup\\*", "%%users.appdata%%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*", "%%users.userprofile%%\\Start Menu\\Programs\\Startup\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsStartupScript", Doc: "Windows policy startup script", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Startup"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Startup\\*\\*", Value: "Script"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Startup\\*\\*", Value: "Parameters"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Startup\\*\\*", Value: "Script"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Startup\\*\\*", Value: "Parameters"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/ff404236.aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsStubPaths", Doc: "Windows StubPath persistence.\n\nEach time a user logs in, the Active Setup Installed Components in HKLM\nare compared ot the ones in HKCU, and if any are missing, or if the\nassociated version is less, the program is executed.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2", "http://bonemanblog.blogspot.com/2004/12/active-setup-registry-keys-and-their.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsSuperFetchFiles", Doc: "Windows SuperFetch files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\Prefetch\\Ag*.db", "%%environ_systemroot%%\\Prefetch\\Ag*.db.trx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://www.forensicswiki.org/wiki/SuperFetch"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemIniFiles", Doc: "Windows system ini files", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\system.ini", "%%environ_systemroot%%\\win.ini", "%%environ_systemroot%%\\wininit.ini"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsSystemPolicyShell", Doc: "Windows System policy replacement shell (custom user interface).", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "Shell"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "Shell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc728472(v=ws.10).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRegistryFilesBackup", Doc: "Backup of Windows system Registry files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\config\\RegBack\\SAM", "%%environ_systemroot%%\\System32\\config\\RegBack\\SECURITY", "%%environ_systemroot%%\\System32\\config\\RegBack\\SOFTWARE", "%%environ_systemroot%%\\System32\\config\\RegBack\\SYSTEM"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/msuhanov/regf/blob/master/Windows%20registry%20file%20format%20specification.md#types-of-files"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRegistryTransactionLogFilesBackup", Doc: "Backup of Windows system Registry transaction log files.\n\nThese files have been observed to be typically 0 byte in size.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\config\\RegBack\\SAM.LOG", "%%environ_systemroot%%\\System32\\config\\RegBack\\SAM.LOG1", "%%environ_systemroot%%\\System32\\config\\RegBack\\SAM.LOG2", "%%environ_systemroot%%\\System32\\config\\RegBack\\SECURITY.LOG", "%%environ_systemroot%%\\System32\\config\\RegBack\\SECURITY.LOG1", "%%environ_systemroot%%\\System32\\config\\RegBack\\SECURITY.LOG2", "%%environ_systemroot%%\\System32\\config\\RegBack\\SOFTWARE.LOG", "%%environ_systemroot%%\\System32\\config\\RegBack\\SOFTWARE.LOG1", "%%environ_systemroot%%\\System32\\config\\RegBack\\SOFTWARE.LOG2", "%%environ_systemroot%%\\System32\\config\\RegBack\\SYSTEM.LOG", "%%environ_systemroot%%\\System32\\config\\RegBack\\SYSTEM.LOG1", "%%environ_systemroot%%\\System32\\config\\RegBack\\SYSTEM.LOG2"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/msuhanov/regf/blob/master/Windows%20registry%20file%20format%20specification.md#types-of-files"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRegistryFiles", Doc: "Windows system Registry files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\config\\SAM", "%%environ_systemroot%%\\System32\\config\\SECURITY", "%%environ_systemroot%%\\System32\\config\\SOFTWARE", "%%environ_systemroot%%\\System32\\config\\SYSTEM", "\\System Volume Information\\Syscache.hve"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Registry%20files.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRegistryTransactionLogFiles", Doc: "Windows system Registry transaction log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\config\\SAM.LOG", "%%environ_systemroot%%\\System32\\config\\SAM.LOG1", "%%environ_systemroot%%\\System32\\config\\SAM.LOG2", "%%environ_systemroot%%\\System32\\config\\SECURITY.LOG", "%%environ_systemroot%%\\System32\\config\\SECURITY.LOG1", "%%environ_systemroot%%\\System32\\config\\SECURITY.LOG2", "%%environ_systemroot%%\\System32\\config\\SOFTWARE.LOG", "%%environ_systemroot%%\\System32\\config\\SOFTWARE.LOG1", "%%environ_systemroot%%\\System32\\config\\SOFTWARE.LOG2", "%%environ_systemroot%%\\System32\\config\\SYSTEM.LOG", "%%environ_systemroot%%\\System32\\config\\SYSTEM.LOG1", "%%environ_systemroot%%\\System32\\config\\SYSTEM.LOG2"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/msuhanov/regf/blob/master/Windows%20registry%20file%20format%20specification.md#format-of-transaction-log-files"}}, goartifacts.ArtifactDefinition{Name: "WindowsSystemRegistryFilesAndTransactionLogs", Doc: "Windows system Registry files and transaction logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsSystemRegistryFiles", "WindowsSystemRegistryTransactionLogFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsSystemResourceUsageMonitorDatabaseFile", Doc: "Windows System Resource Usage Monitor (SRUM) database file.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\sru\\SRUDB.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/esedb-kb/blob/master/documentation/System%20Resource%20Usage%20Monitor%20(SRUM).asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsTempDirectories", Doc: "Contents of the Windows temporary directories", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\Temp\\*", "%%environ_systemroot%%\\Temp\\*", "%%users.localappdata%%\\Temp\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsTerminalServerRunKeys", Doc: "Windows Terminal Server Run keys", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610"}}, goartifacts.ArtifactDefinition{Name: "WindowsTerminalServerStartupPrograms", Doc: "Windows Terminal Server Startup Programs", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Terminal Server\\Wds\\rdpwd", Value: "StartupPrograms"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://forum.sysinternals.com/rdpclip_topic4729.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsTerminalServerInitialProgram", Doc: "Windows Terminal Server Initial Program", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp", Value: "InitialProgram"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsActiveSyncAutoStart", Doc: "Windows ActiveSync AutoStart entries", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsTimezone", Doc: "The timezone of the system in Olson format.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation", Value: "StandardName"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation", Value: "TimeZoneKeyName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Time%20zone%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsToolPaths", Doc: "Paths to windows tools such as defrag, chkdsk.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\BackupPath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\ChkDskPath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\cleanuppath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\DefragPath"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://www.liutilities.com/products/registrybooster/tweaklibrary/tweaks/11118/"}}, goartifacts.ArtifactDefinition{Name: "WindowsUninstallKeys", Doc: "Uninstall Registry keys", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/aa372105(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsUpdateBuildRevision", Doc: "Windows kernel update build revision (UBR).\n\nThis Windows Registry value contains the monthly rollup patch version.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "UBR"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://social.technet.microsoft.com/Forums/en-US/cadee4de-24d0-403e-9f3e-75868abf8f34"}}, goartifacts.ArtifactDefinition{Name: "WindowsUpdateStatus", Doc: "Windows auto update status.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Detect", Value: "LastError"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Detect", Value: "LastSuccessTime"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Download", Value: "LastError"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Download", Value: "LastSuccessTime"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Install", Value: "LastError"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\\Results\\Install", Value: "LastSuccessTime"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://forensicswiki.org/wiki/Windows_Update", "http://blogs.msdn.com/b/aruns_blog/archive/2011/06/20/active-setup-registry-key-what-it-is-and-how-to-create-in-the-package-using-admin-studio-install-shield.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserAutomaticDestinationsJumpLists", Doc: "Windows user AutomaticDestinations Jump Lists.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\Recent\\AutomaticDestinations\\*.automaticDestinations-ms"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/windows/JumpLists.md"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserCustomDestinationsJumpLists", Doc: "Windows user CustomDestinations Jump Lists.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\Recent\\CustomDestinations\\*.customDestinations-ms"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/windows/JumpLists.md"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserDownloadsDirectory", Doc: "User downloads directory", Sources: []goartifacts.Source{goartifacts.Source{Type: "DIRECTORY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.userprofile%%\\Downloads\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUserJumpLists", Doc: "Windows user Jump Lists.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsProgramsCacheJumpLists", "WindowsUserAutomaticDestinationsJumpLists", "WindowsUserCustomDestinationsJumpLists"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/ForensicArtifacts/artifacts-kb/blob/master/windows/JumpLists.md"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserRecentFiles", Doc: "Windows user specific recent files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Office\\Recent\\*", "%%users.appdata%%\\Microsoft\\Windows\\Recent\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUserRegistryFiles", Doc: "Windows user specific Registry files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.userprofile%%\\NTUSER.DAT", "%%users.userprofile%%\\NTUSER.MAN", "%%users.localappdata%%\\Microsoft\\Windows\\UsrClass.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/Registry%20files.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserRegistryTransactionLogFiles", Doc: "Windows user Registry transaction log files.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.userprofile%%\\NTUSER.DAT.LOG", "%%users.userprofile%%\\NTUSER.DAT.LOG1", "%%users.userprofile%%\\NTUSER.DAT.LOG2", "%%users.localappdata%%\\Microsoft\\Windows\\UsrClass.dat.LOG", "%%users.localappdata%%\\Microsoft\\Windows\\UsrClass.dat.LOG1", "%%users.localappdata%%\\Microsoft\\Windows\\UsrClass.dat.LOG2"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/msuhanov/regf/blob/master/Windows%20registry%20file%20format%20specification.md#format-of-transaction-log-files"}}, goartifacts.ArtifactDefinition{Name: "WindowsUserRegistryFilesAndTransactionLogs", Doc: "Windows user Registry files and transaction logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsUserRegistryFiles", "WindowsUserRegistryTransactionLogFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUserShellFoldersOfInterest", Doc: "The Shell Folders information for Windows users, defined as single values for knowledge base extraction", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "AppData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.appdata", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Cookies"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.cookies", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Personal"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.documents", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Desktop"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.desktop", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Cache"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.internet_cache", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Local AppData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.localappdata", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "{A520A1A4-1780-4FF6-BD18-167343C5AF16}"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.localappdata_low", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Recent"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.recent", Regex: "", WMIKey: ""}}}, goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "TEMP"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "TMP"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "users.temp", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUserShellFolders", Doc: "The Shell Folders information for Windows users.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", "HKEY_USERS\\%%users.sid%%\\Environment", "HKEY_USERS\\%%users.sid%%\\Volatile Environment"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonGinaDLL", Doc: "Windows Gina DLL replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "GinaDLL"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "GinaDLL"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc939701.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonNotify", Doc: "Windows Winlogon Notify DLL names.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\*", Value: "DLLName"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\*", Value: "DLLName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/aa379402(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonShell", Doc: "Windows shell replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Shell"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Shell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/ms838576%28v=winembedded.5%29.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonSystem", Doc: "Applications launched by Winlogon in the system context during the system initialisation.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "System"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "System"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://code.google.com/p/regripper/wiki/ASEPs", "http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://regenerus.com/malware-common-loadpoints/"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonTaskman", Doc: "Windows Winlogon Taskman replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Taskman"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Taskman"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc939701.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonUiHost", Doc: "Windows Winlogon UI screen application", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "UiHost"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "UiHost"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "http://www.bleepingcomputer.com/forums/t/14028/change-the-loginwelcome-screen/"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonUserinit", Doc: "Windows Winlogon Userinit replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Userinit"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Userinit"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc939862.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonAvailableShells", Doc: "Windows Server Winlogon Available Shells\n\nUsed to specify an alternate shell application to be launched when\nlogging into Windows Server 2012 and later. Legitimate keys under\nAvailableShells should just cause cmd.exe or explorer.exe to be executed,\nwhereas malicious programs may create keys that cause malware to be run\nwhen a user logs in.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AlternateShells\\AvailableShells\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://andymorgan.wordpress.com/2012/03/30/changing-the-default-shell-of-windows-server-8-core/", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonVMApplet", Doc: "Windows VMApplet replacement.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "VMApplet"}, goartifacts.KeyValuePair{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "VMApplet"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc939701.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinstart", Doc: "Windows winstart.bat file", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\winstart.bat", "%%environ_systemroot%%\\dosstart.bat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonAppSetup", Doc: "Windows Winlogon Appsetup", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "AppSetup"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/cc939701.aspx"}}, goartifacts.ArtifactDefinition{Name: "WindowsWinlogonGPExtensions", Doc: "Windows Winlogon Group Policy Extensions\n\nThese keys specifiy DLLs that should be loaded when the group policy\nengine loads, and can act as a persistence mechanism for malware.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: "DllName"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: ""}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: "DllName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WinSock2LayeredServiceProviders", Doc: "Used to filter TCP/IP traffic through WinSock2.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\Protocol_Catalog9\\Catalog_Entries\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\Protocol_Catalog9\\Catalog_Entries64\\*"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://gladiator-antivirus.com/forum/index.php?showtopic=24610", "https://en.wikipedia.org/wiki/Layered_Service_Provider", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WinSock2NamespaceProviders", Doc: "Used to provide name-resolution services through WinSock2", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\NameSpace_Catalog5\\Catalog_Entries\\*", Value: "LibraryPath"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\NameSpace_Catalog5\\Catalog_Entries64\\*", Value: "LibraryPath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.symantec.com/security_response/writeup.jsp?docid=2012-020609-4221-99&tabid=2", "http://www.nirsoft.net/utils/winsock_service_providers.html", "https://msdn.microsoft.com/en-us/library/windows/desktop/ms739923(v=vs.85).aspx", "https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2"}}, goartifacts.ArtifactDefinition{Name: "WindowsDNSSettings", Doc: "Windows Registry Keys that contain DNS and DHCP settings.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters", Value: "NameServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces\\*", Value: "NameServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Dnscache\\Parameters", Value: "NameServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Tcpip\\Parameters\\Interfaces\\*", Value: "DhcpNameServer"}, goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Tcpip\\Parameters\\Interfaces\\*", Value: "DhcpServer"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System", "Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://technet.microsoft.com/en-us/library/dd197418(v=ws.10).aspx"}}, goartifacts.ArtifactDefinition{Name: "CurrentControlSet", Doc: "The control set the system is currently using.", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_VALUE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair{goartifacts.KeyValuePair{Key: "HKEY_LOCAL_MACHINE\\SYSTEM\\Select", Value: "Current"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide{goartifacts.Provide{Key: "current_control_set", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc"}}, goartifacts.ArtifactDefinition{Name: "DLLHijackLocations", Doc: "DLL search order hijacking locations collected from base Windows 7.", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_windir%%\\EXPLORERFRAME.dll", "%%environ_windir%%\\DUser.dll", "%%environ_windir%%\\DUI70.dll", "%%environ_windir%%\\UxTheme.dll", "%%environ_windir%%\\POWRPROF.dll", "%%environ_windir%%\\dwmapi.dll", "%%environ_windir%%\\slc.dll", "%%environ_windir%%\\gdiplus.dll", "%%environ_windir%%\\Secur32.dll", "%%environ_windir%%\\SSPICLI.dll", "%%environ_windir%%\\PROPSYS.dll", "%%environ_windir%%\\WINSTA.dll", "%%environ_windir%%\\CRYPTBASE.dll", "%%environ_windir%%\\WindowsCodecs.dll", "%%environ_windir%%\\profapi.dll", "%%environ_windir%%\\apphelp.dll", "%%environ_windir%%\\EhStorShell.dll", "%%environ_windir%%\\cscui.dll", "%%environ_windir%%\\CSCDLL.dll", "%%environ_windir%%\\CSCAPI.dll", "%%environ_windir%%\\ntshrui.dll", "%%environ_windir%%\\srvcli.dll", "%%environ_windir%%\\IconCodecService.dll", "%%environ_windir%%\\CRYPTSP.dll", "%%environ_windir%%\\rsaenh.dll", "%%environ_windir%%\\RpcRtRemote.dll", "%%environ_windir%%\\SndVolSSO.dll", "%%environ_windir%%\\HID.dll", "%%environ_windir%%\\MMDevApi.dll", "%%environ_windir%%\\timedate.cpl", "%%environ_windir%%\\ATL.dll", "%%environ_windir%%\\actxprxy.dll", "%%environ_windir%%\\ntmarta.dll", "%%environ_windir%%\\shdocvw.dll", "%%environ_windir%%\\LINKINFO.dll", "%%environ_windir%%\\USERENV.dll", "%%environ_windir%%\\shacct.dll", "%%environ_windir%%\\gameux.dll", "%%environ_windir%%\\XmlLite.dll", "%%environ_windir%%\\wer.dll", "%%environ_windir%%\\SAMLIB.dll", "%%environ_windir%%\\msls31.dll", "%%environ_windir%%\\tiptsf.dll", "%%environ_windir%%\\authui.dll", "%%environ_windir%%\\CRYPTUI.dll", "%%environ_windir%%\\msiltcfg.dll", "%%environ_windir%%\\VERSION.dll", "%%environ_windir%%\\msi.dll", "%%environ_windir%%\\NetworkExplorer.dll", "%%environ_windir%%\\WINMM.dll", "%%environ_windir%%\\wdmaud.drv", "%%environ_windir%%\\ksuser.dll", "%%environ_windir%%\\AVRT.dll", "%%environ_windir%%\\AUDIOSES.dll", "%%environ_windir%%\\msacm32.drv", "%%environ_windir%%\\MSACM32.dll", "%%environ_windir%%\\midimap.dll", "%%environ_windir%%\\netutils.dll", "%%environ_windir%%\\stobject.dll", "%%environ_windir%%\\BatMeter.dll", "%%environ_windir%%\\WTSAPI32.dll", "%%environ_windir%%\\es.dll", "%%environ_windir%%\\prnfldr.dll", "%%environ_windir%%\\WINSPOOL.DRV", "%%environ_windir%%\\dxp.dll", "%%environ_windir%%\\Syncreg.dll", "%%environ_windir%%\\netshell.dll", "%%environ_windir%%\\IPHLPAPI.dll", "%%environ_windir%%\\WINNSI.dll", "%%environ_windir%%\\nlaapi.dll", "%%environ_windir%%\\AltTab.dll", "%%environ_windir%%\\pnidui.dll", "%%environ_windir%%\\QUtil.dll", "%%environ_windir%%\\wevtapi.dll", "%%environ_windir%%\\dhcpcsvc6.dll", "%%environ_windir%%\\dhcpcsvc.dll", "%%environ_windir%%\\credssp.dll", "%%environ_windir%%\\npmproxy.dll", "%%environ_windir%%\\cscobj.dll", "%%environ_windir%%\\Wlanapi.dll", "%%environ_windir%%\\wlanutil.dll", "%%environ_windir%%\\wwanapi.dll", "%%environ_windir%%\\wwapi.dll", "%%environ_windir%%\\QAgent.dll", "%%environ_windir%%\\srchadmin.dll", "%%environ_windir%%\\mssprxy.dll", "%%environ_windir%%\\bthprops.cpl", "%%environ_windir%%\\ieframe.dll", "%%environ_windir%%\\OLEACC.dll", "%%environ_windir%%\\SyncCenter.dll", "%%environ_windir%%\\Actioncenter.dll", "%%environ_windir%%\\imapi2.dll", "%%environ_windir%%\\SXS.dll", "%%environ_windir%%\\hgcpl.dll", "%%environ_windir%%\\provsvc.dll", "%%environ_windir%%\\wkscli.dll", "%%environ_windir%%\\fxsst.dll", "%%environ_windir%%\\FXSAPI.dll", "%%environ_windir%%\\FXSRESM.dll", "%%environ_windir%%\\ieproxy.dll", "%%environ_windir%%\\thumbcache.dll", "%%environ_windir%%\\rasadhlp.dll", "%%environ_windir%%\\MPR.dll", "%%environ_windir%%\\vmhgfs.dll", "%%environ_windir%%\\drprov.dll", "%%environ_windir%%\\ntlanman.dll", "%%environ_windir%%\\davclnt.dll", "%%environ_windir%%\\DAVHLPR.dll", "%%environ_windir%%\\StructuredQuery.dll", "%%environ_windir%%\\UIAnimation.dll", "%%environ_windir%%\\DEVRTL.dll", "%%environ_windir%%\\MLANG.dll", "%%environ_windir%%\\wscinterop.dll", "%%environ_windir%%\\WSCAPI.dll", "%%environ_windir%%\\wscui.cpl", "%%environ_windir%%\\werconcpl.dll", "%%environ_windir%%\\framedynos.dll", "%%environ_windir%%\\wercplsupport.dll", "%%environ_windir%%\\msxml6.dll", "%%environ_windir%%\\hcproviders.dll", "%%environ_windir%%\\zipfldr.dll", "%%environ_windir%%\\rarext.dll", "%%environ_windir%%\\7-zip.dll", "%%environ_windir%%\\twext.dll", "%%environ_windir%%\\WinCDEmuContextMenu.dll", "%%environ_windir%%\\syncui.dll", "%%environ_windir%%\\SYNCENG.dll", "%%environ_windir%%\\shlext010.dll", "%%environ_windir%%\\ATL90.dll", "%%environ_windir%%\\acppage.dll", "%%environ_windir%%\\sfc.dll", "%%environ_windir%%\\sfc_os.dll", "%%environ_windir%%\\dsrole.dll", "%%environ_windir%%\\ACLUI.dll", "%%environ_windir%%\\NTDSAPI.dll", "%%environ_windir%%\\PhotoBase.dll", "%%environ_windir%%\\sbdrop.dll", "%%environ_windir%%\\tquery.dll", "%%environ_windir%%\\EhStorAPI.dll", "%%environ_windir%%\\SearchFolder.dll", "%%environ_windir%%\\NaturalLanguage6.dll", "%%environ_windir%%\\NLSData0009.dll", "%%environ_windir%%\\NLSLexicons0009.dll", "%%environ_windir%%\\MsftEdit.dll", "%%environ_windir%%\\dnsapi.dll", "%%environ_windir%%\\RASAPI32.dll", "%%environ_windir%%\\rasman.dll", "%%environ_windir%%\\rtutils.dll", "%%environ_windir%%\\sensapi.dll"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.fireeye.com/blog/threat-research/2010/07/malware-persistence-windows-registry.html"}}, goartifacts.ArtifactDefinition{Name: "WindowsUSBInformation", Doc: "Windows Event logs.", Sources: []goartifacts.Source{goartifacts.Source{Type: "ARTIFACT_GROUP", Attributes: goartifacts.Attributes{Names: []string{"WindowsUSBDeviceInformations", "WindowsUSBVolumeAndDriveMapping", "WindowsUSBUserMountedDevices", "WindowsDeviceSetup"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WindowsUSBDeviceInformations", Doc: "Windows USB Device Informations.\n\nUSBSTOR subkey only exists when there ever was an USB device mounted.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR\\**"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.researchgate.net/publication/318514858_USB_Storage_Device_Forensics_for_Windows_10"}}, goartifacts.ArtifactDefinition{Name: "WindowsUSBVolumeAndDriveMapping", Doc: "Windows USB volume and drive mapping.\n\nDisplays the mapping of USB devices to drives and volumes.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\MountedDevices"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"https://www.forensicswiki.org/wiki/USB_History_Viewing"}}, goartifacts.ArtifactDefinition{Name: "WindowsUSBUserMountedDevices", Doc: "Windows USB user mounted devices.\n\nShows the GUIDs of all devices the user has ever mounted.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "REGISTRY_KEY", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MountPoints2\\**"}, Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string{"http://techgenix.com/extracting-usb-artifacts-from-windows-7/"}}, goartifacts.ArtifactDefinition{Name: "WindowsDeviceSetup", Doc: "Logfiles for Windows PNP driver installation", Sources: []goartifacts.Source{goartifacts.Source{Type: "FILE", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\inf\\setupapi*.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIAccountUsersDomain", Doc: "Fill out user AD domain information based on username.\n\nWe expect this artifact to be collected with WindowsRegistryProfiles\nto supply the rest of the user information. This artifact optimizes retrieval\nof user information by limiting the WMI query to users for which we have\na username for. Specifically this solves the issue that in a domain setting,\nquerying for all users via WMI will give you the list of all local and domain\naccounts which means a large data transfer from an Active Directory server.\nThis artifact relies on having the users.username field populated in the knowledge\nbase. Unfortunately even limiting by username this query can be slow, and\nthis artifact runs it for each user present on the system.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_UserAccount WHERE name='%%users.username%%'", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string{"users.userdomain"}, Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/windows/desktop/aa394507(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMIAntivirusProduct", Doc: "Enumerate the registered antivirus.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM AntivirusProduct", BaseObject: "winmgmts:\\root\\SecurityCenter2", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIComputerSystemProduct", Doc: "Computer System Product including Identifiying number queried from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_ComputerSystemProduct", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/aa394105(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMIDNSClientCache", Doc: "DNS client cache via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from MSFT_DNSClientCache", BaseObject: "winmgmts:\\root\\StandardCimv2", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string{"Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/previous-versions/windows/desktop/dnsclientcimprov/msft-dnsclientcache"}}, goartifacts.ArtifactDefinition{Name: "WMIDrivers", Doc: "Installed drivers via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT DisplayName, Description, InstallDate, Name, PathName, Status, State, ServiceType from Win32_SystemDriver", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIEnumerateASEC", Doc: "Enumerate instances of ActiveScriptEventConsumer.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM ActiveScriptEventConsumer", BaseObject: "winmgmts:\\root\\subscription", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIEnumerateCLEC", Doc: "Enumerate instances of CommandLineEventConsumer.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM CommandLineEventConsumer", BaseObject: "winmgmts:\\root\\subscription", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIHotFixes", Doc: "Installed hotfixes via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_QuickFixEngineering", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIInstalledSoftware", Doc: "Installed software via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT Name, Vendor, Description, InstallDate, InstallDate2, Version from Win32_Product", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMILastBootupTime", Doc: "Last system boot time (UTC) retrieved from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT LastBootUpTime FROM Win32_OperatingSystem", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://msdn.microsoft.com/en-us/library/windows/desktop/aa394239(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMILogicalDisks", Doc: "Disk information via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_LogicalDisk", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/aa394173(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMILoggedOnSessions", Doc: "Logged on users queried from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_LogonSession", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMILoggedOnUsers", Doc: "Logged on users queried from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_LoggedonUser", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMILoginUsers", Doc: "Login Users via Windows Management Instrumentation (WMI).\n\nThis WMI query may take a long time to complete when run on a domain and\nwill create load on a domain controller.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_GroupUser where Name = \"login_users\"", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMINetNeighbors", Doc: "TCP/IP neighbors via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from MSFT_NetNeighbor", BaseObject: "winmgmts:\\root\\StandardCimv2", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string{"Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/previous-versions/windows/desktop/nettcpipprov/msft-netneighbor"}}, goartifacts.ArtifactDefinition{Name: "WMINetTCPConnections", Doc: "TCP connections via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from MSFT_NetTCPConnection", BaseObject: "winmgmts:\\root\\StandardCimv2", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string{"Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/previous-versions/windows/desktop/nettcpipprov/msft-nettcpconnection"}}, goartifacts.ArtifactDefinition{Name: "WMINetUDPEndpoints", Doc: "UDP endpoints via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from MSFT_NetUDPEndpoint", BaseObject: "winmgmts:\\root\\StandardCimv2", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string{"Network"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/previous-versions/windows/desktop/nettcpipprov/msft-netudpendpoint"}}, goartifacts.ArtifactDefinition{Name: "WMIOperatingSystem", Doc: "Operating system installed on the computer via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_OperatingSystem", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows/desktop/cimwin32prov/win32-operatingsystem"}}, goartifacts.ArtifactDefinition{Name: "WMIPhysicalMemory", Doc: "Physical memory information via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_PhysicalMemory", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/aa394347%28v=vs.85%29.aspx"}}, goartifacts.ArtifactDefinition{Name: "WMIProcessList", Doc: "Process listing via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_Process", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"Software"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIProfileUsersHomeDir", Doc: "Get user homedir from Win32_UserProfile based on a known user's SID.\n\nThis artifact relies on having the SID field users.sid populated in the knowledge\nbase. We expect it to be collected with WindowsRegistryProfiles to\nsupply the rest of the user information.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_UserProfile WHERE SID='%%users.sid%%'", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string{"users.homedir"}, Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/windows/desktop/ee886409(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMIScheduledTasks", Doc: "Scheduled tasks that are registered on the computer via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from MSFT_ScheduledTask", BaseObject: "winmgmts:\\root\\Microsoft\\Windows\\TaskScheduler", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6 AND os_minor_version >= 2"}, Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://wutils.com/wmi/root/microsoft/windows/taskscheduler/msft_scheduledtask/"}}, goartifacts.ArtifactDefinition{Name: "WMIServices", Doc: "Services queried from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_Service", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, goartifacts.ArtifactDefinition{Name: "WMIStartupCommands", Doc: "Commands that run automatically when a user logs onto the computer system via Windows Management Instrumentation (WMI).", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * from Win32_StartupCommand", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string{"os_major_version >= 6"}, Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string{"https://docs.microsoft.com/en-us/windows/desktop/cimwin32prov/win32-startupcommand"}}, goartifacts.ArtifactDefinition{Name: "WMIUsers", Doc: "Users via Windows Management Instrumentation (WMI).\n\nNote that in a domain setup, this will probably return all users in the\ndomain which will be expensive and slow. Consider limiting by SID like\nWMIProfileUsersHomeDir.\n", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_UserAccount", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"Users"}, SupportedOs: []string{"Windows"}, Urls: []string{"http://msdn.microsoft.com/en-us/library/windows/desktop/aa394507(v=vs.85).aspx"}}, goartifacts.ArtifactDefinition{Name: "WMIVolumeShadowCopies", Doc: "A List of Volume Shadow Copies from WMI.", Sources: []goartifacts.Source{goartifacts.Source{Type: "WMI", Attributes: goartifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "SELECT * FROM Win32_ShadowCopy", BaseObject: "", KeyValuePairs: []goartifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []goartifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string{"System"}, SupportedOs: []string{"Windows"}, Urls: []string(nil)}}
