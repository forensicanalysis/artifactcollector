package assets

import "github.com/forensicanalysis/artifactcollector/artifacts"

var Artifacts = []artifacts.ArtifactDefinition{{Name: "DefaultCollection1", Doc: "Predefined opinionated collections", Sources: []artifacts.Source{{Parent: "DefaultCollection1", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"FOR500", "WindowsComputerName", "WindowsEventLogs", "WindowsHotfixes", "WindowsNetworkInterfaceInformation", "WindowsPersistence", "WindowsRunKeys", "WindowsServices", "WindowsUninstallKeys", "WindowsUSBInformation"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}, {Parent: "DefaultCollection1", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"BrowserHistory", "LinuxIPTablesRulesCommand", "LinuxAtJobsFiles", "LinuxAuditLogFiles", "LinuxCronTabFiles", "LinuxHostnameFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []artifacts.Provide(nil)}, {Parent: "DefaultCollection1", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"BrowserHistory", "MacOSAtJobsFile", "MacOSAuditLogFiles", "MacOSBashHistoryFile", "MacOSCronTabFile", "MacOSHostsFile", "MacOSLastlogFile", "MacOSMiscLogFiles", "MacOSRecentItemsFiles", "MacOSSystemLogFiles", "MacOSUserTrashFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, {Name: "FOR500", Doc: "Windows Forensic Analysis", Sources: []artifacts.Source{{Parent: "FOR500", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsBrowserArtifacts", "WindowsProgramExecution", "WindowsDeletedFiles", "WindowsNetworkActivity", "AccountUsage", "ExternalDevice"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsBrowserArtifacts", Doc: "WindowsBrowserArtifacts", Sources: []artifacts.Source{{Parent: "WindowsBrowserArtifacts", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsOpenSaveMRU", "WindowsOpenSavePidlMRU", "BrowserHistory"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsProgramExecution", Doc: "Program Execution", Sources: []artifacts.Source{{Parent: "WindowsProgramExecution", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsActivitiesCacheDatabase", "WindowsMostRecentApplication", "WindowsAppCompatCache", "WindowsAMCacheHveFile", "WindowsSystemResourceUsageMonitorDatabaseFile", "WindowsPrefetchFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsDeletedFiles", Doc: "Deleted Files", Sources: []artifacts.Source{{Parent: "WindowsDeletedFiles", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsRecycleBin"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsNetworkActivity", Doc: "Network Activity", Sources: []artifacts.Source{{Parent: "WindowsNetworkActivity", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsTimezone", "InternetExplorerCookiesFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "AccountUsage", Doc: "Account Usage", Sources: []artifacts.Source{{Parent: "AccountUsage", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsSystemRegistryFiles", "WindowsXMLEventLogSecurityFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "ExternalDevice", Doc: "External Device", Sources: []artifacts.Source{{Parent: "ExternalDevice", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsSetupApiLogs"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "LinuxIPTablesRulesCommand", Doc: "List IPTables rules.", Sources: []artifacts.Source{{Parent: "LinuxIPTablesRulesCommand", Type: "COMMAND", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "/sbin/iptables", Args: []string{"-L", "-n", "-v"}, Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxAtJobsFiles", Doc: "Linux at jobs.", Sources: []artifacts.Source{{Parent: "LinuxAtJobsFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/var/spool/at/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxAuditLogFiles", Doc: "Linux audit log files.", Sources: []artifacts.Source{{Parent: "LinuxAuditLogFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/var/log/audit/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxCronTabFiles", Doc: "Crontab files.", Sources: []artifacts.Source{{Parent: "LinuxCronTabFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/crontab", "/etc/cron.d/*", "/var/spool/cron/**"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxHostnameFile", Doc: "Linux hostname file.", Sources: []artifacts.Source{{Parent: "LinuxHostnameFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hostname"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxPasswdFile", Doc: "Linux passwd file.\n\nA passwd file consist of colon separated values in the format:\nusername:password:uid:gid:full name:home directory:shell\n", Sources: []artifacts.Source{{Parent: "LinuxPasswdFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/passwd"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.homedir", Regex: ".*:(.*?):.*", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "LinuxHomePath", Doc: "Users directories in /home", Sources: []artifacts.Source{{Parent: "LinuxHomePath", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/home/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.homedir", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Linux"}, Urls: []string(nil)}, {Name: "MacOSAtJobsFile", Doc: "MacOS at jobs", Sources: []artifacts.Source{{Parent: "MacOSAtJobsFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/usr/lib/cron/jobs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSAuditLogFiles", Doc: "Audit log files", Sources: []artifacts.Source{{Parent: "MacOSAuditLogFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/audit/*", "/var/audit/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSBashHistoryFile", Doc: "Terminal Commands History", Sources: []artifacts.Source{{Parent: "MacOSBashHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.bash_history"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSCronTabFile", Doc: "Cron tabs", Sources: []artifacts.Source{{Parent: "MacOSCronTabFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/crontab", "/private/etc/crontab", "/usr/lib/cron/tabs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSHostsFile", Doc: "Hosts file", Sources: []artifacts.Source{{Parent: "MacOSHostsFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/etc/hosts", "/private/etc/hosts"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSLastlogFile", Doc: "Mac OS X lastlog file.", Sources: []artifacts.Source{{Parent: "MacOSLastlogFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/lastlog", "/var/log/lastlog"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSMiscLogFiles", Doc: "Misc. Logs", Sources: []artifacts.Source{{Parent: "MacOSMiscLogFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/Library/Logs/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSRecentItemsFiles", Doc: "Recent Items", Sources: []artifacts.Source{{Parent: "MacOSRecentItemsFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Preferences/com.apple.recentitems.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSSystemLogFiles", Doc: "System log files", Sources: []artifacts.Source{{Parent: "MacOSSystemLogFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/private/var/log/*", "/var/log/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSUsersPath", Doc: "Users directories in /Users", Sources: []artifacts.Source{{Parent: "MacOSUsersPath", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"/Users/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.homedir", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "MacOSUserTrashFiles", Doc: "User Trash Folder", Sources: []artifacts.Source{{Parent: "MacOSUserTrashFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.Trash/*"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin"}, Urls: []string(nil)}, {Name: "BrowserHistory", Doc: "Web browser history of multiple web browsers.", Sources: []artifacts.Source{{Parent: "BrowserHistory", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"ChromiumBasedBrowsersHistoryDatabaseFile", "FirefoxHistoryFile", "InternetExplorerHistoryFile", "OperaHistoryFile", "SafariDownloadFile", "SafariHistoryFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, {Name: "ChromiumBasedBrowsersHistoryDatabaseFile", Doc: "Browsing history database file for multiple Chromium-based browsers, such as Google Chrome, Brave, Chromium, Yandex, Opera, Edge, EdgeBeta.", Sources: []artifacts.Source{{Parent: "ChromiumBasedBrowsersHistoryDatabaseFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/BraveSoftware/Brave-Browser/*/Archived History", "%%users.homedir%%/Library/Application Support/BraveSoftware/Brave-Browser/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/BraveSoftware/Brave-Browser/*/History", "%%users.homedir%%/Library/Application Support/BraveSoftware/Brave-Browser/*/History-journal", "%%users.homedir%%/Library/Application Support/Chromium/*/Archived History", "%%users.homedir%%/Library/Application Support/Chromium/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Chromium/*/History", "%%users.homedir%%/Library/Application Support/Chromium/*/History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Archived History", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/History", "%%users.homedir%%/Library/Application Support/Google/Chrome Canary/*/History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/Archived History", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/History", "%%users.homedir%%/Library/Application Support/Google/Chrome/*/History-journal", "%%users.homedir%%/Library/Application Support/Microsoft Edge Beta/*/Archived History", "%%users.homedir%%/Library/Application Support/Microsoft Edge Beta/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Microsoft Edge Beta/*/History", "%%users.homedir%%/Library/Application Support/Microsoft Edge Beta/*/History-journal", "%%users.homedir%%/Library/Application Support/Microsoft Edge/*/Archived History", "%%users.homedir%%/Library/Application Support/Microsoft Edge/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Microsoft Edge/*/History", "%%users.homedir%%/Library/Application Support/Microsoft Edge/*/History-journal", "%%users.homedir%%/Library/Application Support/Yandex/YandexBrowser/*/Archived History", "%%users.homedir%%/Library/Application Support/Yandex/YandexBrowser/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/Yandex/YandexBrowser/*/History", "%%users.homedir%%/Library/Application Support/Yandex/YandexBrowser/*/History-journal", "%%users.homedir%%/Library/Application Support/com.operasoftware.Opera/*/Archived History", "%%users.homedir%%/Library/Application Support/com.operasoftware.Opera/*/Archived History-journal", "%%users.homedir%%/Library/Application Support/com.operasoftware.Opera/*/History", "%%users.homedir%%/Library/Application Support/com.operasoftware.Opera/*/History-journal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}, {Parent: "ChromiumBasedBrowsersHistoryDatabaseFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.config/BraveSoftware/Brave-Browser/*/Archived History", "%%users.homedir%%/.config/BraveSoftware/Brave-Browser/*/Archived History-journal", "%%users.homedir%%/.config/BraveSoftware/Brave-Browser/*/History", "%%users.homedir%%/.config/BraveSoftware/Brave-Browser/*/History-journal", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-config/google-chrome/*/Archived History", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-config/google-chrome/*/Archived History-journal", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-config/google-chrome/*/History", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-config/google-chrome/*/History-journal", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-profile/*/Archived History", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-profile/*/Archived History-journal", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-profile/*/History", "%%users.homedir%%/.config/chrome-remote-desktop/chrome-profile/*/History-journal", "%%users.homedir%%/.config/chromium/*/Archived History", "%%users.homedir%%/.config/chromium/*/Archived History-journal", "%%users.homedir%%/.config/chromium/*/History", "%%users.homedir%%/.config/chromium/*/History-journal", "%%users.homedir%%/.config/google-chrome-beta/*/Archived History", "%%users.homedir%%/.config/google-chrome-beta/*/Archived History-journal", "%%users.homedir%%/.config/google-chrome-beta/*/History", "%%users.homedir%%/.config/google-chrome-beta/*/History-journal", "%%users.homedir%%/.config/google-chrome/*/Archived History", "%%users.homedir%%/.config/google-chrome/*/Archived History-journal", "%%users.homedir%%/.config/google-chrome/*/History", "%%users.homedir%%/.config/google-chrome/*/History-journal", "%%users.homedir%%/.config/microsoft-edge/*/Archived History", "%%users.homedir%%/.config/microsoft-edge/*/Archived History-journal", "%%users.homedir%%/.config/microsoft-edge/*/History", "%%users.homedir%%/.config/microsoft-edge/*/History-journal", "%%users.homedir%%/.config/opera/*/Archived History", "%%users.homedir%%/.config/opera/*/Archived History-journal", "%%users.homedir%%/.config/opera/*/History", "%%users.homedir%%/.config/opera/*/History-journal", "%%users.homedir%%/.config/yandex-browser-beta/*/Archived History", "%%users.homedir%%/.config/yandex-browser-beta/*/Archived History-journal", "%%users.homedir%%/.config/yandex-browser-beta/*/History", "%%users.homedir%%/.config/yandex-browser-beta/*/History-journal", "%%users.homedir%%/snap/chromium/common/chromium/*/Archived History", "%%users.homedir%%/snap/chromium/common/chromium/*/Archived History-journal", "%%users.homedir%%/snap/chromium/common/chromium/*/History", "%%users.homedir%%/snap/chromium/common/chromium/*/History-journal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []artifacts.Provide(nil)}, {Parent: "ChromiumBasedBrowsersHistoryDatabaseFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Brave\\*\\Archived History", "%%users.appdata%%\\Brave\\*\\Archived History-journal", "%%users.appdata%%\\Brave\\*\\History", "%%users.appdata%%\\Brave\\*\\History-journal", "%%users.appdata%%\\BraveSoftware\\Brave-Browser\\User Data\\*\\History", "%%users.appdata%%\\BraveSoftware\\Brave-Browser\\User Data\\*\\History-journal", "%%users.appdata%%\\Opera Software\\Opera Stable\\*\\Archived History", "%%users.appdata%%\\Opera Software\\Opera Stable\\*\\Archived History-journal", "%%users.appdata%%\\Opera Software\\Opera Stable\\*\\History", "%%users.appdata%%\\Opera Software\\Opera Stable\\*\\History-journal", "%%users.localappdata%%\\Chromium\\*\\Archived History", "%%users.localappdata%%\\Chromium\\*\\Archived History-journal", "%%users.localappdata%%\\Chromium\\*\\History", "%%users.localappdata%%\\Chromium\\*\\History-journal", "%%users.localappdata%%\\Chromium\\User Data\\*\\Archived History", "%%users.localappdata%%\\Chromium\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Chromium\\User Data\\*\\History", "%%users.localappdata%%\\Chromium\\User Data\\*\\History-journal", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Archived History", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\History", "%%users.localappdata%%\\Google\\Chrome SxS\\User Data\\*\\History-journal", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Archived History", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\History", "%%users.localappdata%%\\Google\\Chrome\\User Data\\*\\History-journal", "%%users.localappdata%%\\Microsoft\\Edge Beta\\User Data\\*\\Archived History", "%%users.localappdata%%\\Microsoft\\Edge Beta\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Microsoft\\Edge Beta\\User Data\\*\\History", "%%users.localappdata%%\\Microsoft\\Edge Beta\\User Data\\*\\History-journal", "%%users.localappdata%%\\Microsoft\\Edge\\User Data\\*\\Archived History", "%%users.localappdata%%\\Microsoft\\Edge\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Microsoft\\Edge\\User Data\\*\\History", "%%users.localappdata%%\\Microsoft\\Edge\\User Data\\*\\History-journal", "%%users.localappdata%%\\Yandex\\YandexBrowser\\User Data\\*\\Archived History", "%%users.localappdata%%\\Yandex\\YandexBrowser\\User Data\\*\\Archived History-journal", "%%users.localappdata%%\\Yandex\\YandexBrowser\\User Data\\*\\History", "%%users.localappdata%%\\Yandex\\YandexBrowser\\User Data\\*\\History-journal"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Linux", "Windows"}, Urls: []string(nil)}, {Name: "FirefoxHistoryFile", Doc: "Firefox browser history (places.sqlite).", Sources: []artifacts.Source{{Parent: "FirefoxHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite-wal", "%%users.appdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite", "%%users.localappdata%%\\Mozilla\\Firefox\\Profiles\\*\\places.sqlite-wal"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}, {Parent: "FirefoxHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Application Support/Firefox/Profiles/*/places.sqlite", "%%users.homedir%%/Library/Application Support/Firefox/Profiles/*/places.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}, {Parent: "FirefoxHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.mozilla/firefox/*/places.sqlite", "%%users.homedir%%/.mozilla/firefox/*/places.sqlite-wal", "%%users.homedir%%/snap/firefox/common/.mozilla/firefox/*/places.sqlite", "%%users.homedir%%/snap/firefox/common/.mozilla/firefox/*/places.sqlite-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string(nil)}, {Name: "InternetExplorerBrowserHelperObjectsRegistryKeys", Doc: "Loaded on Internet Explorer startup", Sources: []artifacts.Source{{Parent: "InternetExplorerBrowserHelperObjectsRegistryKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "InternetExplorerCookiesFile", Doc: "Microsoft Internet Explorer (MSIE) browser cookies.\n\n* MSIE 4 - 9 Cache files (index.dat)\n", Sources: []artifacts.Source{{Parent: "InternetExplorerCookiesFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\Cookies\\index.dat", "%%users.appdata%%\\Microsoft\\Windows\\Cookies\\Low\\index.dat", "%%users.userprofile%%\\Cookies\\index.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "InternetExplorerHistoryFile", Doc: "Microsoft Internet Explorer (MSIE) browser history.\n\n* MSIE 4 - 9 Cache files (index.dat);\n* MSIE 10 WebCacheV*.dat files.\n", Sources: []artifacts.Source{{Parent: "InternetExplorerHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Microsoft\\Windows\\IEDownloadHistory\\index.dat", "%%users.localappdata%%\\Microsoft\\Feeds Cache\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\History.IE5\\*\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\History.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\Low\\History.IE5\\*\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\History\\Low\\History.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\Temporary Internet Files\\Low\\Content.IE5\\index.dat", "%%users.localappdata%%\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat", "%%users.userprofile%%\\Local Settings\\History\\History.IE5\\index.dat", "%%users.userprofile%%\\Local Settings\\History\\History.IE5\\*\\index.dat", "%%users.userprofile%%\\Local Settings\\History\\Temporary Internet Files\\Content.IE5\\index.dat", "%%users.userprofile%%\\Local Settings\\Temporary Internet Files\\Content.IE5\\index.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "OperaHistoryFile", Doc: "Opera browser history (global_history.dat).", Sources: []artifacts.Source{{Parent: "OperaHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Opera/global_history.dat"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}, {Parent: "OperaHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/.opera/global_history.dat"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Linux"}, Provides: []artifacts.Provide(nil)}, {Parent: "OperaHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Opera\\Opera\\global_history.dat", "%%users.appdata%%\\Opera Software\\Opera Stable\\History", "%%users.appdata%%\\Opera Software\\Opera Stable\\History-journal"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Darwin", "Linux"}, Urls: []string(nil)}, {Name: "SafariDownloadFile", Doc: "Safari downloads history (Downloads.plist).", Sources: []artifacts.Source{{Parent: "SafariDownloadFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Safari/Downloads.plist"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}, {Parent: "SafariDownloadFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Apple Computer\\Safari\\Downloads.plist", "%%users.appdata%%\\Apple Computer\\Safari\\Downloads.plist"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Darwin", "Windows"}, Urls: []string(nil)}, {Name: "SafariHistoryFile", Doc: "Safari browser history (History.plist).", Sources: []artifacts.Source{{Parent: "SafariHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\Apple Computer\\Safari\\History.plist", "%%users.appdata%%\\Apple Computer\\Safari\\History.plist"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Windows"}, Provides: []artifacts.Provide(nil)}, {Parent: "SafariHistoryFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.homedir%%/Library/Safari/History.plist", "%%users.homedir%%/Library/Safari/History.db", "%%users.homedir%%/Library/Safari/History.db-wal"}, Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string{"Darwin"}, Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows", "Darwin"}, Urls: []string(nil)}, {Name: "WindowsActiveDesktop", Doc: "Windows Active Desktop settings and components.", Sources: []artifacts.Source{{Parent: "WindowsActiveDesktop", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Desktop\\Components\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Internet Explorer\\Desktop\\General"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsActivitiesCacheDatabase", Doc: "SQLite database containing the Windows activities cache.", Sources: []artifacts.Source{{Parent: "WindowsActivitiesCacheDatabase", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.localappdata%%\\ConnectedDevicesPlatform\\L.%%users.username%%\\ActivitiesCache.db"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAlternateShell", Doc: "Alternate Shell to be run via Userinit.", Sources: []artifacts.Source{{Parent: "WindowsAlternateShell", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SafeBoot", Value: "AlternateShell"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SafeBoot\\Option", Value: "UseAlternateShell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAMCacheHveFile", Doc: "The AMCache file, stored in the Windows NT Registry file format.", Sources: []artifacts.Source{{Parent: "WindowsAMCacheHveFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\AppCompat\\Programs\\Amcache.hve", "%%environ_systemroot%%\\AppCompat\\Programs\\Amcache.hve.LOG1", "%%environ_systemroot%%\\AppCompat\\Programs\\Amcache.hve.LOG2"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAppCertDLLs", Doc: "Windows AppCertDLLs persistence.", Sources: []artifacts.Source{{Parent: "WindowsAppCertDLLs", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAppCompatCache", Doc: "Windows Application Compatibility Cache", Sources: []artifacts.Source{{Parent: "WindowsAppCompatCache", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCompatibility", Value: "AppCompatCache"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\AppCompatCache", Value: "AppCompatCache"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAppInitDLLs", Doc: "Windows Application Initial (AppInit) DLLs persistence.\n\nAppInit DLLs is a mechanism that allows an arbitrary list of DLLs to be loaded\ninto each user mode process on the system.\n", Sources: []artifacts.Source{{Parent: "WindowsAppInitDLLs", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "AppInit_DLLs"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsApplicationCompatibilityInstalledShimDatabases", Doc: "Windows Application Compatibility Installed Shim Databases.\n\ndrvmain.sdb, frxmain.sdb, msimain.sdb, pcamain.sdb, and sysmain.sdb are\nshim database files (SDB files) that are provided by Windows, and contain\nmany predefined shims that address known application compatibility issues.\nNote that these database files are not signed.\n\nWindows also supports custom shim database. These are typically installed\nby the sdbinst.exe utility. Note, that shim database files can also exist\nelsewhere in the file system.\n\nWindows application shims provide a way for the operating system to\napply patches to executables before they are run, ultimately providing\na lightweight mechanism for applying hot fixes and making modifications to\nensure compatibility across the various versions of Windows. This\nfunctionality can also be leveraged maliciously to change how certain\nprograms operate, or to provide capabilities to malware, such as the\nability to bypass UAC, gain persistence by injecting loading into legitimate\nprocesses, or avoid detection by disabling anti-virus software.\n", Sources: []artifacts.Source{{Parent: "WindowsApplicationCompatibilityInstalledShimDatabases", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\AppPatch\\drvmain.sdb", "%%environ_systemroot%%\\AppPatch\\frxmain.sdb", "%%environ_systemroot%%\\AppPatch\\msimain.sdb", "%%environ_systemroot%%\\AppPatch\\pcamain.sdb", "%%environ_systemroot%%\\AppPatch\\sysmain.sdb", "%%environ_systemroot%%\\AppPatch\\AppPatch64\\Custom\\*", "%%environ_systemroot%%\\AppPatch\\Custom\\*", "%%environ_systemroot%%\\AppPatch\\Custom\\Custom64\\*", "%%environ_systemroot%%\\AppPatch\\CustomSDB\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsApplicationCompatibilityShimDatabaseMappings", Doc: "Windows Application Compatibility Shim Database Mappings.\n\nMappings between the Windows Application Compatibility shim database files and\nthe programs that they apply to.\n\nWindows allows for custom application shims to be installed via the\nsdbinst.exe application. For example a mapping for 'notepad.exe':\n\nKey: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\\n    AppCompatFlags\\Custom\\notepad.exe\nValue: {00000000-1111-2222-3333-444444444444}.sdb = 0\n\nKey: AppCompatFlags\\InstalledSDB\\{00000000-1111-2222-3333-444444444444}\nValue: DatabasePath =\n    \"C:\\Windows\\AppPatch\\Custom\\{00000000-1111-2222-3333-444444444444}.sdb\"\n\nWindows application shims provide a way for the operating system to\napply patches to executables before they are run, ultimately providing\na lightweight mechanism for applying hot fixes and making modifications to\nensure compatibility across the various versions of Windows. This\nfunctionality can also be leveraged maliciously to change how certain\nprograms operate, or to provide capabilities to malware, such as the\nability to bypass UAC, gain persistence by injecting loading into legitimate\nprocesses, or avoid detection by disabling anti-virus software.\n", Sources: []artifacts.Source{{Parent: "WindowsApplicationCompatibilityShimDatabaseMappings", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\*", Value: "DatabaseDescription"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\*", Value: "DatabasePath"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\*", Value: "*"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsApplicationCompatibilityShims", Doc: "Windows Application Compatibility Shim Database Files and Application Mappings", Sources: []artifacts.Source{{Parent: "WindowsApplicationCompatibilityShims", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsApplicationCompatibilityInstalledShimDatabases", "WindowsApplicationCompatibilityShimDatabaseMappings"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsBootVerificationProgram", Doc: "Path to custom startup verification program.", Sources: []artifacts.Source{{Parent: "WindowsBootVerificationProgram", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\BootVerificationProgram", Value: "ImagePath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsComputerName", Doc: "The name of the system.", Sources: []artifacts.Source{{Parent: "WindowsComputerName", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ComputerName\\ComputerName", Value: "ComputerName"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ComputerName\\ActiveComputerName", Value: "ComputerName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsCommandProcessorAutoRun", Doc: "Commands that are run each time the Command Processor (Cmd.exe) is started.", Sources: []artifacts.Source{{Parent: "WindowsCommandProcessorAutoRun", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor", Value: "AutoRun"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Command Processor", Value: "AutoRun"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Command Processor", Value: "AutoRun"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Command Processor", Value: "AutoRun"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsCOMProperties", Doc: "Various properties of Windows COM Objects.\n\nThese artifacts are meant to highlight properties of COM objects that,\nalthough legitimate, are known to be associated with persistence techniques\nor other capabilities that malware can leverage.\n\nShellFolder\\HideOnDesktop, ShellFolder\\Attributes (specifically with value\n0xf090013d), and InprocServer\\LoadWithoutCOM are associated with a technique\nto cause iexplore or explorer to load a malicious DLL by registering a COM\nobject and invoking it through the use of Junction Folders.\n", Sources: []artifacts.Source{{Parent: "WindowsCOMProperties", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "Attributes"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "Attributes"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "Attributes"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "Attributes"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\ShellFolder", Value: "HideOnDesktop"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\CLSID\\*\\InprocServer32", Value: "LoadWithoutCOM"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSearchFilterHandlers", Doc: "Windows Search filter handlers configured for file types and applications.\n\nWindows Search loads DLLs that implement the IFilter interface in order to\nscan files for text and extract certain types of information. Malware can\nreplace the filter handler for a given file type or CLSID with itself to gain\nexecution when a search operation is performed on that file. Search\noperations can be performed indirectly in a number of cases; for instance,\nthe .txt, .html, and .rtf filter handlers are invoked when indexing email\nmessage bodies.\n\nThe filter handler to use is specified indirectly via a persistent handler.\nThe persistent handler GUID is indicated via the PersistentHandler subkey for\na file type or application GUID.  The filter handler CLSID is indicated via\nthe PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF} subkey\nunder the persistent handler GUID key path. This artifact inspects both of\nthese paths.\n\nNOTE: Only the HKEY_LOCAL_MACHINE root key needs be checked, because these\nare the only keys used. SearchFilterHost.exe runs under the SYSTEM account,\nwhich does not have access to HKEY_CURRENT_USER.\n", Sources: []artifacts.Source{{Parent: "WindowsSearchFilterHandlers", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\PersistentHandler", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\PersistentHandler", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\PersistentHandler", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\PersistentHandler", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\*\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\CLSID\\*\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsCredentialProviderFilters", Doc: "Windows Credential Provider Filters", Sources: []artifacts.Source{{Parent: "WindowsCredentialProviderFilters", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider Filters\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider Filters\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsCredentialProviders", Doc: "CLSIDs of applications to use as Credential Providers", Sources: []artifacts.Source{{Parent: "WindowsCredentialProviders", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Providers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Providers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsDebugger", Doc: "Windows Debugger peristence or AV disable.", Sources: []artifacts.Source{{Parent: "WindowsDebugger", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*", Value: "Debugger"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEnvironmentUserLoginScripts", Doc: "User login scripts configured via Windows environment variables.", Sources: []artifacts.Source{{Parent: "WindowsEnvironmentUserLoginScripts", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitLogonServer"}, {Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitLogonScript"}, {Key: "HKEY_USERS\\%%users.sid%%\\Environment", Value: "UserInitMprLogonScript"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEnvironmentVariableAllUsersProfile", Doc: "The system-wide %AllUsersProfile% environment variable contains the path of the of the \"All Users\" or \"Common\" profile directory.", Sources: []artifacts.Source{{Parent: "WindowsEnvironmentVariableAllUsersProfile", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "AllUsersProfile"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}}}, {Parent: "WindowsEnvironmentVariableAllUsersProfile", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "ProgramData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}}}, {Parent: "WindowsEnvironmentVariableAllUsersProfile", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"\\ProgramData", "\\Documents and Settings\\All Users"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_allusersappdata", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEnvironmentVariableProfilesDirectory", Doc: "The %ProfilesDirectory% environment variable contain a path of a directory that contains the users' profile directories, typically \"%SystemDrive%\\Users\".", Sources: []artifacts.Source{{Parent: "WindowsEnvironmentVariableProfilesDirectory", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", Value: "ProfilesDirectory"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_profilesdirectory", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEnvironmentVariableSystemRoot", Doc: "The %SystemRoot%, environment variable contains the path of the system directory, typically \"C:\\Windows\".", Sources: []artifacts.Source{{Parent: "WindowsEnvironmentVariableSystemRoot", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"\\Windows", "\\WinNT", "\\WINNT35", "\\WTSRV"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_systemroot", Regex: "", WMIKey: ""}, {Key: "environ_systemdrive", Regex: "^(..)", WMIKey: ""}}}, {Parent: "WindowsEnvironmentVariableSystemRoot", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion", Value: "SystemRoot"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_systemroot", Regex: "", WMIKey: ""}, {Key: "environ_systemdrive", Regex: "^(..)", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsExplorerAutoplayHandlers", Doc: "Handlers for autoplay events in Windows Explorer.", Sources: []artifacts.Source{{Parent: "WindowsExplorerAutoplayHandlers", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\AutoplayHandlers\\Handlers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsFileTypeAutorunAssociations", Doc: "Registry value for what application class identifier (CLSID) to launch for a file extension.\n\nExtension subkeys start with a dot. The '(Default)' value will be a ProgID,\nwhich points to another entry in HKCR specifying the command to run to open\na file of the given type. The WindowsShellOpenCommand artifact is associated\nwith these ProgID command invocations.\n", Sources: []artifacts.Source{{Parent: "WindowsFileTypeAutorunAssociations", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\.*", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\.*", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\.*", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\.*", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsGroupPolicyScripts", Doc: "Windows group policy scripts", Sources: []artifacts.Source{{Parent: "WindowsGroupPolicyScripts", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\psscripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\scripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\Logoff\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\User\\Scripts\\Logon\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\psscripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\scripts.ini", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\Shutdown\\*", "%%environ_systemroot%%\\System32\\GroupPolicy\\Machine\\Scripts\\Startup\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsLogoffScript", Doc: "Windows policy logoff script", Sources: []artifacts.Source{{Parent: "WindowsLogoffScript", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logoff"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logoff"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsLogonScript", Doc: "Windows policy logon script", Sources: []artifacts.Source{{Parent: "WindowsLogonScript", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logon"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Logon"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsLSAAuthenticationPackages", Doc: "Authentication Packages can be injected into LSASS.", Sources: []artifacts.Source{{Parent: "WindowsLSAAuthenticationPackages", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Authentication Packages"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Authentication Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsLSANotificationPackages", Doc: "Notification Packages can be injected into LSASS.", Sources: []artifacts.Source{{Parent: "WindowsLSANotificationPackages", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Notification Packages"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Notification Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsLSASecurityPackages", Doc: "Security Packages can be injected into LSASS.", Sources: []artifacts.Source{{Parent: "WindowsLSASecurityPackages", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa", Value: "Security Packages"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig", Value: "Security Packages"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsMostRecentApplication", Doc: "Windows Most Recent Application name key", Sources: []artifacts.Source{{Parent: "WindowsMostRecentApplication", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\*\\MostRecentApplication", Value: "Name"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\*\\MostRecentApplication", Value: "Name"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsMSDTCDLLs", Doc: "Windows MSDTC attempts to load these DLLs on start", Sources: []artifacts.Source{{Parent: "WindowsMSDTCDLLs", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\MSDTC\\MTxOCI\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\MSDTC\\MTxOCI\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsMultiMediaDrivers", Doc: "Configured drivers for different multimedia filetypes.", Sources: []artifacts.Source{{Parent: "WindowsMultiMediaDrivers", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_USERS\\%%users.sid%%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*", "HKEY_USERS\\%%users.sid%%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsNetworkShellHelpers", Doc: "Windows Network Shell (netsh) helpers are loaded on boot", Sources: []artifacts.Source{{Parent: "WindowsNetworkShellHelpers", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Netsh", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Netsh"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsOpenSaveMRU", Doc: "Information about files opened or saved in a Windows shell dialog.", Sources: []artifacts.Source{{Parent: "WindowsOpenSaveMRU", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDIg32\\OpenSaveMRU\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsOpenSavePidlMRU", Doc: "Information about files opened or saved in a Windows shell dialog.", Sources: []artifacts.Source{{Parent: "WindowsOpenSavePidlMRU", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSavePidlMRU\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPendingGPOs", Doc: "Windows Pending GPOs registry settings.\n\nThis is a persistence mechanism known to be used by the Gootkit malware family.\n", Sources: []artifacts.Source{{Parent: "WindowsPendingGPOs", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\IEAK\\GroupPolicy\\PendingGPOs", Value: "Path1"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\IEAK\\GroupPolicy\\PendingGPOs", Value: "Path1"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPersistenceMechanisms", Doc: "Persistence mechanisms in Windows.", Sources: []artifacts.Source{{Parent: "WindowsPersistenceMechanisms", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsPersistenceRegistryKeys", "WindowsPowerShellDefaultProfiles", "WindowsServices", "WindowsJobFiles"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPersistenceRegistryKeys", Doc: "Windows Registry keys used for persistence.", Sources: []artifacts.Source{{Parent: "WindowsPersistenceRegistryKeys", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"InternetExplorerBrowserHelperObjectsRegistryKeys", "WindowsActiveDesktop", "WindowsActiveSyncAutoStart", "WindowsAlternateShell", "WindowsAppCertDLLs", "WindowsAppInitDLLs", "WindowsBootVerificationProgram", "WindowsCommandProcessorAutoRun", "WindowsCredentialProviderFilters", "WindowsCredentialProviders", "WindowsDebugger", "WindowsEnvironmentUserLoginScripts", "WindowsExplorerAutoplayHandlers", "WindowsFileTypeAutorunAssociations", "WindowsFontDrivers", "WindowsIconServiceLib", "WindowsLSAAuthenticationPackages", "WindowsLSANotificationPackages", "WindowsLSASecurityPackages", "WindowsMSDTCDLLs", "WindowsMultiMediaDrivers", "WindowsNetworkShellHelpers", "WindowsPendingGPOs", "WindowsPLAPProviders", "WindowsPrintMonitors", "WindowsRunGrpConv", "WindowsRunKeys", "WindowsRunServices", "WindowsScreenSaverExecutable", "WindowsSearchFilterHandlers", "WindowsSecurityProviders", "WindowsServiceControlManagerExtension", "WindowsSessionManagerBootExecute", "WindowsSessionManagerExecute", "WindowsSessionManagerS0InitialCommand", "WindowsSessionManagerSetupExecute", "WindowsSessionManagerSubSystems", "WindowsSessionManagerWOWCommandLine", "WindowsSetupCommandLine", "WindowsSharedTaskScheduler", "WindowsShellExecuteHooks", "WindowsShellExtensions", "WindowsShellIconOverlayIdentifiers", "WindowsShellLoadAndRun", "WindowsShellOpenCommand", "WindowsShellRunasCommand", "WindowsShellServiceObjects", "WindowsStubPaths", "WindowsSystemPolicyShell", "WindowsTerminalServerInitialProgram", "WindowsTerminalServerRunKeys", "WindowsTerminalServerStartupPrograms", "WindowsToolPaths", "WindowsWinlogonAppSetup", "WindowsWinlogonAvailableShells", "WindowsWinlogonGinaDLL", "WindowsWinlogonGPExtensions", "WindowsWinlogonNotify", "WindowsWinlogonShell", "WindowsWinlogonSystem", "WindowsWinlogonTaskman", "WindowsWinlogonUiHost", "WindowsWinlogonUserinit", "WindowsWinlogonVMApplet", "WinSock2LayeredServiceProviders", "WinSock2NamespaceProviders"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPLAPProviders", Doc: "Windows Pre-Logon Access Provider (PLAP) Providers", Sources: []artifacts.Source{{Parent: "WindowsPLAPProviders", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Authentication\\PLAP Providers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Authentication\\PLAP Providers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPowerShellDefaultProfiles", Doc: "Default PowerShell Profile files. These files are executed by default when PowerShell starts up.", Sources: []artifacts.Source{{Parent: "WindowsPowerShellDefaultProfiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\system32\\WindowsPowerShell\\v1.0\\profile.ps1", "%%environ_systemroot%%\\system32\\WindowsPowerShell\\v1.0\\Microsoft.PowerShell_profile.ps1", "%%users.userprofile%%\\Documents\\WindowsPowerShell\\profile.ps1", "%%users.userprofile%%\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPrefetchFiles", Doc: "Windows Prefetch files.", Sources: []artifacts.Source{{Parent: "WindowsPrefetchFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\Prefetch\\*.pf"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPrintMonitors", Doc: "Windows Print Monitor DLL config.", Sources: []artifacts.Source{{Parent: "WindowsPrintMonitors", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Print\\Monitors\\*", Value: "Driver"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRecycleBin", Doc: "Windows Recycle Bin (Recyler, $Recycle.Bin) files.", Sources: []artifacts.Source{{Parent: "WindowsRecycleBin", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"\\$Recycle.Bin\\**", "\\Recycler\\**"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRegistryProfileSIDs", Doc: "Get SIDs for all users on the system with profiles present in the Registry.", Sources: []artifacts.Source{{Parent: "WindowsRegistryProfileSIDs", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.sid", Regex: "ProfileList\\\\(.+)$", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRegistryProfiles", Doc: "Get SIDs for all users on the system with profiles present in the Registry.\n\nThis looks in the Windows Registry where the profiles are stored and retrieves\nthe paths for each profile.\n", Sources: []artifacts.Source{{Parent: "WindowsRegistryProfiles", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*", Value: "ProfileImagePath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.userprofile", Regex: "", WMIKey: ""}, {Key: "users.username", Regex: ".*\\\\(.+)", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRunGrpConv", Doc: "The Windows RunGrpConv Registry value.\n\nWhen this Registry value is non-zero userinit.exe will launch grpconv.exe at user login.\n", Sources: []artifacts.Source{{Parent: "WindowsRunGrpConv", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "RunGrpConv"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRunKeys", Doc: "Windows Run and RunOnce keys.\n\nNote users.sid will currently only expand to SIDs with profiles\non the system, not all SIDs.\n", Sources: []artifacts.Source{{Parent: "WindowsRunKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Setup", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsRunServices", Doc: "Windows Run Services.", Sources: []artifacts.Source{{Parent: "WindowsRunServices", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunServices"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsScheduledTasks", Doc: "Windows Scheduled Tasks.", Sources: []artifacts.Source{{Parent: "WindowsScheduledTasks", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\Tasks\\**10", "%%environ_systemroot%%\\System32\\Tasks\\**10", "%%environ_systemroot%%\\SysWow64\\Tasks\\**10"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsScreenSaverExecutable", Doc: "ScreenSaver Executable", Sources: []artifacts.Source{{Parent: "WindowsScreenSaverExecutable", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop", Value: "scrnsave.exe"}, {Key: "HKEY_USERS\\%%users.sid%%\\Control Panel\\Desktop", Value: "scrnsave.exe"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSecurityProviders", Doc: "Security Providers DLLs", Sources: []artifacts.Source{{Parent: "WindowsSecurityProviders", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SecurityProviders"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsServiceControlManagerExtension", Doc: "Windows service control manager extension", Sources: []artifacts.Source{{Parent: "WindowsServiceControlManagerExtension", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control", Value: "ServiceControlManagerExtension"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsServices", Doc: "Windows services from the Registry.\n\nMalware can add new services to gain persistence, or modify\nexisting ones to avoid detection. For example, the ZeroAccess\nrootkit will make the following changes to the WSCSVC (Windows\nSecurity Service Center), WINDEFEND (Windows Defender),\nand MPSSVC (Windows Firewall) services, among others\n\n* Set 'Start' to 4, indicating that the service should be disabled\n* Set 'DeleteFlag' to 1, indicating that the service should be removed\n* Set 'ErrorControl' to 0 and 'Type' to 32, causing it to fail to be\n  started by the Service Controller and no error messages generated\n", Sources: []artifacts.Source{{Parent: "WindowsServices", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\*\\Parameters"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsFontDrivers", Doc: "Windows font drivers from the Registry.", Sources: []artifacts.Source{{Parent: "WindowsFontDrivers", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Font Drivers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerBootExecute", Doc: "Windows Session Manager BootExecute persistence.", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerBootExecute", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "BootExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerExecute", Doc: "Windows Session Manager Execute persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerExecute", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "Execute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerS0InitialCommand", Doc: "Windows Session Manager S0InitialCommand persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerS0InitialCommand", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "S0InitialCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerSetupExecute", Doc: "Windows Session Manager SetupExecute persistence\n\nThis entry shouldn't be populated after Windows has been installed\n", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerSetupExecute", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "SetupExecute"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerSubSystems", Doc: "Windows Session Manager SubSystems persistence", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerSubSystems", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\SubSystems", Value: "Windows"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSessionManagerWOWCommandLine", Doc: "Windows Session Manager Windows-on-Windows (WOW) command line", Sources: []artifacts.Source{{Parent: "WindowsSessionManagerWOWCommandLine", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\WOW", Value: "cmdline"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\WOW", Value: "wowcmdline"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSetupCommandLine", Doc: "Command line invocation used for custom setup and deployment tasks", Sources: []artifacts.Source{{Parent: "WindowsSetupCommandLine", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\Setup", Value: "CmdLine"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSharedTaskScheduler", Doc: "Runs on windows boot.", Sources: []artifacts.Source{{Parent: "WindowsSharedTaskScheduler", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellExecuteHooks", Doc: "Shell execution hooks are called when ShellExecuteEx() is called.", Sources: []artifacts.Source{{Parent: "WindowsShellExecuteHooks", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellExecuteHooks", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellExecuteHooks"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellExtensions", Doc: "Approved extensions to the Windows Shell (explorer.exe).", Sources: []artifacts.Source{{Parent: "WindowsShellExtensions", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellIconOverlayIdentifiers", Doc: "Called to display custom icons.", Sources: []artifacts.Source{{Parent: "WindowsShellIconOverlayIdentifiers", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellLoadAndRun", Doc: "Windows Shell Load and Run values", Sources: []artifacts.Source{{Parent: "WindowsShellLoadAndRun", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Load"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Run"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Load"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "Run"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsIconServiceLib", Doc: "Windows Icon Service Library Name\n\nThe value should default to 'IconCodecService.dll'\n", Sources: []artifacts.Source{{Parent: "WindowsIconServiceLib", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", Value: "IconServiceLib"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellOpenCommand", Doc: "Executed every time this file type is opened. For most file types, the value should be '\"%1\" %*'.", Sources: []artifacts.Source{{Parent: "WindowsShellOpenCommand", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\open\\command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\open\\command", Value: "IsolatedCommand"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: "IsolatedCommand"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\open\\command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\open\\command", Value: "IsolatedCommand"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\open\\command", Value: "IsolatedCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellRunasCommand", Doc: "Executed every time an executable or script file type is run as administrator.\n\nFor most file types, the value should be '\"%1\" %*' or something similar.\nExample file type subkeys include 'exefile', 'batfile', and 'cmdfile'. These\nkeys can be modified by malware as a way to be periodically executed or to\nbypass UAC.\n", Sources: []artifacts.Source{{Parent: "WindowsShellRunasCommand", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\runas\\command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\runas\\command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\*\\shell\\runas\\command", Value: "IsolatedCommand"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Wow6432Node\\*\\shell\\runas\\command", Value: "IsolatedCommand"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsShellServiceObjects", Doc: "Windows Shell (explorer.exe) service objects delayed load.", Sources: []artifacts.Source{{Parent: "WindowsShellServiceObjects", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSetupApiLogs", Doc: "Windows setup API logs.", Sources: []artifacts.Source{{Parent: "WindowsSetupApiLogs", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\setupapi.log", "%%environ_systemroot%%\\inf\\setupapi.app.log", "%%environ_systemroot%%\\inf\\setupapi.dev.log", "%%environ_systemroot%%\\inf\\setupapi.offline.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsStartupFolders", Doc: "Windows startup folder persistence.", Sources: []artifacts.Source{{Parent: "WindowsStartupFolders", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_allusersappdata%%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*", "%%environ_allusersappdata%%\\Start Menu\\Programs\\Startup\\*", "%%users.appdata%%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*", "%%users.userprofile%%\\Start Menu\\Programs\\Startup\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsStartupScript", Doc: "Windows policy startup script", Sources: []artifacts.Source{{Parent: "WindowsStartupScript", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts", Value: "Startup"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Startup\\*\\*", Value: "Script"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Startup\\*\\*", Value: "Parameters"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Startup\\*\\*", Value: "Script"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\State\\Machine\\Scripts\\Startup\\*\\*", Value: "Parameters"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsStubPaths", Doc: "Windows StubPath persistence.\n\nEach time a user logs in, the Active Setup Installed Components in HKLM\nare compared ot the ones in HKCU, and if any are missing, or if the\nassociated version is less, the program is executed.\n", Sources: []artifacts.Source{{Parent: "WindowsStubPaths", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "StubPath"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components\\*", Value: "Version"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSystemPolicyShell", Doc: "Windows System policy replacement shell (custom user interface).", Sources: []artifacts.Source{{Parent: "WindowsSystemPolicyShell", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "Shell"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", Value: "Shell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSystemRegistryFiles", Doc: "Windows system Registry files.", Sources: []artifacts.Source{{Parent: "WindowsSystemRegistryFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\System Volume Information\\Syscache.hve", "%%environ_systemroot%%\\System32\\config\\SAM", "%%environ_systemroot%%\\System32\\config\\SECURITY", "%%environ_systemroot%%\\System32\\config\\SOFTWARE", "%%environ_systemroot%%\\System32\\config\\SYSTEM"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSystemResourceUsageMonitorDatabaseFile", Doc: "Windows System Resource Usage Monitor (SRUM) database file.", Sources: []artifacts.Source{{Parent: "WindowsSystemResourceUsageMonitorDatabaseFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\sru\\SRUDB.dat"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsTerminalServerRunKeys", Doc: "Windows Terminal Server Run keys", Sources: []artifacts.Source{{Parent: "WindowsTerminalServerRunKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsTerminalServerStartupPrograms", Doc: "Windows Terminal Server Startup Programs", Sources: []artifacts.Source{{Parent: "WindowsTerminalServerStartupPrograms", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Terminal Server\\Wds\\rdpwd", Value: "StartupPrograms"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsTerminalServerInitialProgram", Doc: "Windows Terminal Server Initial Program", Sources: []artifacts.Source{{Parent: "WindowsTerminalServerInitialProgram", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp", Value: "InitialProgram"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Policies\\Microsoft\\Windows NT\\Terminal Services", Value: "InitialProgram"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsActiveSyncAutoStart", Doc: "Windows ActiveSync AutoStart entries", Sources: []artifacts.Source{{Parent: "WindowsActiveSyncAutoStart", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsTimezone", Doc: "The time zone of the system as a Windows time zone name or in MUI form.", Sources: []artifacts.Source{{Parent: "WindowsTimezone", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation", Value: "StandardName"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation", Value: "TimeZoneKeyName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsToolPaths", Doc: "Paths to windows tools such as defrag, chkdsk.", Sources: []artifacts.Source{{Parent: "WindowsToolPaths", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\BackupPath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\ChkDskPath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\cleanuppath", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\DefragPath"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUninstallKeys", Doc: "Uninstall Registry keys", Sources: []artifacts.Source{{Parent: "WindowsUninstallKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*", "HKEY_LOCAL_MACHINE\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUserShellFoldersOfInterest", Doc: "The Shell Folders information for Windows users, defined as single values for knowledge base extraction", Sources: []artifacts.Source{{Parent: "WindowsUserShellFoldersOfInterest", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "AppData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.appdata", Regex: "", WMIKey: ""}}}, {Parent: "WindowsUserShellFoldersOfInterest", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", Value: "Local AppData"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.localappdata", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonGinaDLL", Doc: "Windows Gina DLL replacement.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonGinaDLL", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "GinaDLL"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "GinaDLL"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonNotify", Doc: "Windows Winlogon Notify DLL names.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonNotify", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\*", Value: "DLLName"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\*", Value: "DLLName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonShell", Doc: "Windows shell replacement.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonShell", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Shell"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Shell"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonSystem", Doc: "Applications launched by Winlogon in the system context during the system initialisation.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonSystem", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "System"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "System"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonTaskman", Doc: "Windows Winlogon Taskman replacement.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonTaskman", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Taskman"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Taskman"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonUiHost", Doc: "Windows Winlogon UI screen application", Sources: []artifacts.Source{{Parent: "WindowsWinlogonUiHost", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "UiHost"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "UiHost"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonUserinit", Doc: "Windows Winlogon Userinit replacement.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonUserinit", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Userinit"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "Userinit"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonAvailableShells", Doc: "Windows Server Winlogon Available Shells\n\nUsed to specify an alternate shell application to be launched when\nlogging into Windows Server 2012 and later. Legitimate keys under\nAvailableShells should just cause cmd.exe or explorer.exe to be executed,\nwhereas malicious programs may create keys that cause malware to be run\nwhen a user logs in.\n", Sources: []artifacts.Source{{Parent: "WindowsWinlogonAvailableShells", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AlternateShells\\AvailableShells\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonVMApplet", Doc: "Windows VMApplet replacement.", Sources: []artifacts.Source{{Parent: "WindowsWinlogonVMApplet", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "VMApplet"}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "VMApplet"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonAppSetup", Doc: "Windows Winlogon Appsetup", Sources: []artifacts.Source{{Parent: "WindowsWinlogonAppSetup", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", Value: "AppSetup"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsWinlogonGPExtensions", Doc: "Windows Winlogon Group Policy Extensions\n\nThese keys specify DLLs that should be loaded when the group policy\nengine loads, and can act as a persistence mechanism for malware.\n", Sources: []artifacts.Source{{Parent: "WindowsWinlogonGPExtensions", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: "DllName"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\\*", Value: "DllName"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WinSock2LayeredServiceProviders", Doc: "Used to filter TCP/IP traffic through WinSock2.", Sources: []artifacts.Source{{Parent: "WinSock2LayeredServiceProviders", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\Protocol_Catalog9\\Catalog_Entries\\*", "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\Protocol_Catalog9\\Catalog_Entries64\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WinSock2NamespaceProviders", Doc: "Used to provide name-resolution services through WinSock2", Sources: []artifacts.Source{{Parent: "WinSock2NamespaceProviders", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\NameSpace_Catalog5\\Catalog_Entries\\*", Value: "LibraryPath"}, {Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters\\NameSpace_Catalog5\\Catalog_Entries64\\*", Value: "LibraryPath"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsJobFiles", Doc: "Files for the Windows Task Scheduler", Sources: []artifacts.Source{{Parent: "WindowsJobFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\system32\\Tasks\\**10", "%%environ_systemroot%%\\Tasks\\**10"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsNetworkInterfaceInformation", Doc: "Details for network interfaces and their names", Sources: []artifacts.Source{{Parent: "WindowsNetworkInterfaceInformation", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet*\\Services\\Tcpip\\Parameters\\Interfaces\\*", "HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet*\\Control\\Network\\{4D36E972-E325-11CE-BFC1-08002BE10318}\\*\\Connection"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsHotfixes", Doc: "Windows Registry Keys that contain Hotfix information", Sources: []artifacts.Source{{Parent: "WindowsHotfixes", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component Based Servicing\\Packages\\*", "HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Updates\\*\\*", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Updates\\*\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsDefaultPaths", Doc: "Default Paths for many parameters", Sources: []artifacts.Source{{Parent: "WindowsDefaultPaths", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemdrive%%\\Users"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "environ_profilesdirectory", Regex: "", WMIKey: ""}}}, {Parent: "WindowsDefaultPaths", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_profilesdirectory%%\\*", "\\Users\\*"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.userprofile", Regex: "", WMIKey: ""}, {Key: "users.username", Regex: ".*\\\\(.+)", WMIKey: ""}}}, {Parent: "WindowsDefaultPaths", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_profilesdirectory%%\\*\\AppData\\Roaming", "\\Users\\*\\AppData\\Roaming"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.appdata", Regex: "", WMIKey: ""}}}, {Parent: "WindowsDefaultPaths", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_profilesdirectory%%\\*\\AppData\\Local", "\\Users\\*\\AppData\\Local"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.localappdata", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUserSIDDefaultKeys", Doc: "Bruteforce SIDs", Sources: []artifacts.Source{{Parent: "WindowsUserSIDDefaultKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "users.sid", Regex: ".*\\\\(.+)", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEventLogs", Doc: "Windows Event logs.", Sources: []artifacts.Source{{Parent: "WindowsEventLogs", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsEventLogApplicationFile", "WindowsEventLogSecurityFile", "WindowsEventLogSystemFile", "WindowsXMLEventLogApplicationFile", "WindowsXMLEventLogSecurityFile", "WindowsXMLEventLogSysmonFile", "WindowsXMLEventLogSystemFile", "WindowsXMLEventLogTerminalServicesFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEventLogPath", Doc: "Windows Event log locations.", Sources: []artifacts.Source{{Parent: "WindowsEventLogPath", Type: "PATH", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\System32\\config", "%%environ_systemroot%%\\System32\\winevt\\Logs"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide{{Key: "windows_event_logs", Regex: "", WMIKey: ""}}}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEventLogApplicationFile", Doc: "Application Windows Event Log.", Sources: []artifacts.Source{{Parent: "WindowsEventLogApplicationFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\AppEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEventLogSecurityFile", Doc: "Security Windows Event Log.", Sources: []artifacts.Source{{Parent: "WindowsEventLogSecurityFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\SecEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsEventLogSystemFile", Doc: "System Windows Event Log.", Sources: []artifacts.Source{{Parent: "WindowsEventLogSystemFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\SysEvent.evt"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsXMLEventLogApplicationFile", Doc: "Application Windows XML Event Log.", Sources: []artifacts.Source{{Parent: "WindowsXMLEventLogApplicationFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\Application.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsXMLEventLogSecurityFile", Doc: "Security Windows XML Event Log.", Sources: []artifacts.Source{{Parent: "WindowsXMLEventLogSecurityFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\Security.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsXMLEventLogSysmonFile", Doc: "Sysmon Windows XML Event Log.", Sources: []artifacts.Source{{Parent: "WindowsXMLEventLogSysmonFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\Microsoft-Windows-Sysmon%4Operational.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsXMLEventLogSystemFile", Doc: "System Windows XML Event Log.", Sources: []artifacts.Source{{Parent: "WindowsXMLEventLogSystemFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\System.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsXMLEventLogTerminalServicesFile", Doc: "TerminalServices Windows XML Event Log.", Sources: []artifacts.Source{{Parent: "WindowsXMLEventLogTerminalServicesFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%windows_event_logs%%\\Microsoft-Windows-TerminalServices-LocalSessionManager%4Operational.evtx"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsPersistence", Doc: "Windows persistence mechanisms.", Sources: []artifacts.Source{{Parent: "WindowsPersistence", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsEnvironmentVariableSystemRoot", "WindowsRegistryProfiles", "WindowsPersistenceMechanisms", "WindowsApplicationCompatibilityShims", "WindowsAppCertDLLsAlt", "WindowsCOMProperties", "WindowsBrowserPersistenceKeys", "InternetExplorerBrowserHelperObjectsRegistryKeys", "WindowsBrowserPersistenceFiles", "WindowsFileAssociation", "WindowsScheduledTasks", "WindowsTimeProviders", "WindowsSIPandTrustProviderHijacking", "WindowsKnownDLLs", "WindowsOfficeApplicationStartup", "WindowsImageHijacks", "WindowsCommandProcessorAutoRun", "WindowsDebugger", "WindowsCodecs", "WindowsFontDriversAlt", "WindowsStartupFolders", "WindowsStartupScript", "WindowsGroupPolicyScripts", "WindowsLogonScript", "WindowsLogoffScript"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsBrowserPersistenceKeys", Doc: "Registry keys for various browser extensions or wrapper objects.", Sources: []artifacts.Source{{Parent: "WindowsBrowserPersistenceKeys", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Extensions\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Internet Explorer\\Extensions\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsBrowserPersistenceFiles", Doc: "Windows Scheduled Tasks.", Sources: []artifacts.Source{{Parent: "WindowsBrowserPersistenceFiles", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%users.appdata%%\\Mozilla\\Firefox\\Profiles\\*\\extensions.json"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsFileAssociation", Doc: "User file association preferences", Sources: []artifacts.Source{{Parent: "WindowsFileAssociation", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\*\\OpenWithList", "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\*\\OpenWithList"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsImageHijacks", Doc: "Various image hijack mechanisms used for persistence.", Sources: []artifacts.Source{{Parent: "WindowsImageHijacks", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*", Value: "MonitorProcess"}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Exefile\\Shell\\Open\\Command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Exefile\\Shell\\Open\\Command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\Htmlfile\\Shell\\Open\\Command", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Htmlfile\\Shell\\Open\\Command", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\.cmd", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\.cmd", Value: ""}, {Key: "HKEY_LOCAL_MACHINE\\Software\\Classes\\.exe", Value: ""}, {Key: "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\.exe", Value: ""}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsTimeProviders", Doc: "Windows time provider services.", Sources: []artifacts.Source{{Parent: "WindowsTimeProviders", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\*"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsSIPandTrustProviderHijacking", Doc: "SIP are responsible for signature procession and can be abused by adversaries.", Sources: []artifacts.Source{{Parent: "WindowsSIPandTrustProviderHijacking", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\*", Value: "Dll"}, {Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\*", Value: "Dll"}, {Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\*", Value: "`$DLL"}, {Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\*", Value: "Dll"}, {Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\*", Value: "Dll"}, {Key: "HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\*", Value: "`$DLL"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsKnownDLLs", Doc: "DLLs that can be abused by search order hijacking.", Sources: []artifacts.Source{{Parent: "WindowsKnownDLLs", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\KnownDLLs"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsOfficeApplicationStartup", Doc: "Add-ins and plug-ins registered to hook into office apps.", Sources: []artifacts.Source{{Parent: "WindowsOfficeApplicationStartup", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office test\\Special\\Perf", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office\\*\\Addins\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office\\*\\Addins\\*", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Office\\*\\Addins\\*", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Office\\*\\Addins\\*", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office\\*\\Outlook\\WebView\\Calendar\\URL", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office\\*\\Outlook\\WebView\\Calendar\\URL", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office\\*\\Outlook\\WebView\\Inbox", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Office\\*\\Outlook\\WebView\\Inbox"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsCodecs", Doc: "Codecs are executable software that can be loaded by media playback software. They could be abused for system persistence.", Sources: []artifacts.Source{{Parent: "WindowsCodecs", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Classes\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Classes\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Classes\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Classes\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Classes\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Classes\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Classes\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Classes\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32", "HKEY_USERS\\%%users.sid%%\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32", "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance", "HKEY_LOCAL_MACHINE\\Software\\Classes\\Filter", "HKEY_USERS\\%%users.sid%%\\Software\\Classes\\Filter", "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32", "HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsAppCertDLLsAlt", Doc: "Windows AppCertDLLs persistence.", Sources: []artifacts.Source{{Parent: "WindowsAppCertDLLsAlt", Type: "REGISTRY_VALUE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair{{Key: "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager", Value: "AppCertDLLs"}}}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsFontDriversAlt", Doc: "Windows font drivers from the Registry.", Sources: []artifacts.Source{{Parent: "WindowsFontDriversAlt", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Font Drivers"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUSBInformation", Doc: "Windows Event logs.", Sources: []artifacts.Source{{Parent: "WindowsUSBInformation", Type: "ARTIFACT_GROUP", Attributes: artifacts.Attributes{Names: []string{"WindowsUSBDeviceInformations", "WindowsUSBVolumeAndDriveMapping", "WindowsUSBUserMountedDevices", "WindowsDeviceSetupFile"}, Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUSBDeviceInformations", Doc: "Windows USB Device Informations.\n\nUSBSTOR subkey only exists when there ever was an USB device mounted.\n", Sources: []artifacts.Source{{Parent: "WindowsUSBDeviceInformations", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR\\**"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUSBVolumeAndDriveMapping", Doc: "Windows USB volume and drive mapping.\n\nDisplays the mapping of USB devices to drives and volumes.\n", Sources: []artifacts.Source{{Parent: "WindowsUSBVolumeAndDriveMapping", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_LOCAL_MACHINE\\SYSTEM\\MountedDevices"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsUSBUserMountedDevices", Doc: "Windows USB user mounted devices.\n\nShows the GUIDs of all devices the user has ever mounted.\n", Sources: []artifacts.Source{{Parent: "WindowsUSBUserMountedDevices", Type: "REGISTRY_KEY", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string(nil), Separator: "", Cmd: "", Args: []string(nil), Keys: []string{"HKEY_USERS\\%%users.sid%%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MountPoints2\\**"}, Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}, {Name: "WindowsDeviceSetupFile", Doc: "Logfiles for Windows PNP driver installation", Sources: []artifacts.Source{{Parent: "WindowsDeviceSetupFile", Type: "FILE", Attributes: artifacts.Attributes{Names: []string(nil), Paths: []string{"%%environ_systemroot%%\\inf\\setupapi*.log"}, Separator: "\\", Cmd: "", Args: []string(nil), Keys: []string(nil), Query: "", BaseObject: "", KeyValuePairs: []artifacts.KeyValuePair(nil)}, Conditions: []string(nil), SupportedOs: []string(nil), Provides: []artifacts.Provide(nil)}}, Conditions: []string(nil), Provides: []string(nil), Labels: []string(nil), SupportedOs: []string{"Windows"}, Urls: []string(nil)}}
